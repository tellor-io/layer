// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: layer/reporter/tx.proto

package types

import (
	context "context"
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/cosmos-sdk/x/staking/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b904a7aa978eb1, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b904a7aa978eb1, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

// MsgCreateReporter defines the Msg/CreateReporter request type.
type MsgCreateReporter struct {
	// reporter_address is the address of the reporter.
	ReporterAddress   string                      `protobuf:"bytes,1,opt,name=reporter_address,json=reporterAddress,proto3" json:"reporter_address,omitempty"`
	CommissionRate    cosmossdk_io_math.LegacyDec `protobuf:"bytes,2,opt,name=commission_rate,json=commissionRate,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"commission_rate"`
	MinTokensRequired cosmossdk_io_math.Int       `protobuf:"bytes,3,opt,name=min_tokens_required,json=minTokensRequired,proto3,customtype=cosmossdk.io/math.Int" json:"min_tokens_required"`
}

func (m *MsgCreateReporter) Reset()         { *m = MsgCreateReporter{} }
func (m *MsgCreateReporter) String() string { return proto.CompactTextString(m) }
func (*MsgCreateReporter) ProtoMessage()    {}
func (*MsgCreateReporter) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b904a7aa978eb1, []int{2}
}
func (m *MsgCreateReporter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateReporter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateReporter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateReporter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateReporter.Merge(m, src)
}
func (m *MsgCreateReporter) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateReporter) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateReporter.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateReporter proto.InternalMessageInfo

func (m *MsgCreateReporter) GetReporterAddress() string {
	if m != nil {
		return m.ReporterAddress
	}
	return ""
}

// MsgCreateReporterResponse defines the Msg/CreateReporter response type.
type MsgCreateReporterResponse struct {
}

func (m *MsgCreateReporterResponse) Reset()         { *m = MsgCreateReporterResponse{} }
func (m *MsgCreateReporterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateReporterResponse) ProtoMessage()    {}
func (*MsgCreateReporterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b904a7aa978eb1, []int{3}
}
func (m *MsgCreateReporterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateReporterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateReporterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateReporterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateReporterResponse.Merge(m, src)
}
func (m *MsgCreateReporterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateReporterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateReporterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateReporterResponse proto.InternalMessageInfo

// MsgSelectReporter defines the Msg/SelectReporter request type.
type MsgSelectReporter struct {
	// selector_address is the address of the selector.
	SelectorAddress string `protobuf:"bytes,1,opt,name=selector_address,json=selectorAddress,proto3" json:"selector_address,omitempty"`
	// reporter_address is the address of the reporter to select.
	ReporterAddress string `protobuf:"bytes,2,opt,name=reporter_address,json=reporterAddress,proto3" json:"reporter_address,omitempty"`
}

func (m *MsgSelectReporter) Reset()         { *m = MsgSelectReporter{} }
func (m *MsgSelectReporter) String() string { return proto.CompactTextString(m) }
func (*MsgSelectReporter) ProtoMessage()    {}
func (*MsgSelectReporter) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b904a7aa978eb1, []int{4}
}
func (m *MsgSelectReporter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSelectReporter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSelectReporter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSelectReporter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSelectReporter.Merge(m, src)
}
func (m *MsgSelectReporter) XXX_Size() int {
	return m.Size()
}
func (m *MsgSelectReporter) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSelectReporter.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSelectReporter proto.InternalMessageInfo

func (m *MsgSelectReporter) GetSelectorAddress() string {
	if m != nil {
		return m.SelectorAddress
	}
	return ""
}

func (m *MsgSelectReporter) GetReporterAddress() string {
	if m != nil {
		return m.ReporterAddress
	}
	return ""
}

type MsgSelectReporterResponse struct {
}

func (m *MsgSelectReporterResponse) Reset()         { *m = MsgSelectReporterResponse{} }
func (m *MsgSelectReporterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSelectReporterResponse) ProtoMessage()    {}
func (*MsgSelectReporterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b904a7aa978eb1, []int{5}
}
func (m *MsgSelectReporterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSelectReporterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSelectReporterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSelectReporterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSelectReporterResponse.Merge(m, src)
}
func (m *MsgSelectReporterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSelectReporterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSelectReporterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSelectReporterResponse proto.InternalMessageInfo

// MsgSwitchReporter defines the Msg/SwitchReporter request type.
type MsgSwitchReporter struct {
	// selector_address is the address of the selector.
	SelectorAddress string `protobuf:"bytes,1,opt,name=selector_address,json=selectorAddress,proto3" json:"selector_address,omitempty"`
	// reporter_address is the address of the reporter to switch.
	ReporterAddress string `protobuf:"bytes,2,opt,name=reporter_address,json=reporterAddress,proto3" json:"reporter_address,omitempty"`
}

func (m *MsgSwitchReporter) Reset()         { *m = MsgSwitchReporter{} }
func (m *MsgSwitchReporter) String() string { return proto.CompactTextString(m) }
func (*MsgSwitchReporter) ProtoMessage()    {}
func (*MsgSwitchReporter) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b904a7aa978eb1, []int{6}
}
func (m *MsgSwitchReporter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSwitchReporter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSwitchReporter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSwitchReporter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSwitchReporter.Merge(m, src)
}
func (m *MsgSwitchReporter) XXX_Size() int {
	return m.Size()
}
func (m *MsgSwitchReporter) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSwitchReporter.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSwitchReporter proto.InternalMessageInfo

func (m *MsgSwitchReporter) GetSelectorAddress() string {
	if m != nil {
		return m.SelectorAddress
	}
	return ""
}

func (m *MsgSwitchReporter) GetReporterAddress() string {
	if m != nil {
		return m.ReporterAddress
	}
	return ""
}

// MsgSwitchReporterResponse defines the Msg/SwitchReporter response type.
type MsgSwitchReporterResponse struct {
}

func (m *MsgSwitchReporterResponse) Reset()         { *m = MsgSwitchReporterResponse{} }
func (m *MsgSwitchReporterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSwitchReporterResponse) ProtoMessage()    {}
func (*MsgSwitchReporterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b904a7aa978eb1, []int{7}
}
func (m *MsgSwitchReporterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSwitchReporterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSwitchReporterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSwitchReporterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSwitchReporterResponse.Merge(m, src)
}
func (m *MsgSwitchReporterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSwitchReporterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSwitchReporterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSwitchReporterResponse proto.InternalMessageInfo

// MsgRemoveSelector defines the Msg/RemoveSelector request type.
type MsgRemoveSelector struct {
	// any_address is the caller which can be any address.
	AnyAddress string `protobuf:"bytes,1,opt,name=any_address,json=anyAddress,proto3" json:"any_address,omitempty"`
	// selector_address is the address of the selector.
	SelectorAddress string `protobuf:"bytes,2,opt,name=selector_address,json=selectorAddress,proto3" json:"selector_address,omitempty"`
}

func (m *MsgRemoveSelector) Reset()         { *m = MsgRemoveSelector{} }
func (m *MsgRemoveSelector) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSelector) ProtoMessage()    {}
func (*MsgRemoveSelector) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b904a7aa978eb1, []int{8}
}
func (m *MsgRemoveSelector) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSelector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSelector.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSelector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSelector.Merge(m, src)
}
func (m *MsgRemoveSelector) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSelector) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSelector.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSelector proto.InternalMessageInfo

func (m *MsgRemoveSelector) GetAnyAddress() string {
	if m != nil {
		return m.AnyAddress
	}
	return ""
}

func (m *MsgRemoveSelector) GetSelectorAddress() string {
	if m != nil {
		return m.SelectorAddress
	}
	return ""
}

// MsgRemoveSelectorResponse defines the Msg/RemoveSelector response type.
type MsgRemoveSelectorResponse struct {
}

func (m *MsgRemoveSelectorResponse) Reset()         { *m = MsgRemoveSelectorResponse{} }
func (m *MsgRemoveSelectorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSelectorResponse) ProtoMessage()    {}
func (*MsgRemoveSelectorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b904a7aa978eb1, []int{9}
}
func (m *MsgRemoveSelectorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSelectorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSelectorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSelectorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSelectorResponse.Merge(m, src)
}
func (m *MsgRemoveSelectorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSelectorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSelectorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSelectorResponse proto.InternalMessageInfo

// MsgUnjailReporter defines the Msg/UnjailReporter request type.
type MsgUnjailReporter struct {
	ReporterAddress string `protobuf:"bytes,1,opt,name=reporter_address,json=reporterAddress,proto3" json:"reporter_address,omitempty"`
}

func (m *MsgUnjailReporter) Reset()         { *m = MsgUnjailReporter{} }
func (m *MsgUnjailReporter) String() string { return proto.CompactTextString(m) }
func (*MsgUnjailReporter) ProtoMessage()    {}
func (*MsgUnjailReporter) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b904a7aa978eb1, []int{10}
}
func (m *MsgUnjailReporter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnjailReporter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnjailReporter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnjailReporter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnjailReporter.Merge(m, src)
}
func (m *MsgUnjailReporter) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnjailReporter) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnjailReporter.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnjailReporter proto.InternalMessageInfo

// MsgUnjailReporterResponse defines the Msg/UnjailReporter response type.
type MsgUnjailReporterResponse struct {
}

func (m *MsgUnjailReporterResponse) Reset()         { *m = MsgUnjailReporterResponse{} }
func (m *MsgUnjailReporterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUnjailReporterResponse) ProtoMessage()    {}
func (*MsgUnjailReporterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b904a7aa978eb1, []int{11}
}
func (m *MsgUnjailReporterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnjailReporterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnjailReporterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnjailReporterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnjailReporterResponse.Merge(m, src)
}
func (m *MsgUnjailReporterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnjailReporterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnjailReporterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnjailReporterResponse proto.InternalMessageInfo

// MsgWithdrawTip defines the Msg/WithdrawTip request type.
type MsgWithdrawTip struct {
	SelectorAddress  string `protobuf:"bytes,1,opt,name=selector_address,json=selectorAddress,proto3" json:"selector_address,omitempty"`
	ValidatorAddress string `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
}

func (m *MsgWithdrawTip) Reset()         { *m = MsgWithdrawTip{} }
func (m *MsgWithdrawTip) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawTip) ProtoMessage()    {}
func (*MsgWithdrawTip) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b904a7aa978eb1, []int{12}
}
func (m *MsgWithdrawTip) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawTip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawTip.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawTip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawTip.Merge(m, src)
}
func (m *MsgWithdrawTip) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawTip) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawTip.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawTip proto.InternalMessageInfo

func (m *MsgWithdrawTip) GetSelectorAddress() string {
	if m != nil {
		return m.SelectorAddress
	}
	return ""
}

func (m *MsgWithdrawTip) GetValidatorAddress() string {
	if m != nil {
		return m.ValidatorAddress
	}
	return ""
}

// MsgWithdrawTipResponse defines the Msg/WithdrawTip response type.
type MsgWithdrawTipResponse struct {
}

func (m *MsgWithdrawTipResponse) Reset()         { *m = MsgWithdrawTipResponse{} }
func (m *MsgWithdrawTipResponse) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawTipResponse) ProtoMessage()    {}
func (*MsgWithdrawTipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b904a7aa978eb1, []int{13}
}
func (m *MsgWithdrawTipResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawTipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawTipResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawTipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawTipResponse.Merge(m, src)
}
func (m *MsgWithdrawTipResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawTipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawTipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawTipResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "layer.reporter.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "layer.reporter.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgCreateReporter)(nil), "layer.reporter.MsgCreateReporter")
	proto.RegisterType((*MsgCreateReporterResponse)(nil), "layer.reporter.MsgCreateReporterResponse")
	proto.RegisterType((*MsgSelectReporter)(nil), "layer.reporter.MsgSelectReporter")
	proto.RegisterType((*MsgSelectReporterResponse)(nil), "layer.reporter.MsgSelectReporterResponse")
	proto.RegisterType((*MsgSwitchReporter)(nil), "layer.reporter.MsgSwitchReporter")
	proto.RegisterType((*MsgSwitchReporterResponse)(nil), "layer.reporter.MsgSwitchReporterResponse")
	proto.RegisterType((*MsgRemoveSelector)(nil), "layer.reporter.MsgRemoveSelector")
	proto.RegisterType((*MsgRemoveSelectorResponse)(nil), "layer.reporter.MsgRemoveSelectorResponse")
	proto.RegisterType((*MsgUnjailReporter)(nil), "layer.reporter.MsgUnjailReporter")
	proto.RegisterType((*MsgUnjailReporterResponse)(nil), "layer.reporter.MsgUnjailReporterResponse")
	proto.RegisterType((*MsgWithdrawTip)(nil), "layer.reporter.MsgWithdrawTip")
	proto.RegisterType((*MsgWithdrawTipResponse)(nil), "layer.reporter.MsgWithdrawTipResponse")
}

func init() { proto.RegisterFile("layer/reporter/tx.proto", fileDescriptor_67b904a7aa978eb1) }

var fileDescriptor_67b904a7aa978eb1 = []byte{
	// 834 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0xcf, 0x4f, 0xdb, 0x48,
	0x14, 0x8e, 0x83, 0x40, 0xca, 0xb0, 0xca, 0x0f, 0x2f, 0x3f, 0x42, 0x10, 0x0e, 0x44, 0xab, 0x5d,
	0x7e, 0x28, 0xb1, 0x00, 0x09, 0x09, 0x6e, 0x1b, 0xd8, 0x03, 0xd2, 0x66, 0xb5, 0x32, 0xb0, 0xbb,
	0xda, 0x95, 0x36, 0x9a, 0x38, 0x23, 0x67, 0x4a, 0xec, 0x49, 0x67, 0x86, 0x40, 0x6e, 0x55, 0x4f,
	0x55, 0x4f, 0x95, 0x7a, 0xae, 0xc4, 0xa5, 0x52, 0x8f, 0x1c, 0x72, 0xa9, 0xd4, 0x3f, 0x80, 0x23,
	0xe2, 0x54, 0xf5, 0x80, 0x2a, 0x38, 0xd0, 0x3f, 0xa3, 0xb2, 0x3d, 0x4e, 0x62, 0x67, 0x0a, 0x45,
	0xea, 0xa5, 0x97, 0x24, 0x9e, 0xf7, 0xde, 0xf7, 0xbe, 0xef, 0xb3, 0xdf, 0x8b, 0xc1, 0x74, 0x13,
	0x76, 0x10, 0xd5, 0x29, 0x6a, 0x11, 0xca, 0x11, 0xd5, 0xf9, 0x49, 0xa9, 0x45, 0x09, 0x27, 0x6a,
	0xd2, 0x0b, 0x94, 0x82, 0x40, 0x2e, 0x03, 0x6d, 0xec, 0x10, 0xdd, 0xfb, 0xf4, 0x53, 0x72, 0x9a,
	0x49, 0x98, 0x4d, 0x98, 0x5e, 0x83, 0x0c, 0xe9, 0xed, 0xd5, 0x1a, 0xe2, 0x70, 0x55, 0x37, 0x09,
	0x76, 0x44, 0x7c, 0x5a, 0xc4, 0x6d, 0x66, 0xe9, 0xed, 0x55, 0xf7, 0x4b, 0x04, 0x7e, 0x12, 0x01,
	0xc6, 0xe1, 0x21, 0x76, 0xac, 0x5e, 0xad, 0xb8, 0x16, 0x59, 0x33, 0x7e, 0x56, 0xd5, 0xbb, 0xd2,
	0xfd, 0x0b, 0x11, 0x9a, 0xb0, 0x88, 0x45, 0xfc, 0x73, 0xf7, 0x97, 0x38, 0x9d, 0x8d, 0x68, 0x69,
	0x41, 0x0a, 0xed, 0xa0, 0x64, 0x21, 0x2a, 0x94, 0x1c, 0x22, 0xa7, 0x4a, 0x28, 0xb6, 0x02, 0xbe,
	0x85, 0xb7, 0x0a, 0x48, 0x55, 0x98, 0x75, 0xd0, 0xaa, 0x43, 0x8e, 0xfe, 0xf4, 0x8a, 0xd5, 0x0d,
	0x90, 0x80, 0x47, 0xbc, 0x41, 0x28, 0xe6, 0x9d, 0xac, 0x32, 0xaf, 0x2c, 0x26, 0xca, 0xd9, 0xcb,
	0x6e, 0x71, 0x42, 0xd0, 0xf9, 0xb5, 0x5e, 0xa7, 0x88, 0xb1, 0x3d, 0x4e, 0xb1, 0x63, 0x19, 0xfd,
	0x54, 0x75, 0x13, 0x8c, 0xf9, 0xed, 0xb3, 0xf1, 0x79, 0x65, 0x71, 0x7c, 0x6d, 0xaa, 0x14, 0xf6,
	0xb3, 0xe4, 0xe3, 0x97, 0x13, 0xe7, 0x57, 0xf9, 0xd8, 0x9b, 0xdb, 0xb3, 0x65, 0xc5, 0x10, 0x05,
	0x5b, 0xeb, 0x4f, 0x6f, 0xcf, 0x96, 0xfb, 0x50, 0xcf, 0x6f, 0xcf, 0x96, 0xe7, 0x7d, 0xf2, 0x27,
	0x7d, 0xfa, 0x11, 0x9e, 0x85, 0x19, 0x30, 0x1d, 0x39, 0x32, 0x10, 0x6b, 0x11, 0x87, 0xa1, 0xc2,
	0xcb, 0x38, 0xc8, 0x54, 0x98, 0xb5, 0x4d, 0x11, 0xe4, 0xc8, 0x10, 0x00, 0xea, 0x12, 0x48, 0x07,
	0x60, 0x55, 0xe8, 0xab, 0xf0, 0xf5, 0x19, 0xa9, 0xe0, 0x5c, 0x88, 0x53, 0xab, 0x20, 0x65, 0x12,
	0xdb, 0xc6, 0x8c, 0x61, 0xe2, 0x54, 0x29, 0xe4, 0xc8, 0x13, 0x95, 0x28, 0x6f, 0xb8, 0xe4, 0x3f,
	0x5c, 0xe5, 0x67, 0x7d, 0x37, 0x58, 0xfd, 0xb0, 0x84, 0x89, 0x6e, 0x43, 0xde, 0x28, 0xfd, 0x8e,
	0x2c, 0x68, 0x76, 0x76, 0x90, 0x79, 0xd9, 0x2d, 0x02, 0x61, 0xd6, 0x0e, 0x32, 0x7d, 0xa5, 0xc9,
	0x3e, 0x9c, 0x01, 0x39, 0x52, 0xff, 0x03, 0x3f, 0xda, 0xd8, 0xa9, 0x7a, 0xb7, 0x84, 0x55, 0x29,
	0x7a, 0x7c, 0x84, 0x29, 0xaa, 0x67, 0x47, 0xbc, 0x26, 0x2b, 0xa2, 0xc9, 0xe4, 0x70, 0x93, 0x5d,
	0x87, 0x0f, 0xc0, 0xef, 0x3a, 0xdc, 0xc8, 0xd8, 0xd8, 0xd9, 0xf7, 0x60, 0x0c, 0x81, 0xb2, 0x35,
	0xe9, 0xda, 0x39, 0xa4, 0xb5, 0x30, 0x0b, 0x66, 0x86, 0x4c, 0xe9, 0x59, 0xd6, 0x55, 0x3c, 0xcb,
	0xf6, 0x50, 0x13, 0x99, 0xbc, 0x67, 0xd9, 0x36, 0x48, 0x33, 0xef, 0x84, 0x44, 0x2c, 0xbb, 0xe3,
	0x91, 0x48, 0x05, 0x15, 0x81, 0x99, 0xdb, 0x12, 0xdf, 0xe3, 0xf7, 0x81, 0x44, 0xee, 0x88, 0xd0,
	0x14, 0x25, 0x23, 0x34, 0x85, 0x59, 0x0f, 0x69, 0x3a, 0xc6, 0xdc, 0x6c, 0x7c, 0x77, 0x9a, 0x42,
	0xac, 0x7b, 0x9a, 0x5e, 0xfb, 0x9a, 0x0c, 0x64, 0x93, 0x36, 0xda, 0x13, 0xa5, 0xea, 0x26, 0x18,
	0x87, 0x4e, 0xe7, 0xab, 0xe5, 0x00, 0xe8, 0x74, 0x06, 0x94, 0x0c, 0xd9, 0x11, 0x7f, 0xa0, 0x1d,
	0x5b, 0x69, 0x57, 0xc9, 0x20, 0x05, 0x21, 0x22, 0x4c, 0xb3, 0x27, 0xe2, 0xd8, 0xd3, 0x70, 0xe0,
	0x3c, 0x82, 0xb8, 0x39, 0x78, 0x5f, 0xe4, 0xe3, 0xf9, 0x10, 0x4b, 0xe7, 0x9e, 0x9d, 0xe6, 0x63,
	0x9f, 0x4e, 0xf3, 0xb1, 0xbb, 0x46, 0x20, 0xdc, 0xb8, 0xc7, 0xea, 0x9d, 0x02, 0x92, 0x15, 0x66,
	0xfd, 0x8d, 0x79, 0xa3, 0x4e, 0xe1, 0xf1, 0x3e, 0x6e, 0x7d, 0x9b, 0x67, 0xe5, 0x0f, 0x90, 0x69,
	0xc3, 0x26, 0xae, 0xc3, 0x61, 0x8b, 0x17, 0x2e, 0xbb, 0xc5, 0x39, 0x81, 0xf2, 0x57, 0x90, 0x13,
	0x86, 0x4b, 0xb7, 0x23, 0xe7, 0x5f, 0x7a, 0x6c, 0xb2, 0x60, 0x2a, 0xcc, 0x3e, 0x10, 0xb6, 0xf6,
	0x6a, 0x14, 0x8c, 0x54, 0x98, 0xa5, 0xfe, 0x03, 0x7e, 0x08, 0x6d, 0xfa, 0x7c, 0x74, 0x43, 0x47,
	0xf6, 0x69, 0xee, 0x97, 0x7b, 0x12, 0x82, 0x0e, 0xea, 0xff, 0x20, 0x19, 0x59, 0xb6, 0x0b, 0x92,
	0xd2, 0x70, 0x4a, 0x6e, 0xe9, 0xde, 0x94, 0x41, 0xfc, 0xc8, 0x66, 0x92, 0xe1, 0x87, 0x53, 0xa4,
	0xf8, 0xf2, 0x4d, 0xe1, 0xe1, 0x87, 0xb7, 0x84, 0x14, 0x3f, 0x94, 0x22, 0xc7, 0x97, 0x4e, 0xad,
	0x8b, 0x1f, 0x99, 0x58, 0x19, 0x7e, 0x38, 0x45, 0x8a, 0x2f, 0x1f, 0x28, 0x17, 0x3f, 0x32, 0x4d,
	0x32, 0xfc, 0x70, 0x8a, 0x14, 0x5f, 0x3e, 0x1a, 0xea, 0x01, 0x18, 0x1f, 0x1c, 0x0b, 0x4d, 0x52,
	0x39, 0x10, 0xcf, 0xfd, 0x7c, 0x77, 0x3c, 0x80, 0xcd, 0x8d, 0x3e, 0x71, 0xff, 0x1c, 0xcb, 0xbf,
	0x9d, 0x5f, 0x6b, 0xca, 0xc5, 0xb5, 0xa6, 0x7c, 0xbc, 0xd6, 0x94, 0x17, 0x37, 0x5a, 0xec, 0xe2,
	0x46, 0x8b, 0xbd, 0xbf, 0xd1, 0x62, 0xff, 0xae, 0x58, 0x98, 0x37, 0x8e, 0x6a, 0x25, 0x93, 0xd8,
	0x3a, 0x47, 0xcd, 0x26, 0xa1, 0x45, 0x4c, 0xf4, 0xa1, 0x57, 0x03, 0xde, 0x69, 0x21, 0x56, 0x1b,
	0xf3, 0xde, 0x69, 0xd6, 0x3f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x20, 0x9a, 0x3e, 0x13, 0xe1, 0x09,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	// CreateReporter defines a (reporter) operation for creating a new reporter.
	CreateReporter(ctx context.Context, in *MsgCreateReporter, opts ...grpc.CallOption) (*MsgCreateReporterResponse, error)
	// SelectReporter defines a (selector) operation for choosing a reporter.
	SelectReporter(ctx context.Context, in *MsgSelectReporter, opts ...grpc.CallOption) (*MsgSelectReporterResponse, error)
	// SwitchReporter defines a (selector) operation for switching a reporter.
	SwitchReporter(ctx context.Context, in *MsgSwitchReporter, opts ...grpc.CallOption) (*MsgSwitchReporterResponse, error)
	// RemoveSelector defines an operation for removing a selector that no longer meets
	// the reporter's minimum requirements and the reporter is capped.
	RemoveSelector(ctx context.Context, in *MsgRemoveSelector, opts ...grpc.CallOption) (*MsgRemoveSelectorResponse, error)
	// UnjailReporter defines a method to unjail a jailed reporter.
	UnjailReporter(ctx context.Context, in *MsgUnjailReporter, opts ...grpc.CallOption) (*MsgUnjailReporterResponse, error)
	// WithdrawTip defines a method to withdraw tip from a reporter module.
	WithdrawTip(ctx context.Context, in *MsgWithdrawTip, opts ...grpc.CallOption) (*MsgWithdrawTipResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/layer.reporter.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateReporter(ctx context.Context, in *MsgCreateReporter, opts ...grpc.CallOption) (*MsgCreateReporterResponse, error) {
	out := new(MsgCreateReporterResponse)
	err := c.cc.Invoke(ctx, "/layer.reporter.Msg/CreateReporter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SelectReporter(ctx context.Context, in *MsgSelectReporter, opts ...grpc.CallOption) (*MsgSelectReporterResponse, error) {
	out := new(MsgSelectReporterResponse)
	err := c.cc.Invoke(ctx, "/layer.reporter.Msg/SelectReporter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SwitchReporter(ctx context.Context, in *MsgSwitchReporter, opts ...grpc.CallOption) (*MsgSwitchReporterResponse, error) {
	out := new(MsgSwitchReporterResponse)
	err := c.cc.Invoke(ctx, "/layer.reporter.Msg/SwitchReporter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveSelector(ctx context.Context, in *MsgRemoveSelector, opts ...grpc.CallOption) (*MsgRemoveSelectorResponse, error) {
	out := new(MsgRemoveSelectorResponse)
	err := c.cc.Invoke(ctx, "/layer.reporter.Msg/RemoveSelector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UnjailReporter(ctx context.Context, in *MsgUnjailReporter, opts ...grpc.CallOption) (*MsgUnjailReporterResponse, error) {
	out := new(MsgUnjailReporterResponse)
	err := c.cc.Invoke(ctx, "/layer.reporter.Msg/UnjailReporter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) WithdrawTip(ctx context.Context, in *MsgWithdrawTip, opts ...grpc.CallOption) (*MsgWithdrawTipResponse, error) {
	out := new(MsgWithdrawTipResponse)
	err := c.cc.Invoke(ctx, "/layer.reporter.Msg/WithdrawTip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	// CreateReporter defines a (reporter) operation for creating a new reporter.
	CreateReporter(context.Context, *MsgCreateReporter) (*MsgCreateReporterResponse, error)
	// SelectReporter defines a (selector) operation for choosing a reporter.
	SelectReporter(context.Context, *MsgSelectReporter) (*MsgSelectReporterResponse, error)
	// SwitchReporter defines a (selector) operation for switching a reporter.
	SwitchReporter(context.Context, *MsgSwitchReporter) (*MsgSwitchReporterResponse, error)
	// RemoveSelector defines an operation for removing a selector that no longer meets
	// the reporter's minimum requirements and the reporter is capped.
	RemoveSelector(context.Context, *MsgRemoveSelector) (*MsgRemoveSelectorResponse, error)
	// UnjailReporter defines a method to unjail a jailed reporter.
	UnjailReporter(context.Context, *MsgUnjailReporter) (*MsgUnjailReporterResponse, error)
	// WithdrawTip defines a method to withdraw tip from a reporter module.
	WithdrawTip(context.Context, *MsgWithdrawTip) (*MsgWithdrawTipResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) CreateReporter(ctx context.Context, req *MsgCreateReporter) (*MsgCreateReporterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReporter not implemented")
}
func (*UnimplementedMsgServer) SelectReporter(ctx context.Context, req *MsgSelectReporter) (*MsgSelectReporterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SelectReporter not implemented")
}
func (*UnimplementedMsgServer) SwitchReporter(ctx context.Context, req *MsgSwitchReporter) (*MsgSwitchReporterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SwitchReporter not implemented")
}
func (*UnimplementedMsgServer) RemoveSelector(ctx context.Context, req *MsgRemoveSelector) (*MsgRemoveSelectorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSelector not implemented")
}
func (*UnimplementedMsgServer) UnjailReporter(ctx context.Context, req *MsgUnjailReporter) (*MsgUnjailReporterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnjailReporter not implemented")
}
func (*UnimplementedMsgServer) WithdrawTip(ctx context.Context, req *MsgWithdrawTip) (*MsgWithdrawTipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawTip not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/layer.reporter.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateReporter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateReporter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateReporter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/layer.reporter.Msg/CreateReporter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateReporter(ctx, req.(*MsgCreateReporter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SelectReporter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSelectReporter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SelectReporter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/layer.reporter.Msg/SelectReporter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SelectReporter(ctx, req.(*MsgSelectReporter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SwitchReporter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSwitchReporter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SwitchReporter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/layer.reporter.Msg/SwitchReporter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SwitchReporter(ctx, req.(*MsgSwitchReporter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveSelector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveSelector)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveSelector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/layer.reporter.Msg/RemoveSelector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveSelector(ctx, req.(*MsgRemoveSelector))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UnjailReporter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUnjailReporter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UnjailReporter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/layer.reporter.Msg/UnjailReporter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UnjailReporter(ctx, req.(*MsgUnjailReporter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_WithdrawTip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWithdrawTip)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).WithdrawTip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/layer.reporter.Msg/WithdrawTip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).WithdrawTip(ctx, req.(*MsgWithdrawTip))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "layer.reporter.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "CreateReporter",
			Handler:    _Msg_CreateReporter_Handler,
		},
		{
			MethodName: "SelectReporter",
			Handler:    _Msg_SelectReporter_Handler,
		},
		{
			MethodName: "SwitchReporter",
			Handler:    _Msg_SwitchReporter_Handler,
		},
		{
			MethodName: "RemoveSelector",
			Handler:    _Msg_RemoveSelector_Handler,
		},
		{
			MethodName: "UnjailReporter",
			Handler:    _Msg_UnjailReporter_Handler,
		},
		{
			MethodName: "WithdrawTip",
			Handler:    _Msg_WithdrawTip_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "layer/reporter/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateReporter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateReporter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateReporter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.MinTokensRequired.Size()
		i -= size
		if _, err := m.MinTokensRequired.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size := m.CommissionRate.Size()
		i -= size
		if _, err := m.CommissionRate.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.ReporterAddress) > 0 {
		i -= len(m.ReporterAddress)
		copy(dAtA[i:], m.ReporterAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReporterAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateReporterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateReporterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateReporterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSelectReporter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSelectReporter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSelectReporter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ReporterAddress) > 0 {
		i -= len(m.ReporterAddress)
		copy(dAtA[i:], m.ReporterAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReporterAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SelectorAddress) > 0 {
		i -= len(m.SelectorAddress)
		copy(dAtA[i:], m.SelectorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SelectorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSelectReporterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSelectReporterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSelectReporterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSwitchReporter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSwitchReporter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSwitchReporter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ReporterAddress) > 0 {
		i -= len(m.ReporterAddress)
		copy(dAtA[i:], m.ReporterAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReporterAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SelectorAddress) > 0 {
		i -= len(m.SelectorAddress)
		copy(dAtA[i:], m.SelectorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SelectorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSwitchReporterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSwitchReporterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSwitchReporterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSelector) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSelector) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSelector) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SelectorAddress) > 0 {
		i -= len(m.SelectorAddress)
		copy(dAtA[i:], m.SelectorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SelectorAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AnyAddress) > 0 {
		i -= len(m.AnyAddress)
		copy(dAtA[i:], m.AnyAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AnyAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSelectorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSelectorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSelectorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUnjailReporter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnjailReporter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnjailReporter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ReporterAddress) > 0 {
		i -= len(m.ReporterAddress)
		copy(dAtA[i:], m.ReporterAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReporterAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUnjailReporterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnjailReporterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnjailReporterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawTip) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawTip) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawTip) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ValidatorAddress) > 0 {
		i -= len(m.ValidatorAddress)
		copy(dAtA[i:], m.ValidatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ValidatorAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SelectorAddress) > 0 {
		i -= len(m.SelectorAddress)
		copy(dAtA[i:], m.SelectorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SelectorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawTipResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawTipResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawTipResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateReporter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ReporterAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.CommissionRate.Size()
	n += 1 + l + sovTx(uint64(l))
	l = m.MinTokensRequired.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgCreateReporterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSelectReporter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SelectorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReporterAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSelectReporterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSwitchReporter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SelectorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReporterAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSwitchReporterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveSelector) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AnyAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SelectorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveSelectorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUnjailReporter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ReporterAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUnjailReporterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgWithdrawTip) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SelectorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ValidatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgWithdrawTipResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateReporter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateReporter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateReporter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReporterAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReporterAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommissionRate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CommissionRate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinTokensRequired", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MinTokensRequired.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateReporterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateReporterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateReporterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSelectReporter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSelectReporter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSelectReporter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelectorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SelectorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReporterAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReporterAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSelectReporterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSelectReporterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSelectReporterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSwitchReporter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSwitchReporter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSwitchReporter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelectorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SelectorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReporterAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReporterAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSwitchReporterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSwitchReporterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSwitchReporterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSelector) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSelector: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSelector: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AnyAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AnyAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelectorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SelectorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSelectorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSelectorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSelectorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnjailReporter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnjailReporter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnjailReporter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReporterAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReporterAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnjailReporterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnjailReporterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnjailReporterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawTip) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawTip: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawTip: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelectorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SelectorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValidatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawTipResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawTipResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawTipResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
