// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package oracle

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_GenesisState_2_list)(nil)

type _GenesisState_2_list struct {
	list *[][]byte
}

func (x *_GenesisState_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_GenesisState_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message GenesisState at list field Cyclelist as it is not of Message kind"))
}

func (x *_GenesisState_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_2_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_GenesisState_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_4_list)(nil)

type _GenesisState_4_list struct {
	list *[]*MicroReport
}

func (x *_GenesisState_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MicroReport)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MicroReport)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_4_list) AppendMutable() protoreflect.Value {
	v := new(MicroReport)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_4_list) NewElement() protoreflect.Value {
	v := new(MicroReport)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_5_list)(nil)

type _GenesisState_5_list struct {
	list *[]*TipperTotalStateEntry
}

func (x *_GenesisState_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TipperTotalStateEntry)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TipperTotalStateEntry)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_5_list) AppendMutable() protoreflect.Value {
	v := new(TipperTotalStateEntry)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_5_list) NewElement() protoreflect.Value {
	v := new(TipperTotalStateEntry)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_6_list)(nil)

type _GenesisState_6_list struct {
	list *[]*TotalTipsStateEntry
}

func (x *_GenesisState_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TotalTipsStateEntry)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*TotalTipsStateEntry)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_6_list) AppendMutable() protoreflect.Value {
	v := new(TotalTipsStateEntry)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_6_list) NewElement() protoreflect.Value {
	v := new(TotalTipsStateEntry)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_7_list)(nil)

type _GenesisState_7_list struct {
	list *[]*NoncesStateEntry
}

func (x *_GenesisState_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*NoncesStateEntry)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*NoncesStateEntry)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_7_list) AppendMutable() protoreflect.Value {
	v := new(NoncesStateEntry)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_7_list) NewElement() protoreflect.Value {
	v := new(NoncesStateEntry)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_8_list)(nil)

type _GenesisState_8_list struct {
	list *[]*QueryMeta
}

func (x *_GenesisState_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*QueryMeta)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*QueryMeta)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_8_list) AppendMutable() protoreflect.Value {
	v := new(QueryMeta)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_8_list) NewElement() protoreflect.Value {
	v := new(QueryMeta)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_8_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_9_list)(nil)

type _GenesisState_9_list struct {
	list *[]*AggregateStateEntry
}

func (x *_GenesisState_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AggregateStateEntry)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AggregateStateEntry)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_9_list) AppendMutable() protoreflect.Value {
	v := new(AggregateStateEntry)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_9_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_9_list) NewElement() protoreflect.Value {
	v := new(AggregateStateEntry)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_9_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_10_list)(nil)

type _GenesisState_10_list struct {
	list *[]*ValuesStateEntry
}

func (x *_GenesisState_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ValuesStateEntry)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ValuesStateEntry)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_10_list) AppendMutable() protoreflect.Value {
	v := new(ValuesStateEntry)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_10_list) NewElement() protoreflect.Value {
	v := new(ValuesStateEntry)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_10_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_11_list)(nil)

type _GenesisState_11_list struct {
	list *[]*AggregateValueStateEntry
}

func (x *_GenesisState_11_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_11_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_11_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AggregateValueStateEntry)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_11_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AggregateValueStateEntry)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_11_list) AppendMutable() protoreflect.Value {
	v := new(AggregateValueStateEntry)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_11_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_11_list) NewElement() protoreflect.Value {
	v := new(AggregateValueStateEntry)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_11_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_12_list)(nil)

type _GenesisState_12_list struct {
	list *[]*ValuesWeightSumStateEntry
}

func (x *_GenesisState_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ValuesWeightSumStateEntry)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ValuesWeightSumStateEntry)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_12_list) AppendMutable() protoreflect.Value {
	v := new(ValuesWeightSumStateEntry)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_12_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_12_list) NewElement() protoreflect.Value {
	v := new(ValuesWeightSumStateEntry)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_12_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_13_list)(nil)

type _GenesisState_13_list struct {
	list *[]*ValuesWeightedModeStateEntry
}

func (x *_GenesisState_13_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_13_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_13_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ValuesWeightedModeStateEntry)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_13_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ValuesWeightedModeStateEntry)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_13_list) AppendMutable() protoreflect.Value {
	v := new(ValuesWeightedModeStateEntry)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_13_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_13_list) NewElement() protoreflect.Value {
	v := new(ValuesWeightedModeStateEntry)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_13_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GenesisState                      protoreflect.MessageDescriptor
	fd_GenesisState_params               protoreflect.FieldDescriptor
	fd_GenesisState_cyclelist            protoreflect.FieldDescriptor
	fd_GenesisState_query_data_limit     protoreflect.FieldDescriptor
	fd_GenesisState_reports              protoreflect.FieldDescriptor
	fd_GenesisState_tipper_total         protoreflect.FieldDescriptor
	fd_GenesisState_total_tips           protoreflect.FieldDescriptor
	fd_GenesisState_nonces               protoreflect.FieldDescriptor
	fd_GenesisState_query                protoreflect.FieldDescriptor
	fd_GenesisState_aggregates           protoreflect.FieldDescriptor
	fd_GenesisState_values               protoreflect.FieldDescriptor
	fd_GenesisState_aggregate_value      protoreflect.FieldDescriptor
	fd_GenesisState_values_weight_sum    protoreflect.FieldDescriptor
	fd_GenesisState_values_weighted_mode protoreflect.FieldDescriptor
)

func init() {
	file_layer_oracle_genesis_proto_init()
	md_GenesisState = File_layer_oracle_genesis_proto.Messages().ByName("GenesisState")
	fd_GenesisState_params = md_GenesisState.Fields().ByName("params")
	fd_GenesisState_cyclelist = md_GenesisState.Fields().ByName("cyclelist")
	fd_GenesisState_query_data_limit = md_GenesisState.Fields().ByName("query_data_limit")
	fd_GenesisState_reports = md_GenesisState.Fields().ByName("reports")
	fd_GenesisState_tipper_total = md_GenesisState.Fields().ByName("tipper_total")
	fd_GenesisState_total_tips = md_GenesisState.Fields().ByName("total_tips")
	fd_GenesisState_nonces = md_GenesisState.Fields().ByName("nonces")
	fd_GenesisState_query = md_GenesisState.Fields().ByName("query")
	fd_GenesisState_aggregates = md_GenesisState.Fields().ByName("aggregates")
	fd_GenesisState_values = md_GenesisState.Fields().ByName("values")
	fd_GenesisState_aggregate_value = md_GenesisState.Fields().ByName("aggregate_value")
	fd_GenesisState_values_weight_sum = md_GenesisState.Fields().ByName("values_weight_sum")
	fd_GenesisState_values_weighted_mode = md_GenesisState.Fields().ByName("values_weighted_mode")
}

var _ protoreflect.Message = (*fastReflection_GenesisState)(nil)

type fastReflection_GenesisState GenesisState

func (x *GenesisState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GenesisState)(x)
}

func (x *GenesisState) slowProtoReflect() protoreflect.Message {
	mi := &file_layer_oracle_genesis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GenesisState_messageType fastReflection_GenesisState_messageType
var _ protoreflect.MessageType = fastReflection_GenesisState_messageType{}

type fastReflection_GenesisState_messageType struct{}

func (x fastReflection_GenesisState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GenesisState)(nil)
}
func (x fastReflection_GenesisState_messageType) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}
func (x fastReflection_GenesisState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GenesisState) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GenesisState) Type() protoreflect.MessageType {
	return _fastReflection_GenesisState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GenesisState) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GenesisState) Interface() protoreflect.ProtoMessage {
	return (*GenesisState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GenesisState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_GenesisState_params, value) {
			return
		}
	}
	if len(x.Cyclelist) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_2_list{list: &x.Cyclelist})
		if !f(fd_GenesisState_cyclelist, value) {
			return
		}
	}
	if x.QueryDataLimit != uint64(0) {
		value := protoreflect.ValueOfUint64(x.QueryDataLimit)
		if !f(fd_GenesisState_query_data_limit, value) {
			return
		}
	}
	if len(x.Reports) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_4_list{list: &x.Reports})
		if !f(fd_GenesisState_reports, value) {
			return
		}
	}
	if len(x.TipperTotal) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_5_list{list: &x.TipperTotal})
		if !f(fd_GenesisState_tipper_total, value) {
			return
		}
	}
	if len(x.TotalTips) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_6_list{list: &x.TotalTips})
		if !f(fd_GenesisState_total_tips, value) {
			return
		}
	}
	if len(x.Nonces) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_7_list{list: &x.Nonces})
		if !f(fd_GenesisState_nonces, value) {
			return
		}
	}
	if len(x.Query) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_8_list{list: &x.Query})
		if !f(fd_GenesisState_query, value) {
			return
		}
	}
	if len(x.Aggregates) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_9_list{list: &x.Aggregates})
		if !f(fd_GenesisState_aggregates, value) {
			return
		}
	}
	if len(x.Values) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_10_list{list: &x.Values})
		if !f(fd_GenesisState_values, value) {
			return
		}
	}
	if len(x.AggregateValue) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_11_list{list: &x.AggregateValue})
		if !f(fd_GenesisState_aggregate_value, value) {
			return
		}
	}
	if len(x.ValuesWeightSum) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_12_list{list: &x.ValuesWeightSum})
		if !f(fd_GenesisState_values_weight_sum, value) {
			return
		}
	}
	if len(x.ValuesWeightedMode) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_13_list{list: &x.ValuesWeightedMode})
		if !f(fd_GenesisState_values_weighted_mode, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GenesisState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "layer.oracle.GenesisState.params":
		return x.Params != nil
	case "layer.oracle.GenesisState.cyclelist":
		return len(x.Cyclelist) != 0
	case "layer.oracle.GenesisState.query_data_limit":
		return x.QueryDataLimit != uint64(0)
	case "layer.oracle.GenesisState.reports":
		return len(x.Reports) != 0
	case "layer.oracle.GenesisState.tipper_total":
		return len(x.TipperTotal) != 0
	case "layer.oracle.GenesisState.total_tips":
		return len(x.TotalTips) != 0
	case "layer.oracle.GenesisState.nonces":
		return len(x.Nonces) != 0
	case "layer.oracle.GenesisState.query":
		return len(x.Query) != 0
	case "layer.oracle.GenesisState.aggregates":
		return len(x.Aggregates) != 0
	case "layer.oracle.GenesisState.values":
		return len(x.Values) != 0
	case "layer.oracle.GenesisState.aggregate_value":
		return len(x.AggregateValue) != 0
	case "layer.oracle.GenesisState.values_weight_sum":
		return len(x.ValuesWeightSum) != 0
	case "layer.oracle.GenesisState.values_weighted_mode":
		return len(x.ValuesWeightedMode) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.GenesisState"))
		}
		panic(fmt.Errorf("message layer.oracle.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "layer.oracle.GenesisState.params":
		x.Params = nil
	case "layer.oracle.GenesisState.cyclelist":
		x.Cyclelist = nil
	case "layer.oracle.GenesisState.query_data_limit":
		x.QueryDataLimit = uint64(0)
	case "layer.oracle.GenesisState.reports":
		x.Reports = nil
	case "layer.oracle.GenesisState.tipper_total":
		x.TipperTotal = nil
	case "layer.oracle.GenesisState.total_tips":
		x.TotalTips = nil
	case "layer.oracle.GenesisState.nonces":
		x.Nonces = nil
	case "layer.oracle.GenesisState.query":
		x.Query = nil
	case "layer.oracle.GenesisState.aggregates":
		x.Aggregates = nil
	case "layer.oracle.GenesisState.values":
		x.Values = nil
	case "layer.oracle.GenesisState.aggregate_value":
		x.AggregateValue = nil
	case "layer.oracle.GenesisState.values_weight_sum":
		x.ValuesWeightSum = nil
	case "layer.oracle.GenesisState.values_weighted_mode":
		x.ValuesWeightedMode = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.GenesisState"))
		}
		panic(fmt.Errorf("message layer.oracle.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GenesisState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "layer.oracle.GenesisState.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "layer.oracle.GenesisState.cyclelist":
		if len(x.Cyclelist) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_2_list{})
		}
		listValue := &_GenesisState_2_list{list: &x.Cyclelist}
		return protoreflect.ValueOfList(listValue)
	case "layer.oracle.GenesisState.query_data_limit":
		value := x.QueryDataLimit
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.GenesisState.reports":
		if len(x.Reports) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_4_list{})
		}
		listValue := &_GenesisState_4_list{list: &x.Reports}
		return protoreflect.ValueOfList(listValue)
	case "layer.oracle.GenesisState.tipper_total":
		if len(x.TipperTotal) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_5_list{})
		}
		listValue := &_GenesisState_5_list{list: &x.TipperTotal}
		return protoreflect.ValueOfList(listValue)
	case "layer.oracle.GenesisState.total_tips":
		if len(x.TotalTips) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_6_list{})
		}
		listValue := &_GenesisState_6_list{list: &x.TotalTips}
		return protoreflect.ValueOfList(listValue)
	case "layer.oracle.GenesisState.nonces":
		if len(x.Nonces) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_7_list{})
		}
		listValue := &_GenesisState_7_list{list: &x.Nonces}
		return protoreflect.ValueOfList(listValue)
	case "layer.oracle.GenesisState.query":
		if len(x.Query) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_8_list{})
		}
		listValue := &_GenesisState_8_list{list: &x.Query}
		return protoreflect.ValueOfList(listValue)
	case "layer.oracle.GenesisState.aggregates":
		if len(x.Aggregates) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_9_list{})
		}
		listValue := &_GenesisState_9_list{list: &x.Aggregates}
		return protoreflect.ValueOfList(listValue)
	case "layer.oracle.GenesisState.values":
		if len(x.Values) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_10_list{})
		}
		listValue := &_GenesisState_10_list{list: &x.Values}
		return protoreflect.ValueOfList(listValue)
	case "layer.oracle.GenesisState.aggregate_value":
		if len(x.AggregateValue) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_11_list{})
		}
		listValue := &_GenesisState_11_list{list: &x.AggregateValue}
		return protoreflect.ValueOfList(listValue)
	case "layer.oracle.GenesisState.values_weight_sum":
		if len(x.ValuesWeightSum) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_12_list{})
		}
		listValue := &_GenesisState_12_list{list: &x.ValuesWeightSum}
		return protoreflect.ValueOfList(listValue)
	case "layer.oracle.GenesisState.values_weighted_mode":
		if len(x.ValuesWeightedMode) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_13_list{})
		}
		listValue := &_GenesisState_13_list{list: &x.ValuesWeightedMode}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.GenesisState"))
		}
		panic(fmt.Errorf("message layer.oracle.GenesisState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "layer.oracle.GenesisState.params":
		x.Params = value.Message().Interface().(*Params)
	case "layer.oracle.GenesisState.cyclelist":
		lv := value.List()
		clv := lv.(*_GenesisState_2_list)
		x.Cyclelist = *clv.list
	case "layer.oracle.GenesisState.query_data_limit":
		x.QueryDataLimit = value.Uint()
	case "layer.oracle.GenesisState.reports":
		lv := value.List()
		clv := lv.(*_GenesisState_4_list)
		x.Reports = *clv.list
	case "layer.oracle.GenesisState.tipper_total":
		lv := value.List()
		clv := lv.(*_GenesisState_5_list)
		x.TipperTotal = *clv.list
	case "layer.oracle.GenesisState.total_tips":
		lv := value.List()
		clv := lv.(*_GenesisState_6_list)
		x.TotalTips = *clv.list
	case "layer.oracle.GenesisState.nonces":
		lv := value.List()
		clv := lv.(*_GenesisState_7_list)
		x.Nonces = *clv.list
	case "layer.oracle.GenesisState.query":
		lv := value.List()
		clv := lv.(*_GenesisState_8_list)
		x.Query = *clv.list
	case "layer.oracle.GenesisState.aggregates":
		lv := value.List()
		clv := lv.(*_GenesisState_9_list)
		x.Aggregates = *clv.list
	case "layer.oracle.GenesisState.values":
		lv := value.List()
		clv := lv.(*_GenesisState_10_list)
		x.Values = *clv.list
	case "layer.oracle.GenesisState.aggregate_value":
		lv := value.List()
		clv := lv.(*_GenesisState_11_list)
		x.AggregateValue = *clv.list
	case "layer.oracle.GenesisState.values_weight_sum":
		lv := value.List()
		clv := lv.(*_GenesisState_12_list)
		x.ValuesWeightSum = *clv.list
	case "layer.oracle.GenesisState.values_weighted_mode":
		lv := value.List()
		clv := lv.(*_GenesisState_13_list)
		x.ValuesWeightedMode = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.GenesisState"))
		}
		panic(fmt.Errorf("message layer.oracle.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.GenesisState.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "layer.oracle.GenesisState.cyclelist":
		if x.Cyclelist == nil {
			x.Cyclelist = [][]byte{}
		}
		value := &_GenesisState_2_list{list: &x.Cyclelist}
		return protoreflect.ValueOfList(value)
	case "layer.oracle.GenesisState.reports":
		if x.Reports == nil {
			x.Reports = []*MicroReport{}
		}
		value := &_GenesisState_4_list{list: &x.Reports}
		return protoreflect.ValueOfList(value)
	case "layer.oracle.GenesisState.tipper_total":
		if x.TipperTotal == nil {
			x.TipperTotal = []*TipperTotalStateEntry{}
		}
		value := &_GenesisState_5_list{list: &x.TipperTotal}
		return protoreflect.ValueOfList(value)
	case "layer.oracle.GenesisState.total_tips":
		if x.TotalTips == nil {
			x.TotalTips = []*TotalTipsStateEntry{}
		}
		value := &_GenesisState_6_list{list: &x.TotalTips}
		return protoreflect.ValueOfList(value)
	case "layer.oracle.GenesisState.nonces":
		if x.Nonces == nil {
			x.Nonces = []*NoncesStateEntry{}
		}
		value := &_GenesisState_7_list{list: &x.Nonces}
		return protoreflect.ValueOfList(value)
	case "layer.oracle.GenesisState.query":
		if x.Query == nil {
			x.Query = []*QueryMeta{}
		}
		value := &_GenesisState_8_list{list: &x.Query}
		return protoreflect.ValueOfList(value)
	case "layer.oracle.GenesisState.aggregates":
		if x.Aggregates == nil {
			x.Aggregates = []*AggregateStateEntry{}
		}
		value := &_GenesisState_9_list{list: &x.Aggregates}
		return protoreflect.ValueOfList(value)
	case "layer.oracle.GenesisState.values":
		if x.Values == nil {
			x.Values = []*ValuesStateEntry{}
		}
		value := &_GenesisState_10_list{list: &x.Values}
		return protoreflect.ValueOfList(value)
	case "layer.oracle.GenesisState.aggregate_value":
		if x.AggregateValue == nil {
			x.AggregateValue = []*AggregateValueStateEntry{}
		}
		value := &_GenesisState_11_list{list: &x.AggregateValue}
		return protoreflect.ValueOfList(value)
	case "layer.oracle.GenesisState.values_weight_sum":
		if x.ValuesWeightSum == nil {
			x.ValuesWeightSum = []*ValuesWeightSumStateEntry{}
		}
		value := &_GenesisState_12_list{list: &x.ValuesWeightSum}
		return protoreflect.ValueOfList(value)
	case "layer.oracle.GenesisState.values_weighted_mode":
		if x.ValuesWeightedMode == nil {
			x.ValuesWeightedMode = []*ValuesWeightedModeStateEntry{}
		}
		value := &_GenesisState_13_list{list: &x.ValuesWeightedMode}
		return protoreflect.ValueOfList(value)
	case "layer.oracle.GenesisState.query_data_limit":
		panic(fmt.Errorf("field query_data_limit of message layer.oracle.GenesisState is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.GenesisState"))
		}
		panic(fmt.Errorf("message layer.oracle.GenesisState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GenesisState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.GenesisState.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "layer.oracle.GenesisState.cyclelist":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_GenesisState_2_list{list: &list})
	case "layer.oracle.GenesisState.query_data_limit":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.GenesisState.reports":
		list := []*MicroReport{}
		return protoreflect.ValueOfList(&_GenesisState_4_list{list: &list})
	case "layer.oracle.GenesisState.tipper_total":
		list := []*TipperTotalStateEntry{}
		return protoreflect.ValueOfList(&_GenesisState_5_list{list: &list})
	case "layer.oracle.GenesisState.total_tips":
		list := []*TotalTipsStateEntry{}
		return protoreflect.ValueOfList(&_GenesisState_6_list{list: &list})
	case "layer.oracle.GenesisState.nonces":
		list := []*NoncesStateEntry{}
		return protoreflect.ValueOfList(&_GenesisState_7_list{list: &list})
	case "layer.oracle.GenesisState.query":
		list := []*QueryMeta{}
		return protoreflect.ValueOfList(&_GenesisState_8_list{list: &list})
	case "layer.oracle.GenesisState.aggregates":
		list := []*AggregateStateEntry{}
		return protoreflect.ValueOfList(&_GenesisState_9_list{list: &list})
	case "layer.oracle.GenesisState.values":
		list := []*ValuesStateEntry{}
		return protoreflect.ValueOfList(&_GenesisState_10_list{list: &list})
	case "layer.oracle.GenesisState.aggregate_value":
		list := []*AggregateValueStateEntry{}
		return protoreflect.ValueOfList(&_GenesisState_11_list{list: &list})
	case "layer.oracle.GenesisState.values_weight_sum":
		list := []*ValuesWeightSumStateEntry{}
		return protoreflect.ValueOfList(&_GenesisState_12_list{list: &list})
	case "layer.oracle.GenesisState.values_weighted_mode":
		list := []*ValuesWeightedModeStateEntry{}
		return protoreflect.ValueOfList(&_GenesisState_13_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.GenesisState"))
		}
		panic(fmt.Errorf("message layer.oracle.GenesisState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GenesisState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in layer.oracle.GenesisState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GenesisState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GenesisState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GenesisState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Cyclelist) > 0 {
			for _, b := range x.Cyclelist {
				l = len(b)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.QueryDataLimit != 0 {
			n += 1 + runtime.Sov(uint64(x.QueryDataLimit))
		}
		if len(x.Reports) > 0 {
			for _, e := range x.Reports {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TipperTotal) > 0 {
			for _, e := range x.TipperTotal {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TotalTips) > 0 {
			for _, e := range x.TotalTips {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Nonces) > 0 {
			for _, e := range x.Nonces {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Query) > 0 {
			for _, e := range x.Query {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Aggregates) > 0 {
			for _, e := range x.Aggregates {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Values) > 0 {
			for _, e := range x.Values {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.AggregateValue) > 0 {
			for _, e := range x.AggregateValue {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ValuesWeightSum) > 0 {
			for _, e := range x.ValuesWeightSum {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ValuesWeightedMode) > 0 {
			for _, e := range x.ValuesWeightedMode {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ValuesWeightedMode) > 0 {
			for iNdEx := len(x.ValuesWeightedMode) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ValuesWeightedMode[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x6a
			}
		}
		if len(x.ValuesWeightSum) > 0 {
			for iNdEx := len(x.ValuesWeightSum) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ValuesWeightSum[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x62
			}
		}
		if len(x.AggregateValue) > 0 {
			for iNdEx := len(x.AggregateValue) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AggregateValue[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x5a
			}
		}
		if len(x.Values) > 0 {
			for iNdEx := len(x.Values) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Values[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if len(x.Aggregates) > 0 {
			for iNdEx := len(x.Aggregates) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Aggregates[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4a
			}
		}
		if len(x.Query) > 0 {
			for iNdEx := len(x.Query) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Query[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.Nonces) > 0 {
			for iNdEx := len(x.Nonces) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Nonces[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.TotalTips) > 0 {
			for iNdEx := len(x.TotalTips) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TotalTips[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.TipperTotal) > 0 {
			for iNdEx := len(x.TipperTotal) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TipperTotal[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.Reports) > 0 {
			for iNdEx := len(x.Reports) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Reports[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.QueryDataLimit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.QueryDataLimit))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Cyclelist) > 0 {
			for iNdEx := len(x.Cyclelist) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Cyclelist[iNdEx])
				copy(dAtA[i:], x.Cyclelist[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Cyclelist[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Cyclelist", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Cyclelist = append(x.Cyclelist, make([]byte, postIndex-iNdEx))
				copy(x.Cyclelist[len(x.Cyclelist)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field QueryDataLimit", wireType)
				}
				x.QueryDataLimit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.QueryDataLimit |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reports", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reports = append(x.Reports, &MicroReport{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Reports[len(x.Reports)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TipperTotal", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TipperTotal = append(x.TipperTotal, &TipperTotalStateEntry{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TipperTotal[len(x.TipperTotal)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalTips", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalTips = append(x.TotalTips, &TotalTipsStateEntry{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TotalTips[len(x.TotalTips)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonces", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Nonces = append(x.Nonces, &NoncesStateEntry{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Nonces[len(x.Nonces)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Query = append(x.Query, &QueryMeta{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Query[len(x.Query)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Aggregates", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Aggregates = append(x.Aggregates, &AggregateStateEntry{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Aggregates[len(x.Aggregates)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Values", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Values = append(x.Values, &ValuesStateEntry{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Values[len(x.Values)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AggregateValue", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AggregateValue = append(x.AggregateValue, &AggregateValueStateEntry{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AggregateValue[len(x.AggregateValue)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValuesWeightSum", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValuesWeightSum = append(x.ValuesWeightSum, &ValuesWeightSumStateEntry{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValuesWeightSum[len(x.ValuesWeightSum)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValuesWeightedMode", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValuesWeightedMode = append(x.ValuesWeightedMode, &ValuesWeightedModeStateEntry{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValuesWeightedMode[len(x.ValuesWeightedMode)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AggregateStateEntry           protoreflect.MessageDescriptor
	fd_AggregateStateEntry_timestamp protoreflect.FieldDescriptor
	fd_AggregateStateEntry_aggregate protoreflect.FieldDescriptor
)

func init() {
	file_layer_oracle_genesis_proto_init()
	md_AggregateStateEntry = File_layer_oracle_genesis_proto.Messages().ByName("AggregateStateEntry")
	fd_AggregateStateEntry_timestamp = md_AggregateStateEntry.Fields().ByName("timestamp")
	fd_AggregateStateEntry_aggregate = md_AggregateStateEntry.Fields().ByName("aggregate")
}

var _ protoreflect.Message = (*fastReflection_AggregateStateEntry)(nil)

type fastReflection_AggregateStateEntry AggregateStateEntry

func (x *AggregateStateEntry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AggregateStateEntry)(x)
}

func (x *AggregateStateEntry) slowProtoReflect() protoreflect.Message {
	mi := &file_layer_oracle_genesis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AggregateStateEntry_messageType fastReflection_AggregateStateEntry_messageType
var _ protoreflect.MessageType = fastReflection_AggregateStateEntry_messageType{}

type fastReflection_AggregateStateEntry_messageType struct{}

func (x fastReflection_AggregateStateEntry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AggregateStateEntry)(nil)
}
func (x fastReflection_AggregateStateEntry_messageType) New() protoreflect.Message {
	return new(fastReflection_AggregateStateEntry)
}
func (x fastReflection_AggregateStateEntry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AggregateStateEntry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AggregateStateEntry) Descriptor() protoreflect.MessageDescriptor {
	return md_AggregateStateEntry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AggregateStateEntry) Type() protoreflect.MessageType {
	return _fastReflection_AggregateStateEntry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AggregateStateEntry) New() protoreflect.Message {
	return new(fastReflection_AggregateStateEntry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AggregateStateEntry) Interface() protoreflect.ProtoMessage {
	return (*AggregateStateEntry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AggregateStateEntry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Timestamp != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Timestamp)
		if !f(fd_AggregateStateEntry_timestamp, value) {
			return
		}
	}
	if x.Aggregate != nil {
		value := protoreflect.ValueOfMessage(x.Aggregate.ProtoReflect())
		if !f(fd_AggregateStateEntry_aggregate, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AggregateStateEntry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "layer.oracle.AggregateStateEntry.timestamp":
		return x.Timestamp != uint64(0)
	case "layer.oracle.AggregateStateEntry.aggregate":
		return x.Aggregate != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.AggregateStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.AggregateStateEntry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AggregateStateEntry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "layer.oracle.AggregateStateEntry.timestamp":
		x.Timestamp = uint64(0)
	case "layer.oracle.AggregateStateEntry.aggregate":
		x.Aggregate = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.AggregateStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.AggregateStateEntry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AggregateStateEntry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "layer.oracle.AggregateStateEntry.timestamp":
		value := x.Timestamp
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.AggregateStateEntry.aggregate":
		value := x.Aggregate
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.AggregateStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.AggregateStateEntry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AggregateStateEntry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "layer.oracle.AggregateStateEntry.timestamp":
		x.Timestamp = value.Uint()
	case "layer.oracle.AggregateStateEntry.aggregate":
		x.Aggregate = value.Message().Interface().(*Aggregate)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.AggregateStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.AggregateStateEntry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AggregateStateEntry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.AggregateStateEntry.aggregate":
		if x.Aggregate == nil {
			x.Aggregate = new(Aggregate)
		}
		return protoreflect.ValueOfMessage(x.Aggregate.ProtoReflect())
	case "layer.oracle.AggregateStateEntry.timestamp":
		panic(fmt.Errorf("field timestamp of message layer.oracle.AggregateStateEntry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.AggregateStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.AggregateStateEntry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AggregateStateEntry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.AggregateStateEntry.timestamp":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.AggregateStateEntry.aggregate":
		m := new(Aggregate)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.AggregateStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.AggregateStateEntry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AggregateStateEntry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in layer.oracle.AggregateStateEntry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AggregateStateEntry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AggregateStateEntry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AggregateStateEntry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AggregateStateEntry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AggregateStateEntry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Timestamp != 0 {
			n += 1 + runtime.Sov(uint64(x.Timestamp))
		}
		if x.Aggregate != nil {
			l = options.Size(x.Aggregate)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AggregateStateEntry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Aggregate != nil {
			encoded, err := options.Marshal(x.Aggregate)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.Timestamp != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Timestamp))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AggregateStateEntry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AggregateStateEntry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AggregateStateEntry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
				}
				x.Timestamp = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Timestamp |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Aggregate", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Aggregate == nil {
					x.Aggregate = &Aggregate{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Aggregate); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TipperTotalStateEntry              protoreflect.MessageDescriptor
	fd_TipperTotalStateEntry_tipper_addr  protoreflect.FieldDescriptor
	fd_TipperTotalStateEntry_block_height protoreflect.FieldDescriptor
	fd_TipperTotalStateEntry_tipAmount    protoreflect.FieldDescriptor
)

func init() {
	file_layer_oracle_genesis_proto_init()
	md_TipperTotalStateEntry = File_layer_oracle_genesis_proto.Messages().ByName("TipperTotalStateEntry")
	fd_TipperTotalStateEntry_tipper_addr = md_TipperTotalStateEntry.Fields().ByName("tipper_addr")
	fd_TipperTotalStateEntry_block_height = md_TipperTotalStateEntry.Fields().ByName("block_height")
	fd_TipperTotalStateEntry_tipAmount = md_TipperTotalStateEntry.Fields().ByName("tipAmount")
}

var _ protoreflect.Message = (*fastReflection_TipperTotalStateEntry)(nil)

type fastReflection_TipperTotalStateEntry TipperTotalStateEntry

func (x *TipperTotalStateEntry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TipperTotalStateEntry)(x)
}

func (x *TipperTotalStateEntry) slowProtoReflect() protoreflect.Message {
	mi := &file_layer_oracle_genesis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TipperTotalStateEntry_messageType fastReflection_TipperTotalStateEntry_messageType
var _ protoreflect.MessageType = fastReflection_TipperTotalStateEntry_messageType{}

type fastReflection_TipperTotalStateEntry_messageType struct{}

func (x fastReflection_TipperTotalStateEntry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TipperTotalStateEntry)(nil)
}
func (x fastReflection_TipperTotalStateEntry_messageType) New() protoreflect.Message {
	return new(fastReflection_TipperTotalStateEntry)
}
func (x fastReflection_TipperTotalStateEntry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TipperTotalStateEntry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TipperTotalStateEntry) Descriptor() protoreflect.MessageDescriptor {
	return md_TipperTotalStateEntry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TipperTotalStateEntry) Type() protoreflect.MessageType {
	return _fastReflection_TipperTotalStateEntry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TipperTotalStateEntry) New() protoreflect.Message {
	return new(fastReflection_TipperTotalStateEntry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TipperTotalStateEntry) Interface() protoreflect.ProtoMessage {
	return (*TipperTotalStateEntry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TipperTotalStateEntry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.TipperAddr) != 0 {
		value := protoreflect.ValueOfBytes(x.TipperAddr)
		if !f(fd_TipperTotalStateEntry_tipper_addr, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_TipperTotalStateEntry_block_height, value) {
			return
		}
	}
	if x.TipAmount != "" {
		value := protoreflect.ValueOfString(x.TipAmount)
		if !f(fd_TipperTotalStateEntry_tipAmount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TipperTotalStateEntry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "layer.oracle.TipperTotalStateEntry.tipper_addr":
		return len(x.TipperAddr) != 0
	case "layer.oracle.TipperTotalStateEntry.block_height":
		return x.BlockHeight != uint64(0)
	case "layer.oracle.TipperTotalStateEntry.tipAmount":
		return x.TipAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.TipperTotalStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.TipperTotalStateEntry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TipperTotalStateEntry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "layer.oracle.TipperTotalStateEntry.tipper_addr":
		x.TipperAddr = nil
	case "layer.oracle.TipperTotalStateEntry.block_height":
		x.BlockHeight = uint64(0)
	case "layer.oracle.TipperTotalStateEntry.tipAmount":
		x.TipAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.TipperTotalStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.TipperTotalStateEntry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TipperTotalStateEntry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "layer.oracle.TipperTotalStateEntry.tipper_addr":
		value := x.TipperAddr
		return protoreflect.ValueOfBytes(value)
	case "layer.oracle.TipperTotalStateEntry.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.TipperTotalStateEntry.tipAmount":
		value := x.TipAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.TipperTotalStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.TipperTotalStateEntry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TipperTotalStateEntry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "layer.oracle.TipperTotalStateEntry.tipper_addr":
		x.TipperAddr = value.Bytes()
	case "layer.oracle.TipperTotalStateEntry.block_height":
		x.BlockHeight = value.Uint()
	case "layer.oracle.TipperTotalStateEntry.tipAmount":
		x.TipAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.TipperTotalStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.TipperTotalStateEntry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TipperTotalStateEntry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.TipperTotalStateEntry.tipper_addr":
		panic(fmt.Errorf("field tipper_addr of message layer.oracle.TipperTotalStateEntry is not mutable"))
	case "layer.oracle.TipperTotalStateEntry.block_height":
		panic(fmt.Errorf("field block_height of message layer.oracle.TipperTotalStateEntry is not mutable"))
	case "layer.oracle.TipperTotalStateEntry.tipAmount":
		panic(fmt.Errorf("field tipAmount of message layer.oracle.TipperTotalStateEntry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.TipperTotalStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.TipperTotalStateEntry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TipperTotalStateEntry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.TipperTotalStateEntry.tipper_addr":
		return protoreflect.ValueOfBytes(nil)
	case "layer.oracle.TipperTotalStateEntry.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.TipperTotalStateEntry.tipAmount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.TipperTotalStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.TipperTotalStateEntry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TipperTotalStateEntry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in layer.oracle.TipperTotalStateEntry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TipperTotalStateEntry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TipperTotalStateEntry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TipperTotalStateEntry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TipperTotalStateEntry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TipperTotalStateEntry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TipperAddr)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		l = len(x.TipAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TipperTotalStateEntry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TipAmount) > 0 {
			i -= len(x.TipAmount)
			copy(dAtA[i:], x.TipAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TipAmount)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if len(x.TipperAddr) > 0 {
			i -= len(x.TipperAddr)
			copy(dAtA[i:], x.TipperAddr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TipperAddr)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TipperTotalStateEntry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TipperTotalStateEntry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TipperTotalStateEntry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TipperAddr", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TipperAddr = append(x.TipperAddr[:0], dAtA[iNdEx:postIndex]...)
				if x.TipperAddr == nil {
					x.TipperAddr = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TipAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TipAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TotalTipsStateEntry              protoreflect.MessageDescriptor
	fd_TotalTipsStateEntry_block_height protoreflect.FieldDescriptor
	fd_TotalTipsStateEntry_tipAmount    protoreflect.FieldDescriptor
)

func init() {
	file_layer_oracle_genesis_proto_init()
	md_TotalTipsStateEntry = File_layer_oracle_genesis_proto.Messages().ByName("TotalTipsStateEntry")
	fd_TotalTipsStateEntry_block_height = md_TotalTipsStateEntry.Fields().ByName("block_height")
	fd_TotalTipsStateEntry_tipAmount = md_TotalTipsStateEntry.Fields().ByName("tipAmount")
}

var _ protoreflect.Message = (*fastReflection_TotalTipsStateEntry)(nil)

type fastReflection_TotalTipsStateEntry TotalTipsStateEntry

func (x *TotalTipsStateEntry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TotalTipsStateEntry)(x)
}

func (x *TotalTipsStateEntry) slowProtoReflect() protoreflect.Message {
	mi := &file_layer_oracle_genesis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TotalTipsStateEntry_messageType fastReflection_TotalTipsStateEntry_messageType
var _ protoreflect.MessageType = fastReflection_TotalTipsStateEntry_messageType{}

type fastReflection_TotalTipsStateEntry_messageType struct{}

func (x fastReflection_TotalTipsStateEntry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TotalTipsStateEntry)(nil)
}
func (x fastReflection_TotalTipsStateEntry_messageType) New() protoreflect.Message {
	return new(fastReflection_TotalTipsStateEntry)
}
func (x fastReflection_TotalTipsStateEntry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TotalTipsStateEntry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TotalTipsStateEntry) Descriptor() protoreflect.MessageDescriptor {
	return md_TotalTipsStateEntry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TotalTipsStateEntry) Type() protoreflect.MessageType {
	return _fastReflection_TotalTipsStateEntry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TotalTipsStateEntry) New() protoreflect.Message {
	return new(fastReflection_TotalTipsStateEntry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TotalTipsStateEntry) Interface() protoreflect.ProtoMessage {
	return (*TotalTipsStateEntry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TotalTipsStateEntry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_TotalTipsStateEntry_block_height, value) {
			return
		}
	}
	if x.TipAmount != "" {
		value := protoreflect.ValueOfString(x.TipAmount)
		if !f(fd_TotalTipsStateEntry_tipAmount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TotalTipsStateEntry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "layer.oracle.TotalTipsStateEntry.block_height":
		return x.BlockHeight != uint64(0)
	case "layer.oracle.TotalTipsStateEntry.tipAmount":
		return x.TipAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.TotalTipsStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.TotalTipsStateEntry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TotalTipsStateEntry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "layer.oracle.TotalTipsStateEntry.block_height":
		x.BlockHeight = uint64(0)
	case "layer.oracle.TotalTipsStateEntry.tipAmount":
		x.TipAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.TotalTipsStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.TotalTipsStateEntry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TotalTipsStateEntry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "layer.oracle.TotalTipsStateEntry.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.TotalTipsStateEntry.tipAmount":
		value := x.TipAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.TotalTipsStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.TotalTipsStateEntry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TotalTipsStateEntry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "layer.oracle.TotalTipsStateEntry.block_height":
		x.BlockHeight = value.Uint()
	case "layer.oracle.TotalTipsStateEntry.tipAmount":
		x.TipAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.TotalTipsStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.TotalTipsStateEntry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TotalTipsStateEntry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.TotalTipsStateEntry.block_height":
		panic(fmt.Errorf("field block_height of message layer.oracle.TotalTipsStateEntry is not mutable"))
	case "layer.oracle.TotalTipsStateEntry.tipAmount":
		panic(fmt.Errorf("field tipAmount of message layer.oracle.TotalTipsStateEntry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.TotalTipsStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.TotalTipsStateEntry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TotalTipsStateEntry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.TotalTipsStateEntry.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.TotalTipsStateEntry.tipAmount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.TotalTipsStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.TotalTipsStateEntry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TotalTipsStateEntry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in layer.oracle.TotalTipsStateEntry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TotalTipsStateEntry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TotalTipsStateEntry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TotalTipsStateEntry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TotalTipsStateEntry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TotalTipsStateEntry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		l = len(x.TipAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TotalTipsStateEntry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TipAmount) > 0 {
			i -= len(x.TipAmount)
			copy(dAtA[i:], x.TipAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TipAmount)))
			i--
			dAtA[i] = 0x12
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TotalTipsStateEntry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TotalTipsStateEntry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TotalTipsStateEntry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TipAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TipAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_NoncesStateEntry          protoreflect.MessageDescriptor
	fd_NoncesStateEntry_query_id protoreflect.FieldDescriptor
	fd_NoncesStateEntry_nonce    protoreflect.FieldDescriptor
)

func init() {
	file_layer_oracle_genesis_proto_init()
	md_NoncesStateEntry = File_layer_oracle_genesis_proto.Messages().ByName("NoncesStateEntry")
	fd_NoncesStateEntry_query_id = md_NoncesStateEntry.Fields().ByName("query_id")
	fd_NoncesStateEntry_nonce = md_NoncesStateEntry.Fields().ByName("nonce")
}

var _ protoreflect.Message = (*fastReflection_NoncesStateEntry)(nil)

type fastReflection_NoncesStateEntry NoncesStateEntry

func (x *NoncesStateEntry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_NoncesStateEntry)(x)
}

func (x *NoncesStateEntry) slowProtoReflect() protoreflect.Message {
	mi := &file_layer_oracle_genesis_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_NoncesStateEntry_messageType fastReflection_NoncesStateEntry_messageType
var _ protoreflect.MessageType = fastReflection_NoncesStateEntry_messageType{}

type fastReflection_NoncesStateEntry_messageType struct{}

func (x fastReflection_NoncesStateEntry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_NoncesStateEntry)(nil)
}
func (x fastReflection_NoncesStateEntry_messageType) New() protoreflect.Message {
	return new(fastReflection_NoncesStateEntry)
}
func (x fastReflection_NoncesStateEntry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_NoncesStateEntry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_NoncesStateEntry) Descriptor() protoreflect.MessageDescriptor {
	return md_NoncesStateEntry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_NoncesStateEntry) Type() protoreflect.MessageType {
	return _fastReflection_NoncesStateEntry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_NoncesStateEntry) New() protoreflect.Message {
	return new(fastReflection_NoncesStateEntry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_NoncesStateEntry) Interface() protoreflect.ProtoMessage {
	return (*NoncesStateEntry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_NoncesStateEntry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.QueryId) != 0 {
		value := protoreflect.ValueOfBytes(x.QueryId)
		if !f(fd_NoncesStateEntry_query_id, value) {
			return
		}
	}
	if x.Nonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Nonce)
		if !f(fd_NoncesStateEntry_nonce, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_NoncesStateEntry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "layer.oracle.NoncesStateEntry.query_id":
		return len(x.QueryId) != 0
	case "layer.oracle.NoncesStateEntry.nonce":
		return x.Nonce != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.NoncesStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.NoncesStateEntry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_NoncesStateEntry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "layer.oracle.NoncesStateEntry.query_id":
		x.QueryId = nil
	case "layer.oracle.NoncesStateEntry.nonce":
		x.Nonce = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.NoncesStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.NoncesStateEntry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_NoncesStateEntry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "layer.oracle.NoncesStateEntry.query_id":
		value := x.QueryId
		return protoreflect.ValueOfBytes(value)
	case "layer.oracle.NoncesStateEntry.nonce":
		value := x.Nonce
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.NoncesStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.NoncesStateEntry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_NoncesStateEntry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "layer.oracle.NoncesStateEntry.query_id":
		x.QueryId = value.Bytes()
	case "layer.oracle.NoncesStateEntry.nonce":
		x.Nonce = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.NoncesStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.NoncesStateEntry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_NoncesStateEntry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.NoncesStateEntry.query_id":
		panic(fmt.Errorf("field query_id of message layer.oracle.NoncesStateEntry is not mutable"))
	case "layer.oracle.NoncesStateEntry.nonce":
		panic(fmt.Errorf("field nonce of message layer.oracle.NoncesStateEntry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.NoncesStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.NoncesStateEntry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_NoncesStateEntry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.NoncesStateEntry.query_id":
		return protoreflect.ValueOfBytes(nil)
	case "layer.oracle.NoncesStateEntry.nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.NoncesStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.NoncesStateEntry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_NoncesStateEntry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in layer.oracle.NoncesStateEntry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_NoncesStateEntry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_NoncesStateEntry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_NoncesStateEntry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_NoncesStateEntry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*NoncesStateEntry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.QueryId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Nonce != 0 {
			n += 1 + runtime.Sov(uint64(x.Nonce))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*NoncesStateEntry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Nonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Nonce))
			i--
			dAtA[i] = 0x10
		}
		if len(x.QueryId) > 0 {
			i -= len(x.QueryId)
			copy(dAtA[i:], x.QueryId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.QueryId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*NoncesStateEntry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: NoncesStateEntry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: NoncesStateEntry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.QueryId = append(x.QueryId[:0], dAtA[iNdEx:postIndex]...)
				if x.QueryId == nil {
					x.QueryId = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				x.Nonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Nonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AggregateValueStateEntry                   protoreflect.MessageDescriptor
	fd_AggregateValueStateEntry_meta_id           protoreflect.FieldDescriptor
	fd_AggregateValueStateEntry_running_aggregate protoreflect.FieldDescriptor
)

func init() {
	file_layer_oracle_genesis_proto_init()
	md_AggregateValueStateEntry = File_layer_oracle_genesis_proto.Messages().ByName("AggregateValueStateEntry")
	fd_AggregateValueStateEntry_meta_id = md_AggregateValueStateEntry.Fields().ByName("meta_id")
	fd_AggregateValueStateEntry_running_aggregate = md_AggregateValueStateEntry.Fields().ByName("running_aggregate")
}

var _ protoreflect.Message = (*fastReflection_AggregateValueStateEntry)(nil)

type fastReflection_AggregateValueStateEntry AggregateValueStateEntry

func (x *AggregateValueStateEntry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AggregateValueStateEntry)(x)
}

func (x *AggregateValueStateEntry) slowProtoReflect() protoreflect.Message {
	mi := &file_layer_oracle_genesis_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AggregateValueStateEntry_messageType fastReflection_AggregateValueStateEntry_messageType
var _ protoreflect.MessageType = fastReflection_AggregateValueStateEntry_messageType{}

type fastReflection_AggregateValueStateEntry_messageType struct{}

func (x fastReflection_AggregateValueStateEntry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AggregateValueStateEntry)(nil)
}
func (x fastReflection_AggregateValueStateEntry_messageType) New() protoreflect.Message {
	return new(fastReflection_AggregateValueStateEntry)
}
func (x fastReflection_AggregateValueStateEntry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AggregateValueStateEntry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AggregateValueStateEntry) Descriptor() protoreflect.MessageDescriptor {
	return md_AggregateValueStateEntry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AggregateValueStateEntry) Type() protoreflect.MessageType {
	return _fastReflection_AggregateValueStateEntry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AggregateValueStateEntry) New() protoreflect.Message {
	return new(fastReflection_AggregateValueStateEntry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AggregateValueStateEntry) Interface() protoreflect.ProtoMessage {
	return (*AggregateValueStateEntry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AggregateValueStateEntry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.MetaId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MetaId)
		if !f(fd_AggregateValueStateEntry_meta_id, value) {
			return
		}
	}
	if x.RunningAggregate != nil {
		value := protoreflect.ValueOfMessage(x.RunningAggregate.ProtoReflect())
		if !f(fd_AggregateValueStateEntry_running_aggregate, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AggregateValueStateEntry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "layer.oracle.AggregateValueStateEntry.meta_id":
		return x.MetaId != uint64(0)
	case "layer.oracle.AggregateValueStateEntry.running_aggregate":
		return x.RunningAggregate != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.AggregateValueStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.AggregateValueStateEntry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AggregateValueStateEntry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "layer.oracle.AggregateValueStateEntry.meta_id":
		x.MetaId = uint64(0)
	case "layer.oracle.AggregateValueStateEntry.running_aggregate":
		x.RunningAggregate = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.AggregateValueStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.AggregateValueStateEntry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AggregateValueStateEntry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "layer.oracle.AggregateValueStateEntry.meta_id":
		value := x.MetaId
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.AggregateValueStateEntry.running_aggregate":
		value := x.RunningAggregate
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.AggregateValueStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.AggregateValueStateEntry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AggregateValueStateEntry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "layer.oracle.AggregateValueStateEntry.meta_id":
		x.MetaId = value.Uint()
	case "layer.oracle.AggregateValueStateEntry.running_aggregate":
		x.RunningAggregate = value.Message().Interface().(*RunningAggregate)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.AggregateValueStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.AggregateValueStateEntry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AggregateValueStateEntry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.AggregateValueStateEntry.running_aggregate":
		if x.RunningAggregate == nil {
			x.RunningAggregate = new(RunningAggregate)
		}
		return protoreflect.ValueOfMessage(x.RunningAggregate.ProtoReflect())
	case "layer.oracle.AggregateValueStateEntry.meta_id":
		panic(fmt.Errorf("field meta_id of message layer.oracle.AggregateValueStateEntry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.AggregateValueStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.AggregateValueStateEntry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AggregateValueStateEntry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.AggregateValueStateEntry.meta_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.AggregateValueStateEntry.running_aggregate":
		m := new(RunningAggregate)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.AggregateValueStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.AggregateValueStateEntry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AggregateValueStateEntry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in layer.oracle.AggregateValueStateEntry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AggregateValueStateEntry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AggregateValueStateEntry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AggregateValueStateEntry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AggregateValueStateEntry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AggregateValueStateEntry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.MetaId != 0 {
			n += 1 + runtime.Sov(uint64(x.MetaId))
		}
		if x.RunningAggregate != nil {
			l = options.Size(x.RunningAggregate)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AggregateValueStateEntry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.RunningAggregate != nil {
			encoded, err := options.Marshal(x.RunningAggregate)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.MetaId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MetaId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AggregateValueStateEntry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AggregateValueStateEntry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AggregateValueStateEntry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MetaId", wireType)
				}
				x.MetaId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MetaId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RunningAggregate", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.RunningAggregate == nil {
					x.RunningAggregate = &RunningAggregate{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RunningAggregate); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ValuesStateEntry              protoreflect.MessageDescriptor
	fd_ValuesStateEntry_meta_id      protoreflect.FieldDescriptor
	fd_ValuesStateEntry_value_string protoreflect.FieldDescriptor
	fd_ValuesStateEntry_value        protoreflect.FieldDescriptor
)

func init() {
	file_layer_oracle_genesis_proto_init()
	md_ValuesStateEntry = File_layer_oracle_genesis_proto.Messages().ByName("ValuesStateEntry")
	fd_ValuesStateEntry_meta_id = md_ValuesStateEntry.Fields().ByName("meta_id")
	fd_ValuesStateEntry_value_string = md_ValuesStateEntry.Fields().ByName("value_string")
	fd_ValuesStateEntry_value = md_ValuesStateEntry.Fields().ByName("value")
}

var _ protoreflect.Message = (*fastReflection_ValuesStateEntry)(nil)

type fastReflection_ValuesStateEntry ValuesStateEntry

func (x *ValuesStateEntry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValuesStateEntry)(x)
}

func (x *ValuesStateEntry) slowProtoReflect() protoreflect.Message {
	mi := &file_layer_oracle_genesis_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValuesStateEntry_messageType fastReflection_ValuesStateEntry_messageType
var _ protoreflect.MessageType = fastReflection_ValuesStateEntry_messageType{}

type fastReflection_ValuesStateEntry_messageType struct{}

func (x fastReflection_ValuesStateEntry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValuesStateEntry)(nil)
}
func (x fastReflection_ValuesStateEntry_messageType) New() protoreflect.Message {
	return new(fastReflection_ValuesStateEntry)
}
func (x fastReflection_ValuesStateEntry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValuesStateEntry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValuesStateEntry) Descriptor() protoreflect.MessageDescriptor {
	return md_ValuesStateEntry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValuesStateEntry) Type() protoreflect.MessageType {
	return _fastReflection_ValuesStateEntry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValuesStateEntry) New() protoreflect.Message {
	return new(fastReflection_ValuesStateEntry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValuesStateEntry) Interface() protoreflect.ProtoMessage {
	return (*ValuesStateEntry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValuesStateEntry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.MetaId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MetaId)
		if !f(fd_ValuesStateEntry_meta_id, value) {
			return
		}
	}
	if x.ValueString != "" {
		value := protoreflect.ValueOfString(x.ValueString)
		if !f(fd_ValuesStateEntry_value_string, value) {
			return
		}
	}
	if x.Value != nil {
		value := protoreflect.ValueOfMessage(x.Value.ProtoReflect())
		if !f(fd_ValuesStateEntry_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValuesStateEntry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "layer.oracle.ValuesStateEntry.meta_id":
		return x.MetaId != uint64(0)
	case "layer.oracle.ValuesStateEntry.value_string":
		return x.ValueString != ""
	case "layer.oracle.ValuesStateEntry.value":
		return x.Value != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesStateEntry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValuesStateEntry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "layer.oracle.ValuesStateEntry.meta_id":
		x.MetaId = uint64(0)
	case "layer.oracle.ValuesStateEntry.value_string":
		x.ValueString = ""
	case "layer.oracle.ValuesStateEntry.value":
		x.Value = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesStateEntry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValuesStateEntry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "layer.oracle.ValuesStateEntry.meta_id":
		value := x.MetaId
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.ValuesStateEntry.value_string":
		value := x.ValueString
		return protoreflect.ValueOfString(value)
	case "layer.oracle.ValuesStateEntry.value":
		value := x.Value
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesStateEntry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValuesStateEntry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "layer.oracle.ValuesStateEntry.meta_id":
		x.MetaId = value.Uint()
	case "layer.oracle.ValuesStateEntry.value_string":
		x.ValueString = value.Interface().(string)
	case "layer.oracle.ValuesStateEntry.value":
		x.Value = value.Message().Interface().(*Value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesStateEntry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValuesStateEntry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.ValuesStateEntry.value":
		if x.Value == nil {
			x.Value = new(Value)
		}
		return protoreflect.ValueOfMessage(x.Value.ProtoReflect())
	case "layer.oracle.ValuesStateEntry.meta_id":
		panic(fmt.Errorf("field meta_id of message layer.oracle.ValuesStateEntry is not mutable"))
	case "layer.oracle.ValuesStateEntry.value_string":
		panic(fmt.Errorf("field value_string of message layer.oracle.ValuesStateEntry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesStateEntry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValuesStateEntry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.ValuesStateEntry.meta_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.ValuesStateEntry.value_string":
		return protoreflect.ValueOfString("")
	case "layer.oracle.ValuesStateEntry.value":
		m := new(Value)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesStateEntry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValuesStateEntry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in layer.oracle.ValuesStateEntry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValuesStateEntry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValuesStateEntry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValuesStateEntry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValuesStateEntry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValuesStateEntry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.MetaId != 0 {
			n += 1 + runtime.Sov(uint64(x.MetaId))
		}
		l = len(x.ValueString)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Value != nil {
			l = options.Size(x.Value)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValuesStateEntry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Value != nil {
			encoded, err := options.Marshal(x.Value)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ValueString) > 0 {
			i -= len(x.ValueString)
			copy(dAtA[i:], x.ValueString)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValueString)))
			i--
			dAtA[i] = 0x12
		}
		if x.MetaId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MetaId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValuesStateEntry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValuesStateEntry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValuesStateEntry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MetaId", wireType)
				}
				x.MetaId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MetaId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValueString", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValueString = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Value == nil {
					x.Value = &Value{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Value); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ValuesWeightSumStateEntry              protoreflect.MessageDescriptor
	fd_ValuesWeightSumStateEntry_meta_id      protoreflect.FieldDescriptor
	fd_ValuesWeightSumStateEntry_total_weight protoreflect.FieldDescriptor
)

func init() {
	file_layer_oracle_genesis_proto_init()
	md_ValuesWeightSumStateEntry = File_layer_oracle_genesis_proto.Messages().ByName("ValuesWeightSumStateEntry")
	fd_ValuesWeightSumStateEntry_meta_id = md_ValuesWeightSumStateEntry.Fields().ByName("meta_id")
	fd_ValuesWeightSumStateEntry_total_weight = md_ValuesWeightSumStateEntry.Fields().ByName("total_weight")
}

var _ protoreflect.Message = (*fastReflection_ValuesWeightSumStateEntry)(nil)

type fastReflection_ValuesWeightSumStateEntry ValuesWeightSumStateEntry

func (x *ValuesWeightSumStateEntry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValuesWeightSumStateEntry)(x)
}

func (x *ValuesWeightSumStateEntry) slowProtoReflect() protoreflect.Message {
	mi := &file_layer_oracle_genesis_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValuesWeightSumStateEntry_messageType fastReflection_ValuesWeightSumStateEntry_messageType
var _ protoreflect.MessageType = fastReflection_ValuesWeightSumStateEntry_messageType{}

type fastReflection_ValuesWeightSumStateEntry_messageType struct{}

func (x fastReflection_ValuesWeightSumStateEntry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValuesWeightSumStateEntry)(nil)
}
func (x fastReflection_ValuesWeightSumStateEntry_messageType) New() protoreflect.Message {
	return new(fastReflection_ValuesWeightSumStateEntry)
}
func (x fastReflection_ValuesWeightSumStateEntry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValuesWeightSumStateEntry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValuesWeightSumStateEntry) Descriptor() protoreflect.MessageDescriptor {
	return md_ValuesWeightSumStateEntry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValuesWeightSumStateEntry) Type() protoreflect.MessageType {
	return _fastReflection_ValuesWeightSumStateEntry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValuesWeightSumStateEntry) New() protoreflect.Message {
	return new(fastReflection_ValuesWeightSumStateEntry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValuesWeightSumStateEntry) Interface() protoreflect.ProtoMessage {
	return (*ValuesWeightSumStateEntry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValuesWeightSumStateEntry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.MetaId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MetaId)
		if !f(fd_ValuesWeightSumStateEntry_meta_id, value) {
			return
		}
	}
	if x.TotalWeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TotalWeight)
		if !f(fd_ValuesWeightSumStateEntry_total_weight, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValuesWeightSumStateEntry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "layer.oracle.ValuesWeightSumStateEntry.meta_id":
		return x.MetaId != uint64(0)
	case "layer.oracle.ValuesWeightSumStateEntry.total_weight":
		return x.TotalWeight != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesWeightSumStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesWeightSumStateEntry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValuesWeightSumStateEntry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "layer.oracle.ValuesWeightSumStateEntry.meta_id":
		x.MetaId = uint64(0)
	case "layer.oracle.ValuesWeightSumStateEntry.total_weight":
		x.TotalWeight = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesWeightSumStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesWeightSumStateEntry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValuesWeightSumStateEntry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "layer.oracle.ValuesWeightSumStateEntry.meta_id":
		value := x.MetaId
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.ValuesWeightSumStateEntry.total_weight":
		value := x.TotalWeight
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesWeightSumStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesWeightSumStateEntry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValuesWeightSumStateEntry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "layer.oracle.ValuesWeightSumStateEntry.meta_id":
		x.MetaId = value.Uint()
	case "layer.oracle.ValuesWeightSumStateEntry.total_weight":
		x.TotalWeight = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesWeightSumStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesWeightSumStateEntry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValuesWeightSumStateEntry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.ValuesWeightSumStateEntry.meta_id":
		panic(fmt.Errorf("field meta_id of message layer.oracle.ValuesWeightSumStateEntry is not mutable"))
	case "layer.oracle.ValuesWeightSumStateEntry.total_weight":
		panic(fmt.Errorf("field total_weight of message layer.oracle.ValuesWeightSumStateEntry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesWeightSumStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesWeightSumStateEntry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValuesWeightSumStateEntry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.ValuesWeightSumStateEntry.meta_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.ValuesWeightSumStateEntry.total_weight":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesWeightSumStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesWeightSumStateEntry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValuesWeightSumStateEntry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in layer.oracle.ValuesWeightSumStateEntry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValuesWeightSumStateEntry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValuesWeightSumStateEntry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValuesWeightSumStateEntry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValuesWeightSumStateEntry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValuesWeightSumStateEntry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.MetaId != 0 {
			n += 1 + runtime.Sov(uint64(x.MetaId))
		}
		if x.TotalWeight != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalWeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValuesWeightSumStateEntry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TotalWeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalWeight))
			i--
			dAtA[i] = 0x10
		}
		if x.MetaId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MetaId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValuesWeightSumStateEntry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValuesWeightSumStateEntry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValuesWeightSumStateEntry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MetaId", wireType)
				}
				x.MetaId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MetaId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalWeight", wireType)
				}
				x.TotalWeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalWeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ValuesWeightedModeStateEntry             protoreflect.MessageDescriptor
	fd_ValuesWeightedModeStateEntry_meta_id     protoreflect.FieldDescriptor
	fd_ValuesWeightedModeStateEntry_value       protoreflect.FieldDescriptor
	fd_ValuesWeightedModeStateEntry_total_power protoreflect.FieldDescriptor
)

func init() {
	file_layer_oracle_genesis_proto_init()
	md_ValuesWeightedModeStateEntry = File_layer_oracle_genesis_proto.Messages().ByName("ValuesWeightedModeStateEntry")
	fd_ValuesWeightedModeStateEntry_meta_id = md_ValuesWeightedModeStateEntry.Fields().ByName("meta_id")
	fd_ValuesWeightedModeStateEntry_value = md_ValuesWeightedModeStateEntry.Fields().ByName("value")
	fd_ValuesWeightedModeStateEntry_total_power = md_ValuesWeightedModeStateEntry.Fields().ByName("total_power")
}

var _ protoreflect.Message = (*fastReflection_ValuesWeightedModeStateEntry)(nil)

type fastReflection_ValuesWeightedModeStateEntry ValuesWeightedModeStateEntry

func (x *ValuesWeightedModeStateEntry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValuesWeightedModeStateEntry)(x)
}

func (x *ValuesWeightedModeStateEntry) slowProtoReflect() protoreflect.Message {
	mi := &file_layer_oracle_genesis_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValuesWeightedModeStateEntry_messageType fastReflection_ValuesWeightedModeStateEntry_messageType
var _ protoreflect.MessageType = fastReflection_ValuesWeightedModeStateEntry_messageType{}

type fastReflection_ValuesWeightedModeStateEntry_messageType struct{}

func (x fastReflection_ValuesWeightedModeStateEntry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValuesWeightedModeStateEntry)(nil)
}
func (x fastReflection_ValuesWeightedModeStateEntry_messageType) New() protoreflect.Message {
	return new(fastReflection_ValuesWeightedModeStateEntry)
}
func (x fastReflection_ValuesWeightedModeStateEntry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValuesWeightedModeStateEntry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValuesWeightedModeStateEntry) Descriptor() protoreflect.MessageDescriptor {
	return md_ValuesWeightedModeStateEntry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValuesWeightedModeStateEntry) Type() protoreflect.MessageType {
	return _fastReflection_ValuesWeightedModeStateEntry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValuesWeightedModeStateEntry) New() protoreflect.Message {
	return new(fastReflection_ValuesWeightedModeStateEntry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValuesWeightedModeStateEntry) Interface() protoreflect.ProtoMessage {
	return (*ValuesWeightedModeStateEntry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValuesWeightedModeStateEntry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.MetaId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MetaId)
		if !f(fd_ValuesWeightedModeStateEntry_meta_id, value) {
			return
		}
	}
	if x.Value != "" {
		value := protoreflect.ValueOfString(x.Value)
		if !f(fd_ValuesWeightedModeStateEntry_value, value) {
			return
		}
	}
	if x.TotalPower != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TotalPower)
		if !f(fd_ValuesWeightedModeStateEntry_total_power, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValuesWeightedModeStateEntry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "layer.oracle.ValuesWeightedModeStateEntry.meta_id":
		return x.MetaId != uint64(0)
	case "layer.oracle.ValuesWeightedModeStateEntry.value":
		return x.Value != ""
	case "layer.oracle.ValuesWeightedModeStateEntry.total_power":
		return x.TotalPower != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesWeightedModeStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesWeightedModeStateEntry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValuesWeightedModeStateEntry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "layer.oracle.ValuesWeightedModeStateEntry.meta_id":
		x.MetaId = uint64(0)
	case "layer.oracle.ValuesWeightedModeStateEntry.value":
		x.Value = ""
	case "layer.oracle.ValuesWeightedModeStateEntry.total_power":
		x.TotalPower = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesWeightedModeStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesWeightedModeStateEntry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValuesWeightedModeStateEntry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "layer.oracle.ValuesWeightedModeStateEntry.meta_id":
		value := x.MetaId
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.ValuesWeightedModeStateEntry.value":
		value := x.Value
		return protoreflect.ValueOfString(value)
	case "layer.oracle.ValuesWeightedModeStateEntry.total_power":
		value := x.TotalPower
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesWeightedModeStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesWeightedModeStateEntry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValuesWeightedModeStateEntry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "layer.oracle.ValuesWeightedModeStateEntry.meta_id":
		x.MetaId = value.Uint()
	case "layer.oracle.ValuesWeightedModeStateEntry.value":
		x.Value = value.Interface().(string)
	case "layer.oracle.ValuesWeightedModeStateEntry.total_power":
		x.TotalPower = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesWeightedModeStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesWeightedModeStateEntry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValuesWeightedModeStateEntry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.ValuesWeightedModeStateEntry.meta_id":
		panic(fmt.Errorf("field meta_id of message layer.oracle.ValuesWeightedModeStateEntry is not mutable"))
	case "layer.oracle.ValuesWeightedModeStateEntry.value":
		panic(fmt.Errorf("field value of message layer.oracle.ValuesWeightedModeStateEntry is not mutable"))
	case "layer.oracle.ValuesWeightedModeStateEntry.total_power":
		panic(fmt.Errorf("field total_power of message layer.oracle.ValuesWeightedModeStateEntry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesWeightedModeStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesWeightedModeStateEntry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValuesWeightedModeStateEntry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.ValuesWeightedModeStateEntry.meta_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.ValuesWeightedModeStateEntry.value":
		return protoreflect.ValueOfString("")
	case "layer.oracle.ValuesWeightedModeStateEntry.total_power":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.ValuesWeightedModeStateEntry"))
		}
		panic(fmt.Errorf("message layer.oracle.ValuesWeightedModeStateEntry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValuesWeightedModeStateEntry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in layer.oracle.ValuesWeightedModeStateEntry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValuesWeightedModeStateEntry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValuesWeightedModeStateEntry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValuesWeightedModeStateEntry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValuesWeightedModeStateEntry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValuesWeightedModeStateEntry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.MetaId != 0 {
			n += 1 + runtime.Sov(uint64(x.MetaId))
		}
		l = len(x.Value)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TotalPower != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalPower))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValuesWeightedModeStateEntry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TotalPower != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalPower))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Value) > 0 {
			i -= len(x.Value)
			copy(dAtA[i:], x.Value)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Value)))
			i--
			dAtA[i] = 0x12
		}
		if x.MetaId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MetaId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValuesWeightedModeStateEntry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValuesWeightedModeStateEntry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValuesWeightedModeStateEntry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MetaId", wireType)
				}
				x.MetaId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MetaId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Value = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalPower", wireType)
				}
				x.TotalPower = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalPower |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: layer/oracle/genesis.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GenesisState defines the oracle module's genesis state.
type GenesisState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params             *Params                         `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	Cyclelist          [][]byte                        `protobuf:"bytes,2,rep,name=cyclelist,proto3" json:"cyclelist,omitempty"`
	QueryDataLimit     uint64                          `protobuf:"varint,3,opt,name=query_data_limit,json=queryDataLimit,proto3" json:"query_data_limit,omitempty"`
	Reports            []*MicroReport                  `protobuf:"bytes,4,rep,name=reports,proto3" json:"reports,omitempty"`
	TipperTotal        []*TipperTotalStateEntry        `protobuf:"bytes,5,rep,name=tipper_total,json=tipperTotal,proto3" json:"tipper_total,omitempty"`
	TotalTips          []*TotalTipsStateEntry          `protobuf:"bytes,6,rep,name=total_tips,json=totalTips,proto3" json:"total_tips,omitempty"`
	Nonces             []*NoncesStateEntry             `protobuf:"bytes,7,rep,name=nonces,proto3" json:"nonces,omitempty"`
	Query              []*QueryMeta                    `protobuf:"bytes,8,rep,name=query,proto3" json:"query,omitempty"`
	Aggregates         []*AggregateStateEntry          `protobuf:"bytes,9,rep,name=aggregates,proto3" json:"aggregates,omitempty"`
	Values             []*ValuesStateEntry             `protobuf:"bytes,10,rep,name=values,proto3" json:"values,omitempty"`
	AggregateValue     []*AggregateValueStateEntry     `protobuf:"bytes,11,rep,name=aggregate_value,json=aggregateValue,proto3" json:"aggregate_value,omitempty"`
	ValuesWeightSum    []*ValuesWeightSumStateEntry    `protobuf:"bytes,12,rep,name=values_weight_sum,json=valuesWeightSum,proto3" json:"values_weight_sum,omitempty"`
	ValuesWeightedMode []*ValuesWeightedModeStateEntry `protobuf:"bytes,13,rep,name=values_weighted_mode,json=valuesWeightedMode,proto3" json:"values_weighted_mode,omitempty"`
}

func (x *GenesisState) Reset() {
	*x = GenesisState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_oracle_genesis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisState) ProtoMessage() {}

// Deprecated: Use GenesisState.ProtoReflect.Descriptor instead.
func (*GenesisState) Descriptor() ([]byte, []int) {
	return file_layer_oracle_genesis_proto_rawDescGZIP(), []int{0}
}

func (x *GenesisState) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *GenesisState) GetCyclelist() [][]byte {
	if x != nil {
		return x.Cyclelist
	}
	return nil
}

func (x *GenesisState) GetQueryDataLimit() uint64 {
	if x != nil {
		return x.QueryDataLimit
	}
	return 0
}

func (x *GenesisState) GetReports() []*MicroReport {
	if x != nil {
		return x.Reports
	}
	return nil
}

func (x *GenesisState) GetTipperTotal() []*TipperTotalStateEntry {
	if x != nil {
		return x.TipperTotal
	}
	return nil
}

func (x *GenesisState) GetTotalTips() []*TotalTipsStateEntry {
	if x != nil {
		return x.TotalTips
	}
	return nil
}

func (x *GenesisState) GetNonces() []*NoncesStateEntry {
	if x != nil {
		return x.Nonces
	}
	return nil
}

func (x *GenesisState) GetQuery() []*QueryMeta {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *GenesisState) GetAggregates() []*AggregateStateEntry {
	if x != nil {
		return x.Aggregates
	}
	return nil
}

func (x *GenesisState) GetValues() []*ValuesStateEntry {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *GenesisState) GetAggregateValue() []*AggregateValueStateEntry {
	if x != nil {
		return x.AggregateValue
	}
	return nil
}

func (x *GenesisState) GetValuesWeightSum() []*ValuesWeightSumStateEntry {
	if x != nil {
		return x.ValuesWeightSum
	}
	return nil
}

func (x *GenesisState) GetValuesWeightedMode() []*ValuesWeightedModeStateEntry {
	if x != nil {
		return x.ValuesWeightedMode
	}
	return nil
}

type AggregateStateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64     `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Aggregate *Aggregate `protobuf:"bytes,2,opt,name=aggregate,proto3" json:"aggregate,omitempty"`
}

func (x *AggregateStateEntry) Reset() {
	*x = AggregateStateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_oracle_genesis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateStateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateStateEntry) ProtoMessage() {}

// Deprecated: Use AggregateStateEntry.ProtoReflect.Descriptor instead.
func (*AggregateStateEntry) Descriptor() ([]byte, []int) {
	return file_layer_oracle_genesis_proto_rawDescGZIP(), []int{1}
}

func (x *AggregateStateEntry) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AggregateStateEntry) GetAggregate() *Aggregate {
	if x != nil {
		return x.Aggregate
	}
	return nil
}

type TipperTotalStateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TipperAddr  []byte `protobuf:"bytes,1,opt,name=tipper_addr,json=tipperAddr,proto3" json:"tipper_addr,omitempty"`
	BlockHeight uint64 `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TipAmount   string `protobuf:"bytes,3,opt,name=tipAmount,proto3" json:"tipAmount,omitempty"`
}

func (x *TipperTotalStateEntry) Reset() {
	*x = TipperTotalStateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_oracle_genesis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TipperTotalStateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TipperTotalStateEntry) ProtoMessage() {}

// Deprecated: Use TipperTotalStateEntry.ProtoReflect.Descriptor instead.
func (*TipperTotalStateEntry) Descriptor() ([]byte, []int) {
	return file_layer_oracle_genesis_proto_rawDescGZIP(), []int{2}
}

func (x *TipperTotalStateEntry) GetTipperAddr() []byte {
	if x != nil {
		return x.TipperAddr
	}
	return nil
}

func (x *TipperTotalStateEntry) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *TipperTotalStateEntry) GetTipAmount() string {
	if x != nil {
		return x.TipAmount
	}
	return ""
}

type TotalTipsStateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight uint64 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TipAmount   string `protobuf:"bytes,2,opt,name=tipAmount,proto3" json:"tipAmount,omitempty"`
}

func (x *TotalTipsStateEntry) Reset() {
	*x = TotalTipsStateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_oracle_genesis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalTipsStateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalTipsStateEntry) ProtoMessage() {}

// Deprecated: Use TotalTipsStateEntry.ProtoReflect.Descriptor instead.
func (*TotalTipsStateEntry) Descriptor() ([]byte, []int) {
	return file_layer_oracle_genesis_proto_rawDescGZIP(), []int{3}
}

func (x *TotalTipsStateEntry) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *TotalTipsStateEntry) GetTipAmount() string {
	if x != nil {
		return x.TipAmount
	}
	return ""
}

type NoncesStateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId []byte `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Nonce   uint64 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *NoncesStateEntry) Reset() {
	*x = NoncesStateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_oracle_genesis_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoncesStateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoncesStateEntry) ProtoMessage() {}

// Deprecated: Use NoncesStateEntry.ProtoReflect.Descriptor instead.
func (*NoncesStateEntry) Descriptor() ([]byte, []int) {
	return file_layer_oracle_genesis_proto_rawDescGZIP(), []int{4}
}

func (x *NoncesStateEntry) GetQueryId() []byte {
	if x != nil {
		return x.QueryId
	}
	return nil
}

func (x *NoncesStateEntry) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type AggregateValueStateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaId           uint64            `protobuf:"varint,1,opt,name=meta_id,json=metaId,proto3" json:"meta_id,omitempty"`
	RunningAggregate *RunningAggregate `protobuf:"bytes,2,opt,name=running_aggregate,json=runningAggregate,proto3" json:"running_aggregate,omitempty"`
}

func (x *AggregateValueStateEntry) Reset() {
	*x = AggregateValueStateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_oracle_genesis_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateValueStateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateValueStateEntry) ProtoMessage() {}

// Deprecated: Use AggregateValueStateEntry.ProtoReflect.Descriptor instead.
func (*AggregateValueStateEntry) Descriptor() ([]byte, []int) {
	return file_layer_oracle_genesis_proto_rawDescGZIP(), []int{5}
}

func (x *AggregateValueStateEntry) GetMetaId() uint64 {
	if x != nil {
		return x.MetaId
	}
	return 0
}

func (x *AggregateValueStateEntry) GetRunningAggregate() *RunningAggregate {
	if x != nil {
		return x.RunningAggregate
	}
	return nil
}

type ValuesStateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaId      uint64 `protobuf:"varint,1,opt,name=meta_id,json=metaId,proto3" json:"meta_id,omitempty"`
	ValueString string `protobuf:"bytes,2,opt,name=value_string,json=valueString,proto3" json:"value_string,omitempty"`
	Value       *Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ValuesStateEntry) Reset() {
	*x = ValuesStateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_oracle_genesis_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValuesStateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValuesStateEntry) ProtoMessage() {}

// Deprecated: Use ValuesStateEntry.ProtoReflect.Descriptor instead.
func (*ValuesStateEntry) Descriptor() ([]byte, []int) {
	return file_layer_oracle_genesis_proto_rawDescGZIP(), []int{6}
}

func (x *ValuesStateEntry) GetMetaId() uint64 {
	if x != nil {
		return x.MetaId
	}
	return 0
}

func (x *ValuesStateEntry) GetValueString() string {
	if x != nil {
		return x.ValueString
	}
	return ""
}

func (x *ValuesStateEntry) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type ValuesWeightSumStateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaId      uint64 `protobuf:"varint,1,opt,name=meta_id,json=metaId,proto3" json:"meta_id,omitempty"`
	TotalWeight uint64 `protobuf:"varint,2,opt,name=total_weight,json=totalWeight,proto3" json:"total_weight,omitempty"`
}

func (x *ValuesWeightSumStateEntry) Reset() {
	*x = ValuesWeightSumStateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_oracle_genesis_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValuesWeightSumStateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValuesWeightSumStateEntry) ProtoMessage() {}

// Deprecated: Use ValuesWeightSumStateEntry.ProtoReflect.Descriptor instead.
func (*ValuesWeightSumStateEntry) Descriptor() ([]byte, []int) {
	return file_layer_oracle_genesis_proto_rawDescGZIP(), []int{7}
}

func (x *ValuesWeightSumStateEntry) GetMetaId() uint64 {
	if x != nil {
		return x.MetaId
	}
	return 0
}

func (x *ValuesWeightSumStateEntry) GetTotalWeight() uint64 {
	if x != nil {
		return x.TotalWeight
	}
	return 0
}

type ValuesWeightedModeStateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaId     uint64 `protobuf:"varint,1,opt,name=meta_id,json=metaId,proto3" json:"meta_id,omitempty"`
	Value      string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	TotalPower uint64 `protobuf:"varint,3,opt,name=total_power,json=totalPower,proto3" json:"total_power,omitempty"`
}

func (x *ValuesWeightedModeStateEntry) Reset() {
	*x = ValuesWeightedModeStateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_oracle_genesis_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValuesWeightedModeStateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValuesWeightedModeStateEntry) ProtoMessage() {}

// Deprecated: Use ValuesWeightedModeStateEntry.ProtoReflect.Descriptor instead.
func (*ValuesWeightedModeStateEntry) Descriptor() ([]byte, []int) {
	return file_layer_oracle_genesis_proto_rawDescGZIP(), []int{8}
}

func (x *ValuesWeightedModeStateEntry) GetMetaId() uint64 {
	if x != nil {
		return x.MetaId
	}
	return 0
}

func (x *ValuesWeightedModeStateEntry) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ValuesWeightedModeStateEntry) GetTotalPower() uint64 {
	if x != nil {
		return x.TotalPower
	}
	return 0
}

var File_layer_oracle_genesis_proto protoreflect.FileDescriptor

var file_layer_oracle_genesis_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x6f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x06, 0x0a, 0x0c,
	0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x22, 0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0c, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x33,
	0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x4d,
	0x69, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x12, 0x46, 0x0a, 0x0c, 0x74, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x70, 0x70, 0x65, 0x72, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x74, 0x69, 0x70, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x40, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x70, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x70, 0x73, 0x12, 0x36, 0x0a,
	0x06, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x41, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x4f, 0x0a, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x53, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x75, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x5c, 0x0a, 0x14, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65,
	0x64, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x12, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x4d,
	0x6f, 0x64, 0x65, 0x22, 0x6a, 0x0a, 0x13, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x35, 0x0a, 0x09, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x52, 0x09, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x22,
	0xbb, 0x01, 0x0a, 0x15, 0x54, 0x69, 0x70, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x70,
	0x70, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x74, 0x69, 0x70, 0x70, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x5e, 0x0a,
	0x09, 0x74, 0x69, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x40, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2,
	0xde, 0x1f, 0x11, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x69, 0x70, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49,
	0x6e, 0x74, 0x52, 0x09, 0x74, 0x69, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x98, 0x01,
	0x0a, 0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x70, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x5e, 0x0a, 0x09, 0x74, 0x69, 0x70, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x40, 0xc8, 0xde, 0x1f,
	0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69,
	0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x11, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x69, 0x70, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd2,
	0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x09, 0x74,
	0x69, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x10, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x80, 0x01,
	0x0a, 0x18, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x61, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x11, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x10,
	0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x22, 0x79, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x61, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x57, 0x0a, 0x19, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x75, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x61, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0x6e, 0x0a, 0x1c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x61, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x42, 0x9e, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x42, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x6c, 0x6f, 0x72, 0x2d, 0x69, 0x6f, 0x2f,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0xa2, 0x02, 0x03, 0x4c, 0x4f, 0x58, 0xaa, 0x02, 0x0c, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0xca, 0x02, 0x0c, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x5c, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0xe2, 0x02, 0x18, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x5c, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x3a, 0x3a, 0x4f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_layer_oracle_genesis_proto_rawDescOnce sync.Once
	file_layer_oracle_genesis_proto_rawDescData = file_layer_oracle_genesis_proto_rawDesc
)

func file_layer_oracle_genesis_proto_rawDescGZIP() []byte {
	file_layer_oracle_genesis_proto_rawDescOnce.Do(func() {
		file_layer_oracle_genesis_proto_rawDescData = protoimpl.X.CompressGZIP(file_layer_oracle_genesis_proto_rawDescData)
	})
	return file_layer_oracle_genesis_proto_rawDescData
}

var file_layer_oracle_genesis_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_layer_oracle_genesis_proto_goTypes = []interface{}{
	(*GenesisState)(nil),                 // 0: layer.oracle.GenesisState
	(*AggregateStateEntry)(nil),          // 1: layer.oracle.AggregateStateEntry
	(*TipperTotalStateEntry)(nil),        // 2: layer.oracle.TipperTotalStateEntry
	(*TotalTipsStateEntry)(nil),          // 3: layer.oracle.TotalTipsStateEntry
	(*NoncesStateEntry)(nil),             // 4: layer.oracle.NoncesStateEntry
	(*AggregateValueStateEntry)(nil),     // 5: layer.oracle.AggregateValueStateEntry
	(*ValuesStateEntry)(nil),             // 6: layer.oracle.ValuesStateEntry
	(*ValuesWeightSumStateEntry)(nil),    // 7: layer.oracle.ValuesWeightSumStateEntry
	(*ValuesWeightedModeStateEntry)(nil), // 8: layer.oracle.ValuesWeightedModeStateEntry
	(*Params)(nil),                       // 9: layer.oracle.Params
	(*MicroReport)(nil),                  // 10: layer.oracle.MicroReport
	(*QueryMeta)(nil),                    // 11: layer.oracle.QueryMeta
	(*Aggregate)(nil),                    // 12: layer.oracle.Aggregate
	(*RunningAggregate)(nil),             // 13: layer.oracle.RunningAggregate
	(*Value)(nil),                        // 14: layer.oracle.Value
}
var file_layer_oracle_genesis_proto_depIdxs = []int32{
	9,  // 0: layer.oracle.GenesisState.params:type_name -> layer.oracle.Params
	10, // 1: layer.oracle.GenesisState.reports:type_name -> layer.oracle.MicroReport
	2,  // 2: layer.oracle.GenesisState.tipper_total:type_name -> layer.oracle.TipperTotalStateEntry
	3,  // 3: layer.oracle.GenesisState.total_tips:type_name -> layer.oracle.TotalTipsStateEntry
	4,  // 4: layer.oracle.GenesisState.nonces:type_name -> layer.oracle.NoncesStateEntry
	11, // 5: layer.oracle.GenesisState.query:type_name -> layer.oracle.QueryMeta
	1,  // 6: layer.oracle.GenesisState.aggregates:type_name -> layer.oracle.AggregateStateEntry
	6,  // 7: layer.oracle.GenesisState.values:type_name -> layer.oracle.ValuesStateEntry
	5,  // 8: layer.oracle.GenesisState.aggregate_value:type_name -> layer.oracle.AggregateValueStateEntry
	7,  // 9: layer.oracle.GenesisState.values_weight_sum:type_name -> layer.oracle.ValuesWeightSumStateEntry
	8,  // 10: layer.oracle.GenesisState.values_weighted_mode:type_name -> layer.oracle.ValuesWeightedModeStateEntry
	12, // 11: layer.oracle.AggregateStateEntry.aggregate:type_name -> layer.oracle.Aggregate
	13, // 12: layer.oracle.AggregateValueStateEntry.running_aggregate:type_name -> layer.oracle.RunningAggregate
	14, // 13: layer.oracle.ValuesStateEntry.value:type_name -> layer.oracle.Value
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_layer_oracle_genesis_proto_init() }
func file_layer_oracle_genesis_proto_init() {
	if File_layer_oracle_genesis_proto != nil {
		return
	}
	file_layer_oracle_params_proto_init()
	file_layer_oracle_micro_report_proto_init()
	file_layer_oracle_aggregate_reporter_proto_init()
	file_layer_oracle_query_meta_proto_init()
	file_layer_oracle_aggregate_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_layer_oracle_genesis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_oracle_genesis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateStateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_oracle_genesis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TipperTotalStateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_oracle_genesis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalTipsStateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_oracle_genesis_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoncesStateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_oracle_genesis_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateValueStateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_oracle_genesis_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValuesStateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_oracle_genesis_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValuesWeightSumStateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_oracle_genesis_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValuesWeightedModeStateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_layer_oracle_genesis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_layer_oracle_genesis_proto_goTypes,
		DependencyIndexes: file_layer_oracle_genesis_proto_depIdxs,
		MessageInfos:      file_layer_oracle_genesis_proto_msgTypes,
	}.Build()
	File_layer_oracle_genesis_proto = out.File
	file_layer_oracle_genesis_proto_rawDesc = nil
	file_layer_oracle_genesis_proto_goTypes = nil
	file_layer_oracle_genesis_proto_depIdxs = nil
}
