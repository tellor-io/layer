// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package oracle

import (
	_ "cosmossdk.io/api/amino"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_QueryMeta                            protoreflect.MessageDescriptor
	fd_QueryMeta_id                         protoreflect.FieldDescriptor
	fd_QueryMeta_amount                     protoreflect.FieldDescriptor
	fd_QueryMeta_expiration                 protoreflect.FieldDescriptor
	fd_QueryMeta_registry_spec_block_window protoreflect.FieldDescriptor
	fd_QueryMeta_has_revealed_reports       protoreflect.FieldDescriptor
	fd_QueryMeta_query_data                 protoreflect.FieldDescriptor
	fd_QueryMeta_query_type                 protoreflect.FieldDescriptor
	fd_QueryMeta_cycle_list                 protoreflect.FieldDescriptor
)

func init() {
	file_layer_oracle_query_meta_proto_init()
	md_QueryMeta = File_layer_oracle_query_meta_proto.Messages().ByName("QueryMeta")
	fd_QueryMeta_id = md_QueryMeta.Fields().ByName("id")
	fd_QueryMeta_amount = md_QueryMeta.Fields().ByName("amount")
	fd_QueryMeta_expiration = md_QueryMeta.Fields().ByName("expiration")
	fd_QueryMeta_registry_spec_block_window = md_QueryMeta.Fields().ByName("registry_spec_block_window")
	fd_QueryMeta_has_revealed_reports = md_QueryMeta.Fields().ByName("has_revealed_reports")
	fd_QueryMeta_query_data = md_QueryMeta.Fields().ByName("query_data")
	fd_QueryMeta_query_type = md_QueryMeta.Fields().ByName("query_type")
	fd_QueryMeta_cycle_list = md_QueryMeta.Fields().ByName("cycle_list")
}

var _ protoreflect.Message = (*fastReflection_QueryMeta)(nil)

type fastReflection_QueryMeta QueryMeta

func (x *QueryMeta) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryMeta)(x)
}

func (x *QueryMeta) slowProtoReflect() protoreflect.Message {
	mi := &file_layer_oracle_query_meta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryMeta_messageType fastReflection_QueryMeta_messageType
var _ protoreflect.MessageType = fastReflection_QueryMeta_messageType{}

type fastReflection_QueryMeta_messageType struct{}

func (x fastReflection_QueryMeta_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryMeta)(nil)
}
func (x fastReflection_QueryMeta_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryMeta)
}
func (x fastReflection_QueryMeta_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryMeta
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryMeta) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryMeta
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryMeta) Type() protoreflect.MessageType {
	return _fastReflection_QueryMeta_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryMeta) New() protoreflect.Message {
	return new(fastReflection_QueryMeta)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryMeta) Interface() protoreflect.ProtoMessage {
	return (*QueryMeta)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryMeta) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_QueryMeta_id, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_QueryMeta_amount, value) {
			return
		}
	}
	if x.Expiration != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Expiration)
		if !f(fd_QueryMeta_expiration, value) {
			return
		}
	}
	if x.RegistrySpecBlockWindow != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RegistrySpecBlockWindow)
		if !f(fd_QueryMeta_registry_spec_block_window, value) {
			return
		}
	}
	if x.HasRevealedReports != false {
		value := protoreflect.ValueOfBool(x.HasRevealedReports)
		if !f(fd_QueryMeta_has_revealed_reports, value) {
			return
		}
	}
	if len(x.QueryData) != 0 {
		value := protoreflect.ValueOfBytes(x.QueryData)
		if !f(fd_QueryMeta_query_data, value) {
			return
		}
	}
	if x.QueryType != "" {
		value := protoreflect.ValueOfString(x.QueryType)
		if !f(fd_QueryMeta_query_type, value) {
			return
		}
	}
	if x.CycleList != false {
		value := protoreflect.ValueOfBool(x.CycleList)
		if !f(fd_QueryMeta_cycle_list, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryMeta) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "layer.oracle.QueryMeta.id":
		return x.Id != uint64(0)
	case "layer.oracle.QueryMeta.amount":
		return x.Amount != ""
	case "layer.oracle.QueryMeta.expiration":
		return x.Expiration != uint64(0)
	case "layer.oracle.QueryMeta.registry_spec_block_window":
		return x.RegistrySpecBlockWindow != uint64(0)
	case "layer.oracle.QueryMeta.has_revealed_reports":
		return x.HasRevealedReports != false
	case "layer.oracle.QueryMeta.query_data":
		return len(x.QueryData) != 0
	case "layer.oracle.QueryMeta.query_type":
		return x.QueryType != ""
	case "layer.oracle.QueryMeta.cycle_list":
		return x.CycleList != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.QueryMeta"))
		}
		panic(fmt.Errorf("message layer.oracle.QueryMeta does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryMeta) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "layer.oracle.QueryMeta.id":
		x.Id = uint64(0)
	case "layer.oracle.QueryMeta.amount":
		x.Amount = ""
	case "layer.oracle.QueryMeta.expiration":
		x.Expiration = uint64(0)
	case "layer.oracle.QueryMeta.registry_spec_block_window":
		x.RegistrySpecBlockWindow = uint64(0)
	case "layer.oracle.QueryMeta.has_revealed_reports":
		x.HasRevealedReports = false
	case "layer.oracle.QueryMeta.query_data":
		x.QueryData = nil
	case "layer.oracle.QueryMeta.query_type":
		x.QueryType = ""
	case "layer.oracle.QueryMeta.cycle_list":
		x.CycleList = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.QueryMeta"))
		}
		panic(fmt.Errorf("message layer.oracle.QueryMeta does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryMeta) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "layer.oracle.QueryMeta.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.QueryMeta.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "layer.oracle.QueryMeta.expiration":
		value := x.Expiration
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.QueryMeta.registry_spec_block_window":
		value := x.RegistrySpecBlockWindow
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.QueryMeta.has_revealed_reports":
		value := x.HasRevealedReports
		return protoreflect.ValueOfBool(value)
	case "layer.oracle.QueryMeta.query_data":
		value := x.QueryData
		return protoreflect.ValueOfBytes(value)
	case "layer.oracle.QueryMeta.query_type":
		value := x.QueryType
		return protoreflect.ValueOfString(value)
	case "layer.oracle.QueryMeta.cycle_list":
		value := x.CycleList
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.QueryMeta"))
		}
		panic(fmt.Errorf("message layer.oracle.QueryMeta does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryMeta) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "layer.oracle.QueryMeta.id":
		x.Id = value.Uint()
	case "layer.oracle.QueryMeta.amount":
		x.Amount = value.Interface().(string)
	case "layer.oracle.QueryMeta.expiration":
		x.Expiration = value.Uint()
	case "layer.oracle.QueryMeta.registry_spec_block_window":
		x.RegistrySpecBlockWindow = value.Uint()
	case "layer.oracle.QueryMeta.has_revealed_reports":
		x.HasRevealedReports = value.Bool()
	case "layer.oracle.QueryMeta.query_data":
		x.QueryData = value.Bytes()
	case "layer.oracle.QueryMeta.query_type":
		x.QueryType = value.Interface().(string)
	case "layer.oracle.QueryMeta.cycle_list":
		x.CycleList = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.QueryMeta"))
		}
		panic(fmt.Errorf("message layer.oracle.QueryMeta does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryMeta) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.QueryMeta.id":
		panic(fmt.Errorf("field id of message layer.oracle.QueryMeta is not mutable"))
	case "layer.oracle.QueryMeta.amount":
		panic(fmt.Errorf("field amount of message layer.oracle.QueryMeta is not mutable"))
	case "layer.oracle.QueryMeta.expiration":
		panic(fmt.Errorf("field expiration of message layer.oracle.QueryMeta is not mutable"))
	case "layer.oracle.QueryMeta.registry_spec_block_window":
		panic(fmt.Errorf("field registry_spec_block_window of message layer.oracle.QueryMeta is not mutable"))
	case "layer.oracle.QueryMeta.has_revealed_reports":
		panic(fmt.Errorf("field has_revealed_reports of message layer.oracle.QueryMeta is not mutable"))
	case "layer.oracle.QueryMeta.query_data":
		panic(fmt.Errorf("field query_data of message layer.oracle.QueryMeta is not mutable"))
	case "layer.oracle.QueryMeta.query_type":
		panic(fmt.Errorf("field query_type of message layer.oracle.QueryMeta is not mutable"))
	case "layer.oracle.QueryMeta.cycle_list":
		panic(fmt.Errorf("field cycle_list of message layer.oracle.QueryMeta is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.QueryMeta"))
		}
		panic(fmt.Errorf("message layer.oracle.QueryMeta does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryMeta) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.QueryMeta.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.QueryMeta.amount":
		return protoreflect.ValueOfString("")
	case "layer.oracle.QueryMeta.expiration":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.QueryMeta.registry_spec_block_window":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.QueryMeta.has_revealed_reports":
		return protoreflect.ValueOfBool(false)
	case "layer.oracle.QueryMeta.query_data":
		return protoreflect.ValueOfBytes(nil)
	case "layer.oracle.QueryMeta.query_type":
		return protoreflect.ValueOfString("")
	case "layer.oracle.QueryMeta.cycle_list":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.QueryMeta"))
		}
		panic(fmt.Errorf("message layer.oracle.QueryMeta does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryMeta) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in layer.oracle.QueryMeta", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryMeta) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryMeta) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryMeta) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryMeta) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryMeta)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Expiration != 0 {
			n += 1 + runtime.Sov(uint64(x.Expiration))
		}
		if x.RegistrySpecBlockWindow != 0 {
			n += 1 + runtime.Sov(uint64(x.RegistrySpecBlockWindow))
		}
		if x.HasRevealedReports {
			n += 2
		}
		l = len(x.QueryData)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.QueryType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CycleList {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryMeta)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CycleList {
			i--
			if x.CycleList {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x40
		}
		if len(x.QueryType) > 0 {
			i -= len(x.QueryType)
			copy(dAtA[i:], x.QueryType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.QueryType)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.QueryData) > 0 {
			i -= len(x.QueryData)
			copy(dAtA[i:], x.QueryData)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.QueryData)))
			i--
			dAtA[i] = 0x32
		}
		if x.HasRevealedReports {
			i--
			if x.HasRevealedReports {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x28
		}
		if x.RegistrySpecBlockWindow != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RegistrySpecBlockWindow))
			i--
			dAtA[i] = 0x20
		}
		if x.Expiration != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Expiration))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryMeta)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryMeta: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryMeta: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Expiration", wireType)
				}
				x.Expiration = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Expiration |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RegistrySpecBlockWindow", wireType)
				}
				x.RegistrySpecBlockWindow = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RegistrySpecBlockWindow |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HasRevealedReports", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.HasRevealedReports = bool(v != 0)
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field QueryData", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.QueryData = append(x.QueryData[:0], dAtA[iNdEx:postIndex]...)
				if x.QueryData == nil {
					x.QueryData = []byte{}
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field QueryType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.QueryType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CycleList", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.CycleList = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Reward                 protoreflect.MessageDescriptor
	fd_Reward_totalPower      protoreflect.FieldDescriptor
	fd_Reward_amount          protoreflect.FieldDescriptor
	fd_Reward_cycle_list      protoreflect.FieldDescriptor
	fd_Reward_block_height    protoreflect.FieldDescriptor
	fd_Reward_power_paid_out  protoreflect.FieldDescriptor
	fd_Reward_amount_paid_out protoreflect.FieldDescriptor
)

func init() {
	file_layer_oracle_query_meta_proto_init()
	md_Reward = File_layer_oracle_query_meta_proto.Messages().ByName("reward")
	fd_Reward_totalPower = md_Reward.Fields().ByName("totalPower")
	fd_Reward_amount = md_Reward.Fields().ByName("amount")
	fd_Reward_cycle_list = md_Reward.Fields().ByName("cycle_list")
	fd_Reward_block_height = md_Reward.Fields().ByName("block_height")
	fd_Reward_power_paid_out = md_Reward.Fields().ByName("power_paid_out")
	fd_Reward_amount_paid_out = md_Reward.Fields().ByName("amount_paid_out")
}

var _ protoreflect.Message = (*fastReflection_Reward)(nil)

type fastReflection_Reward Reward

func (x *Reward) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Reward)(x)
}

func (x *Reward) slowProtoReflect() protoreflect.Message {
	mi := &file_layer_oracle_query_meta_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Reward_messageType fastReflection_Reward_messageType
var _ protoreflect.MessageType = fastReflection_Reward_messageType{}

type fastReflection_Reward_messageType struct{}

func (x fastReflection_Reward_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Reward)(nil)
}
func (x fastReflection_Reward_messageType) New() protoreflect.Message {
	return new(fastReflection_Reward)
}
func (x fastReflection_Reward_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Reward
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Reward) Descriptor() protoreflect.MessageDescriptor {
	return md_Reward
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Reward) Type() protoreflect.MessageType {
	return _fastReflection_Reward_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Reward) New() protoreflect.Message {
	return new(fastReflection_Reward)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Reward) Interface() protoreflect.ProtoMessage {
	return (*Reward)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Reward) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TotalPower != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TotalPower)
		if !f(fd_Reward_totalPower, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_Reward_amount, value) {
			return
		}
	}
	if x.CycleList != false {
		value := protoreflect.ValueOfBool(x.CycleList)
		if !f(fd_Reward_cycle_list, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_Reward_block_height, value) {
			return
		}
	}
	if x.PowerPaidOut != "" {
		value := protoreflect.ValueOfString(x.PowerPaidOut)
		if !f(fd_Reward_power_paid_out, value) {
			return
		}
	}
	if x.AmountPaidOut != "" {
		value := protoreflect.ValueOfString(x.AmountPaidOut)
		if !f(fd_Reward_amount_paid_out, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Reward) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "layer.oracle.reward.totalPower":
		return x.TotalPower != uint64(0)
	case "layer.oracle.reward.amount":
		return x.Amount != ""
	case "layer.oracle.reward.cycle_list":
		return x.CycleList != false
	case "layer.oracle.reward.block_height":
		return x.BlockHeight != uint64(0)
	case "layer.oracle.reward.power_paid_out":
		return x.PowerPaidOut != ""
	case "layer.oracle.reward.amount_paid_out":
		return x.AmountPaidOut != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.reward"))
		}
		panic(fmt.Errorf("message layer.oracle.reward does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Reward) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "layer.oracle.reward.totalPower":
		x.TotalPower = uint64(0)
	case "layer.oracle.reward.amount":
		x.Amount = ""
	case "layer.oracle.reward.cycle_list":
		x.CycleList = false
	case "layer.oracle.reward.block_height":
		x.BlockHeight = uint64(0)
	case "layer.oracle.reward.power_paid_out":
		x.PowerPaidOut = ""
	case "layer.oracle.reward.amount_paid_out":
		x.AmountPaidOut = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.reward"))
		}
		panic(fmt.Errorf("message layer.oracle.reward does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Reward) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "layer.oracle.reward.totalPower":
		value := x.TotalPower
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.reward.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "layer.oracle.reward.cycle_list":
		value := x.CycleList
		return protoreflect.ValueOfBool(value)
	case "layer.oracle.reward.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.reward.power_paid_out":
		value := x.PowerPaidOut
		return protoreflect.ValueOfString(value)
	case "layer.oracle.reward.amount_paid_out":
		value := x.AmountPaidOut
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.reward"))
		}
		panic(fmt.Errorf("message layer.oracle.reward does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Reward) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "layer.oracle.reward.totalPower":
		x.TotalPower = value.Uint()
	case "layer.oracle.reward.amount":
		x.Amount = value.Interface().(string)
	case "layer.oracle.reward.cycle_list":
		x.CycleList = value.Bool()
	case "layer.oracle.reward.block_height":
		x.BlockHeight = value.Uint()
	case "layer.oracle.reward.power_paid_out":
		x.PowerPaidOut = value.Interface().(string)
	case "layer.oracle.reward.amount_paid_out":
		x.AmountPaidOut = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.reward"))
		}
		panic(fmt.Errorf("message layer.oracle.reward does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Reward) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.reward.totalPower":
		panic(fmt.Errorf("field totalPower of message layer.oracle.reward is not mutable"))
	case "layer.oracle.reward.amount":
		panic(fmt.Errorf("field amount of message layer.oracle.reward is not mutable"))
	case "layer.oracle.reward.cycle_list":
		panic(fmt.Errorf("field cycle_list of message layer.oracle.reward is not mutable"))
	case "layer.oracle.reward.block_height":
		panic(fmt.Errorf("field block_height of message layer.oracle.reward is not mutable"))
	case "layer.oracle.reward.power_paid_out":
		panic(fmt.Errorf("field power_paid_out of message layer.oracle.reward is not mutable"))
	case "layer.oracle.reward.amount_paid_out":
		panic(fmt.Errorf("field amount_paid_out of message layer.oracle.reward is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.reward"))
		}
		panic(fmt.Errorf("message layer.oracle.reward does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Reward) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.reward.totalPower":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.reward.amount":
		return protoreflect.ValueOfString("")
	case "layer.oracle.reward.cycle_list":
		return protoreflect.ValueOfBool(false)
	case "layer.oracle.reward.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.reward.power_paid_out":
		return protoreflect.ValueOfString("")
	case "layer.oracle.reward.amount_paid_out":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.reward"))
		}
		panic(fmt.Errorf("message layer.oracle.reward does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Reward) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in layer.oracle.reward", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Reward) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Reward) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Reward) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Reward) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Reward)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TotalPower != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalPower))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CycleList {
			n += 2
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		l = len(x.PowerPaidOut)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.AmountPaidOut)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Reward)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.AmountPaidOut) > 0 {
			i -= len(x.AmountPaidOut)
			copy(dAtA[i:], x.AmountPaidOut)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AmountPaidOut)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.PowerPaidOut) > 0 {
			i -= len(x.PowerPaidOut)
			copy(dAtA[i:], x.PowerPaidOut)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PowerPaidOut)))
			i--
			dAtA[i] = 0x2a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x20
		}
		if x.CycleList {
			i--
			if x.CycleList {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x18
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x12
		}
		if x.TotalPower != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalPower))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Reward)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Reward: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Reward: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalPower", wireType)
				}
				x.TotalPower = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalPower |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CycleList", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.CycleList = bool(v != 0)
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PowerPaidOut", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PowerPaidOut = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AmountPaidOut", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AmountPaidOut = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryMetaButString                            protoreflect.MessageDescriptor
	fd_QueryMetaButString_id                         protoreflect.FieldDescriptor
	fd_QueryMetaButString_amount                     protoreflect.FieldDescriptor
	fd_QueryMetaButString_expiration                 protoreflect.FieldDescriptor
	fd_QueryMetaButString_registry_spec_block_window protoreflect.FieldDescriptor
	fd_QueryMetaButString_has_revealed_reports       protoreflect.FieldDescriptor
	fd_QueryMetaButString_query_data                 protoreflect.FieldDescriptor
	fd_QueryMetaButString_query_type                 protoreflect.FieldDescriptor
	fd_QueryMetaButString_cycle_list                 protoreflect.FieldDescriptor
)

func init() {
	file_layer_oracle_query_meta_proto_init()
	md_QueryMetaButString = File_layer_oracle_query_meta_proto.Messages().ByName("QueryMetaButString")
	fd_QueryMetaButString_id = md_QueryMetaButString.Fields().ByName("id")
	fd_QueryMetaButString_amount = md_QueryMetaButString.Fields().ByName("amount")
	fd_QueryMetaButString_expiration = md_QueryMetaButString.Fields().ByName("expiration")
	fd_QueryMetaButString_registry_spec_block_window = md_QueryMetaButString.Fields().ByName("registry_spec_block_window")
	fd_QueryMetaButString_has_revealed_reports = md_QueryMetaButString.Fields().ByName("has_revealed_reports")
	fd_QueryMetaButString_query_data = md_QueryMetaButString.Fields().ByName("query_data")
	fd_QueryMetaButString_query_type = md_QueryMetaButString.Fields().ByName("query_type")
	fd_QueryMetaButString_cycle_list = md_QueryMetaButString.Fields().ByName("cycle_list")
}

var _ protoreflect.Message = (*fastReflection_QueryMetaButString)(nil)

type fastReflection_QueryMetaButString QueryMetaButString

func (x *QueryMetaButString) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryMetaButString)(x)
}

func (x *QueryMetaButString) slowProtoReflect() protoreflect.Message {
	mi := &file_layer_oracle_query_meta_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryMetaButString_messageType fastReflection_QueryMetaButString_messageType
var _ protoreflect.MessageType = fastReflection_QueryMetaButString_messageType{}

type fastReflection_QueryMetaButString_messageType struct{}

func (x fastReflection_QueryMetaButString_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryMetaButString)(nil)
}
func (x fastReflection_QueryMetaButString_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryMetaButString)
}
func (x fastReflection_QueryMetaButString_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryMetaButString
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryMetaButString) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryMetaButString
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryMetaButString) Type() protoreflect.MessageType {
	return _fastReflection_QueryMetaButString_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryMetaButString) New() protoreflect.Message {
	return new(fastReflection_QueryMetaButString)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryMetaButString) Interface() protoreflect.ProtoMessage {
	return (*QueryMetaButString)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryMetaButString) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_QueryMetaButString_id, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_QueryMetaButString_amount, value) {
			return
		}
	}
	if x.Expiration != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Expiration)
		if !f(fd_QueryMetaButString_expiration, value) {
			return
		}
	}
	if x.RegistrySpecBlockWindow != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RegistrySpecBlockWindow)
		if !f(fd_QueryMetaButString_registry_spec_block_window, value) {
			return
		}
	}
	if x.HasRevealedReports != false {
		value := protoreflect.ValueOfBool(x.HasRevealedReports)
		if !f(fd_QueryMetaButString_has_revealed_reports, value) {
			return
		}
	}
	if x.QueryData != "" {
		value := protoreflect.ValueOfString(x.QueryData)
		if !f(fd_QueryMetaButString_query_data, value) {
			return
		}
	}
	if x.QueryType != "" {
		value := protoreflect.ValueOfString(x.QueryType)
		if !f(fd_QueryMetaButString_query_type, value) {
			return
		}
	}
	if x.CycleList != false {
		value := protoreflect.ValueOfBool(x.CycleList)
		if !f(fd_QueryMetaButString_cycle_list, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryMetaButString) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "layer.oracle.QueryMetaButString.id":
		return x.Id != uint64(0)
	case "layer.oracle.QueryMetaButString.amount":
		return x.Amount != ""
	case "layer.oracle.QueryMetaButString.expiration":
		return x.Expiration != uint64(0)
	case "layer.oracle.QueryMetaButString.registry_spec_block_window":
		return x.RegistrySpecBlockWindow != uint64(0)
	case "layer.oracle.QueryMetaButString.has_revealed_reports":
		return x.HasRevealedReports != false
	case "layer.oracle.QueryMetaButString.query_data":
		return x.QueryData != ""
	case "layer.oracle.QueryMetaButString.query_type":
		return x.QueryType != ""
	case "layer.oracle.QueryMetaButString.cycle_list":
		return x.CycleList != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.QueryMetaButString"))
		}
		panic(fmt.Errorf("message layer.oracle.QueryMetaButString does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryMetaButString) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "layer.oracle.QueryMetaButString.id":
		x.Id = uint64(0)
	case "layer.oracle.QueryMetaButString.amount":
		x.Amount = ""
	case "layer.oracle.QueryMetaButString.expiration":
		x.Expiration = uint64(0)
	case "layer.oracle.QueryMetaButString.registry_spec_block_window":
		x.RegistrySpecBlockWindow = uint64(0)
	case "layer.oracle.QueryMetaButString.has_revealed_reports":
		x.HasRevealedReports = false
	case "layer.oracle.QueryMetaButString.query_data":
		x.QueryData = ""
	case "layer.oracle.QueryMetaButString.query_type":
		x.QueryType = ""
	case "layer.oracle.QueryMetaButString.cycle_list":
		x.CycleList = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.QueryMetaButString"))
		}
		panic(fmt.Errorf("message layer.oracle.QueryMetaButString does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryMetaButString) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "layer.oracle.QueryMetaButString.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.QueryMetaButString.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "layer.oracle.QueryMetaButString.expiration":
		value := x.Expiration
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.QueryMetaButString.registry_spec_block_window":
		value := x.RegistrySpecBlockWindow
		return protoreflect.ValueOfUint64(value)
	case "layer.oracle.QueryMetaButString.has_revealed_reports":
		value := x.HasRevealedReports
		return protoreflect.ValueOfBool(value)
	case "layer.oracle.QueryMetaButString.query_data":
		value := x.QueryData
		return protoreflect.ValueOfString(value)
	case "layer.oracle.QueryMetaButString.query_type":
		value := x.QueryType
		return protoreflect.ValueOfString(value)
	case "layer.oracle.QueryMetaButString.cycle_list":
		value := x.CycleList
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.QueryMetaButString"))
		}
		panic(fmt.Errorf("message layer.oracle.QueryMetaButString does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryMetaButString) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "layer.oracle.QueryMetaButString.id":
		x.Id = value.Uint()
	case "layer.oracle.QueryMetaButString.amount":
		x.Amount = value.Interface().(string)
	case "layer.oracle.QueryMetaButString.expiration":
		x.Expiration = value.Uint()
	case "layer.oracle.QueryMetaButString.registry_spec_block_window":
		x.RegistrySpecBlockWindow = value.Uint()
	case "layer.oracle.QueryMetaButString.has_revealed_reports":
		x.HasRevealedReports = value.Bool()
	case "layer.oracle.QueryMetaButString.query_data":
		x.QueryData = value.Interface().(string)
	case "layer.oracle.QueryMetaButString.query_type":
		x.QueryType = value.Interface().(string)
	case "layer.oracle.QueryMetaButString.cycle_list":
		x.CycleList = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.QueryMetaButString"))
		}
		panic(fmt.Errorf("message layer.oracle.QueryMetaButString does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryMetaButString) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.QueryMetaButString.id":
		panic(fmt.Errorf("field id of message layer.oracle.QueryMetaButString is not mutable"))
	case "layer.oracle.QueryMetaButString.amount":
		panic(fmt.Errorf("field amount of message layer.oracle.QueryMetaButString is not mutable"))
	case "layer.oracle.QueryMetaButString.expiration":
		panic(fmt.Errorf("field expiration of message layer.oracle.QueryMetaButString is not mutable"))
	case "layer.oracle.QueryMetaButString.registry_spec_block_window":
		panic(fmt.Errorf("field registry_spec_block_window of message layer.oracle.QueryMetaButString is not mutable"))
	case "layer.oracle.QueryMetaButString.has_revealed_reports":
		panic(fmt.Errorf("field has_revealed_reports of message layer.oracle.QueryMetaButString is not mutable"))
	case "layer.oracle.QueryMetaButString.query_data":
		panic(fmt.Errorf("field query_data of message layer.oracle.QueryMetaButString is not mutable"))
	case "layer.oracle.QueryMetaButString.query_type":
		panic(fmt.Errorf("field query_type of message layer.oracle.QueryMetaButString is not mutable"))
	case "layer.oracle.QueryMetaButString.cycle_list":
		panic(fmt.Errorf("field cycle_list of message layer.oracle.QueryMetaButString is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.QueryMetaButString"))
		}
		panic(fmt.Errorf("message layer.oracle.QueryMetaButString does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryMetaButString) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.oracle.QueryMetaButString.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.QueryMetaButString.amount":
		return protoreflect.ValueOfString("")
	case "layer.oracle.QueryMetaButString.expiration":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.QueryMetaButString.registry_spec_block_window":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.oracle.QueryMetaButString.has_revealed_reports":
		return protoreflect.ValueOfBool(false)
	case "layer.oracle.QueryMetaButString.query_data":
		return protoreflect.ValueOfString("")
	case "layer.oracle.QueryMetaButString.query_type":
		return protoreflect.ValueOfString("")
	case "layer.oracle.QueryMetaButString.cycle_list":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.oracle.QueryMetaButString"))
		}
		panic(fmt.Errorf("message layer.oracle.QueryMetaButString does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryMetaButString) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in layer.oracle.QueryMetaButString", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryMetaButString) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryMetaButString) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryMetaButString) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryMetaButString) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryMetaButString)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Expiration != 0 {
			n += 1 + runtime.Sov(uint64(x.Expiration))
		}
		if x.RegistrySpecBlockWindow != 0 {
			n += 1 + runtime.Sov(uint64(x.RegistrySpecBlockWindow))
		}
		if x.HasRevealedReports {
			n += 2
		}
		l = len(x.QueryData)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.QueryType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CycleList {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryMetaButString)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CycleList {
			i--
			if x.CycleList {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x40
		}
		if len(x.QueryType) > 0 {
			i -= len(x.QueryType)
			copy(dAtA[i:], x.QueryType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.QueryType)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.QueryData) > 0 {
			i -= len(x.QueryData)
			copy(dAtA[i:], x.QueryData)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.QueryData)))
			i--
			dAtA[i] = 0x32
		}
		if x.HasRevealedReports {
			i--
			if x.HasRevealedReports {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x28
		}
		if x.RegistrySpecBlockWindow != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RegistrySpecBlockWindow))
			i--
			dAtA[i] = 0x20
		}
		if x.Expiration != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Expiration))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryMetaButString)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryMetaButString: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryMetaButString: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Expiration", wireType)
				}
				x.Expiration = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Expiration |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RegistrySpecBlockWindow", wireType)
				}
				x.RegistrySpecBlockWindow = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RegistrySpecBlockWindow |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HasRevealedReports", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.HasRevealedReports = bool(v != 0)
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field QueryData", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.QueryData = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field QueryType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.QueryType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CycleList", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.CycleList = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: layer/oracle/query_meta.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// QueryMeta represents the metadata of a query
type QueryMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique id of the query that changes after query's lifecycle ends
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// amount of tokens that was tipped
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// expiration time of the query
	Expiration uint64 `protobuf:"varint,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
	// timeframe of the query according to the data spec
	RegistrySpecBlockWindow uint64 `protobuf:"varint,4,opt,name=registry_spec_block_window,json=registrySpecBlockWindow,proto3" json:"registry_spec_block_window,omitempty"`
	// indicates whether query has revealed reports
	HasRevealedReports bool `protobuf:"varint,5,opt,name=has_revealed_reports,json=hasRevealedReports,proto3" json:"has_revealed_reports,omitempty"`
	// query_data: decodable bytes to field of the data spec
	QueryData []byte `protobuf:"bytes,6,opt,name=query_data,json=queryData,proto3" json:"query_data,omitempty"`
	// string identifier of the data spec
	QueryType string `protobuf:"bytes,7,opt,name=query_type,json=queryType,proto3" json:"query_type,omitempty"`
	// bool cycle list query
	CycleList bool `protobuf:"varint,8,opt,name=cycle_list,json=cycleList,proto3" json:"cycle_list,omitempty"`
}

func (x *QueryMeta) Reset() {
	*x = QueryMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_oracle_query_meta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMeta) ProtoMessage() {}

// Deprecated: Use QueryMeta.ProtoReflect.Descriptor instead.
func (*QueryMeta) Descriptor() ([]byte, []int) {
	return file_layer_oracle_query_meta_proto_rawDescGZIP(), []int{0}
}

func (x *QueryMeta) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMeta) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *QueryMeta) GetExpiration() uint64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *QueryMeta) GetRegistrySpecBlockWindow() uint64 {
	if x != nil {
		return x.RegistrySpecBlockWindow
	}
	return 0
}

func (x *QueryMeta) GetHasRevealedReports() bool {
	if x != nil {
		return x.HasRevealedReports
	}
	return false
}

func (x *QueryMeta) GetQueryData() []byte {
	if x != nil {
		return x.QueryData
	}
	return nil
}

func (x *QueryMeta) GetQueryType() string {
	if x != nil {
		return x.QueryType
	}
	return ""
}

func (x *QueryMeta) GetCycleList() bool {
	if x != nil {
		return x.CycleList
	}
	return false
}

type Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalPower uint64 `protobuf:"varint,1,opt,name=totalPower,proto3" json:"totalPower,omitempty"`
	Amount     string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// cycle_list indicates if a reward should also include timebasedRewards(tbr)
	CycleList bool `protobuf:"varint,3,opt,name=cycle_list,json=cycleList,proto3" json:"cycle_list,omitempty"`
	// if cyclist then tbr amount can be fetched by this height
	BlockHeight   uint64 `protobuf:"varint,4,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	PowerPaidOut  string `protobuf:"bytes,5,opt,name=power_paid_out,json=powerPaidOut,proto3" json:"power_paid_out,omitempty"`
	AmountPaidOut string `protobuf:"bytes,6,opt,name=amount_paid_out,json=amountPaidOut,proto3" json:"amount_paid_out,omitempty"`
}

func (x *Reward) Reset() {
	*x = Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_oracle_query_meta_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_layer_oracle_query_meta_proto_rawDescGZIP(), []int{1}
}

func (x *Reward) GetTotalPower() uint64 {
	if x != nil {
		return x.TotalPower
	}
	return 0
}

func (x *Reward) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Reward) GetCycleList() bool {
	if x != nil {
		return x.CycleList
	}
	return false
}

func (x *Reward) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *Reward) GetPowerPaidOut() string {
	if x != nil {
		return x.PowerPaidOut
	}
	return ""
}

func (x *Reward) GetAmountPaidOut() string {
	if x != nil {
		return x.AmountPaidOut
	}
	return ""
}

// QueryMetaButString is QueryMeta but with the query_data as a string for query display purposes
type QueryMetaButString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique id of the query that changes after query's lifecycle ends
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// amount of tokens that was tipped
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// expiration time of the query
	Expiration uint64 `protobuf:"varint,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
	// timeframe of the query according to the data spec
	RegistrySpecBlockWindow uint64 `protobuf:"varint,4,opt,name=registry_spec_block_window,json=registrySpecBlockWindow,proto3" json:"registry_spec_block_window,omitempty"`
	// indicates whether query has revealed reports
	HasRevealedReports bool `protobuf:"varint,5,opt,name=has_revealed_reports,json=hasRevealedReports,proto3" json:"has_revealed_reports,omitempty"`
	// decoded hex string of the query_data
	QueryData string `protobuf:"bytes,6,opt,name=query_data,json=queryData,proto3" json:"query_data,omitempty"`
	// string identifier of the data spec
	QueryType string `protobuf:"bytes,7,opt,name=query_type,json=queryType,proto3" json:"query_type,omitempty"`
	// bool cycle list query
	CycleList bool `protobuf:"varint,8,opt,name=cycle_list,json=cycleList,proto3" json:"cycle_list,omitempty"`
}

func (x *QueryMetaButString) Reset() {
	*x = QueryMetaButString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_oracle_query_meta_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMetaButString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMetaButString) ProtoMessage() {}

// Deprecated: Use QueryMetaButString.ProtoReflect.Descriptor instead.
func (*QueryMetaButString) Descriptor() ([]byte, []int) {
	return file_layer_oracle_query_meta_proto_rawDescGZIP(), []int{2}
}

func (x *QueryMetaButString) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMetaButString) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *QueryMetaButString) GetExpiration() uint64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *QueryMetaButString) GetRegistrySpecBlockWindow() uint64 {
	if x != nil {
		return x.RegistrySpecBlockWindow
	}
	return 0
}

func (x *QueryMetaButString) GetHasRevealedReports() bool {
	if x != nil {
		return x.HasRevealedReports
	}
	return false
}

func (x *QueryMetaButString) GetQueryData() string {
	if x != nil {
		return x.QueryData
	}
	return ""
}

func (x *QueryMetaButString) GetQueryType() string {
	if x != nil {
		return x.QueryType
	}
	return ""
}

func (x *QueryMetaButString) GetCycleList() bool {
	if x != nil {
		return x.CycleList
	}
	return false
}

var File_layer_oracle_query_meta_proto protoreflect.FileDescriptor

var file_layer_oracle_query_meta_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x1a, 0x19, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xcc, 0x02, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x43, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x2b, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2,
	0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x1a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x68, 0x61, 0x73, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xe9, 0x02, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e,
	0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44, 0x65,
	0x63, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x57, 0x0a, 0x0e, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x31, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x44, 0x65, 0x63, 0x52, 0x0c, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64, 0x4f,
	0x75, 0x74, 0x12, 0x59, 0x0a, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x69,
	0x64, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xc8, 0xde, 0x1f,
	0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69,
	0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63,
	0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x0d,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x64, 0x4f, 0x75, 0x74, 0x22, 0xd5, 0x02,
	0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x75, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e,
	0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e,
	0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x1a, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x73, 0x5f, 0x72, 0x65,
	0x76, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x61, 0x73, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0xa0, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x42, 0x0e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x6c, 0x6f, 0x72, 0x2d,
	0x69, 0x6f, 0x2f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0xa2, 0x02, 0x03, 0x4c, 0x4f, 0x58, 0xaa,
	0x02, 0x0c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0xca, 0x02,
	0x0c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x5c, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0xe2, 0x02, 0x18,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x5c, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x3a, 0x3a, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_layer_oracle_query_meta_proto_rawDescOnce sync.Once
	file_layer_oracle_query_meta_proto_rawDescData = file_layer_oracle_query_meta_proto_rawDesc
)

func file_layer_oracle_query_meta_proto_rawDescGZIP() []byte {
	file_layer_oracle_query_meta_proto_rawDescOnce.Do(func() {
		file_layer_oracle_query_meta_proto_rawDescData = protoimpl.X.CompressGZIP(file_layer_oracle_query_meta_proto_rawDescData)
	})
	return file_layer_oracle_query_meta_proto_rawDescData
}

var file_layer_oracle_query_meta_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_layer_oracle_query_meta_proto_goTypes = []interface{}{
	(*QueryMeta)(nil),          // 0: layer.oracle.QueryMeta
	(*Reward)(nil),             // 1: layer.oracle.reward
	(*QueryMetaButString)(nil), // 2: layer.oracle.QueryMetaButString
}
var file_layer_oracle_query_meta_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_layer_oracle_query_meta_proto_init() }
func file_layer_oracle_query_meta_proto_init() {
	if File_layer_oracle_query_meta_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_layer_oracle_query_meta_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_oracle_query_meta_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_oracle_query_meta_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMetaButString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_layer_oracle_query_meta_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_layer_oracle_query_meta_proto_goTypes,
		DependencyIndexes: file_layer_oracle_query_meta_proto_depIdxs,
		MessageInfos:      file_layer_oracle_query_meta_proto_msgTypes,
	}.Build()
	File_layer_oracle_query_meta_proto = out.File
	file_layer_oracle_query_meta_proto_rawDesc = nil
	file_layer_oracle_query_meta_proto_goTypes = nil
	file_layer_oracle_query_meta_proto_depIdxs = nil
}
