// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package dispute

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_Vote            protoreflect.MessageDescriptor
	fd_Vote_id         protoreflect.FieldDescriptor
	fd_Vote_voteStart  protoreflect.FieldDescriptor
	fd_Vote_voteEnd    protoreflect.FieldDescriptor
	fd_Vote_voteResult protoreflect.FieldDescriptor
	fd_Vote_executed   protoreflect.FieldDescriptor
)

func init() {
	file_layer_dispute_vote_proto_init()
	md_Vote = File_layer_dispute_vote_proto.Messages().ByName("Vote")
	fd_Vote_id = md_Vote.Fields().ByName("id")
	fd_Vote_voteStart = md_Vote.Fields().ByName("voteStart")
	fd_Vote_voteEnd = md_Vote.Fields().ByName("voteEnd")
	fd_Vote_voteResult = md_Vote.Fields().ByName("voteResult")
	fd_Vote_executed = md_Vote.Fields().ByName("executed")
}

var _ protoreflect.Message = (*fastReflection_Vote)(nil)

type fastReflection_Vote Vote

func (x *Vote) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Vote)(x)
}

func (x *Vote) slowProtoReflect() protoreflect.Message {
	mi := &file_layer_dispute_vote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Vote_messageType fastReflection_Vote_messageType
var _ protoreflect.MessageType = fastReflection_Vote_messageType{}

type fastReflection_Vote_messageType struct{}

func (x fastReflection_Vote_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Vote)(nil)
}
func (x fastReflection_Vote_messageType) New() protoreflect.Message {
	return new(fastReflection_Vote)
}
func (x fastReflection_Vote_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Vote
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Vote) Descriptor() protoreflect.MessageDescriptor {
	return md_Vote
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Vote) Type() protoreflect.MessageType {
	return _fastReflection_Vote_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Vote) New() protoreflect.Message {
	return new(fastReflection_Vote)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Vote) Interface() protoreflect.ProtoMessage {
	return (*Vote)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Vote) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_Vote_id, value) {
			return
		}
	}
	if x.VoteStart != nil {
		value := protoreflect.ValueOfMessage(x.VoteStart.ProtoReflect())
		if !f(fd_Vote_voteStart, value) {
			return
		}
	}
	if x.VoteEnd != nil {
		value := protoreflect.ValueOfMessage(x.VoteEnd.ProtoReflect())
		if !f(fd_Vote_voteEnd, value) {
			return
		}
	}
	if x.VoteResult != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.VoteResult))
		if !f(fd_Vote_voteResult, value) {
			return
		}
	}
	if x.Executed != false {
		value := protoreflect.ValueOfBool(x.Executed)
		if !f(fd_Vote_executed, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Vote) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "layer.dispute.Vote.id":
		return x.Id != uint64(0)
	case "layer.dispute.Vote.voteStart":
		return x.VoteStart != nil
	case "layer.dispute.Vote.voteEnd":
		return x.VoteEnd != nil
	case "layer.dispute.Vote.voteResult":
		return x.VoteResult != 0
	case "layer.dispute.Vote.executed":
		return x.Executed != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.dispute.Vote"))
		}
		panic(fmt.Errorf("message layer.dispute.Vote does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Vote) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "layer.dispute.Vote.id":
		x.Id = uint64(0)
	case "layer.dispute.Vote.voteStart":
		x.VoteStart = nil
	case "layer.dispute.Vote.voteEnd":
		x.VoteEnd = nil
	case "layer.dispute.Vote.voteResult":
		x.VoteResult = 0
	case "layer.dispute.Vote.executed":
		x.Executed = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.dispute.Vote"))
		}
		panic(fmt.Errorf("message layer.dispute.Vote does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Vote) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "layer.dispute.Vote.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "layer.dispute.Vote.voteStart":
		value := x.VoteStart
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "layer.dispute.Vote.voteEnd":
		value := x.VoteEnd
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "layer.dispute.Vote.voteResult":
		value := x.VoteResult
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "layer.dispute.Vote.executed":
		value := x.Executed
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.dispute.Vote"))
		}
		panic(fmt.Errorf("message layer.dispute.Vote does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Vote) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "layer.dispute.Vote.id":
		x.Id = value.Uint()
	case "layer.dispute.Vote.voteStart":
		x.VoteStart = value.Message().Interface().(*timestamppb.Timestamp)
	case "layer.dispute.Vote.voteEnd":
		x.VoteEnd = value.Message().Interface().(*timestamppb.Timestamp)
	case "layer.dispute.Vote.voteResult":
		x.VoteResult = (VoteResult)(value.Enum())
	case "layer.dispute.Vote.executed":
		x.Executed = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.dispute.Vote"))
		}
		panic(fmt.Errorf("message layer.dispute.Vote does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Vote) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.dispute.Vote.voteStart":
		if x.VoteStart == nil {
			x.VoteStart = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.VoteStart.ProtoReflect())
	case "layer.dispute.Vote.voteEnd":
		if x.VoteEnd == nil {
			x.VoteEnd = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.VoteEnd.ProtoReflect())
	case "layer.dispute.Vote.id":
		panic(fmt.Errorf("field id of message layer.dispute.Vote is not mutable"))
	case "layer.dispute.Vote.voteResult":
		panic(fmt.Errorf("field voteResult of message layer.dispute.Vote is not mutable"))
	case "layer.dispute.Vote.executed":
		panic(fmt.Errorf("field executed of message layer.dispute.Vote is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.dispute.Vote"))
		}
		panic(fmt.Errorf("message layer.dispute.Vote does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Vote) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.dispute.Vote.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "layer.dispute.Vote.voteStart":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "layer.dispute.Vote.voteEnd":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "layer.dispute.Vote.voteResult":
		return protoreflect.ValueOfEnum(0)
	case "layer.dispute.Vote.executed":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.dispute.Vote"))
		}
		panic(fmt.Errorf("message layer.dispute.Vote does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Vote) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in layer.dispute.Vote", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Vote) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Vote) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Vote) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Vote) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Vote)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.VoteStart != nil {
			l = options.Size(x.VoteStart)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.VoteEnd != nil {
			l = options.Size(x.VoteEnd)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.VoteResult != 0 {
			n += 1 + runtime.Sov(uint64(x.VoteResult))
		}
		if x.Executed {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Vote)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Executed {
			i--
			if x.Executed {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x28
		}
		if x.VoteResult != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.VoteResult))
			i--
			dAtA[i] = 0x20
		}
		if x.VoteEnd != nil {
			encoded, err := options.Marshal(x.VoteEnd)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.VoteStart != nil {
			encoded, err := options.Marshal(x.VoteStart)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Vote)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Vote: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Vote: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VoteStart", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.VoteStart == nil {
					x.VoteStart = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VoteStart); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VoteEnd", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.VoteEnd == nil {
					x.VoteEnd = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VoteEnd); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VoteResult", wireType)
				}
				x.VoteResult = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.VoteResult |= VoteResult(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Executed", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Executed = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Voter                   protoreflect.MessageDescriptor
	fd_Voter_vote              protoreflect.FieldDescriptor
	fd_Voter_voter_power       protoreflect.FieldDescriptor
	fd_Voter_reporter_power    protoreflect.FieldDescriptor
	fd_Voter_tokenholder_power protoreflect.FieldDescriptor
	fd_Voter_reward_claimed    protoreflect.FieldDescriptor
)

func init() {
	file_layer_dispute_vote_proto_init()
	md_Voter = File_layer_dispute_vote_proto.Messages().ByName("Voter")
	fd_Voter_vote = md_Voter.Fields().ByName("vote")
	fd_Voter_voter_power = md_Voter.Fields().ByName("voter_power")
	fd_Voter_reporter_power = md_Voter.Fields().ByName("reporter_power")
	fd_Voter_tokenholder_power = md_Voter.Fields().ByName("tokenholder_power")
	fd_Voter_reward_claimed = md_Voter.Fields().ByName("reward_claimed")
}

var _ protoreflect.Message = (*fastReflection_Voter)(nil)

type fastReflection_Voter Voter

func (x *Voter) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Voter)(x)
}

func (x *Voter) slowProtoReflect() protoreflect.Message {
	mi := &file_layer_dispute_vote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Voter_messageType fastReflection_Voter_messageType
var _ protoreflect.MessageType = fastReflection_Voter_messageType{}

type fastReflection_Voter_messageType struct{}

func (x fastReflection_Voter_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Voter)(nil)
}
func (x fastReflection_Voter_messageType) New() protoreflect.Message {
	return new(fastReflection_Voter)
}
func (x fastReflection_Voter_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Voter
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Voter) Descriptor() protoreflect.MessageDescriptor {
	return md_Voter
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Voter) Type() protoreflect.MessageType {
	return _fastReflection_Voter_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Voter) New() protoreflect.Message {
	return new(fastReflection_Voter)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Voter) Interface() protoreflect.ProtoMessage {
	return (*Voter)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Voter) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Vote != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Vote))
		if !f(fd_Voter_vote, value) {
			return
		}
	}
	if x.VoterPower != "" {
		value := protoreflect.ValueOfString(x.VoterPower)
		if !f(fd_Voter_voter_power, value) {
			return
		}
	}
	if x.ReporterPower != "" {
		value := protoreflect.ValueOfString(x.ReporterPower)
		if !f(fd_Voter_reporter_power, value) {
			return
		}
	}
	if x.TokenholderPower != "" {
		value := protoreflect.ValueOfString(x.TokenholderPower)
		if !f(fd_Voter_tokenholder_power, value) {
			return
		}
	}
	if x.RewardClaimed != false {
		value := protoreflect.ValueOfBool(x.RewardClaimed)
		if !f(fd_Voter_reward_claimed, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Voter) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "layer.dispute.Voter.vote":
		return x.Vote != 0
	case "layer.dispute.Voter.voter_power":
		return x.VoterPower != ""
	case "layer.dispute.Voter.reporter_power":
		return x.ReporterPower != ""
	case "layer.dispute.Voter.tokenholder_power":
		return x.TokenholderPower != ""
	case "layer.dispute.Voter.reward_claimed":
		return x.RewardClaimed != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.dispute.Voter"))
		}
		panic(fmt.Errorf("message layer.dispute.Voter does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Voter) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "layer.dispute.Voter.vote":
		x.Vote = 0
	case "layer.dispute.Voter.voter_power":
		x.VoterPower = ""
	case "layer.dispute.Voter.reporter_power":
		x.ReporterPower = ""
	case "layer.dispute.Voter.tokenholder_power":
		x.TokenholderPower = ""
	case "layer.dispute.Voter.reward_claimed":
		x.RewardClaimed = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.dispute.Voter"))
		}
		panic(fmt.Errorf("message layer.dispute.Voter does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Voter) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "layer.dispute.Voter.vote":
		value := x.Vote
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "layer.dispute.Voter.voter_power":
		value := x.VoterPower
		return protoreflect.ValueOfString(value)
	case "layer.dispute.Voter.reporter_power":
		value := x.ReporterPower
		return protoreflect.ValueOfString(value)
	case "layer.dispute.Voter.tokenholder_power":
		value := x.TokenholderPower
		return protoreflect.ValueOfString(value)
	case "layer.dispute.Voter.reward_claimed":
		value := x.RewardClaimed
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.dispute.Voter"))
		}
		panic(fmt.Errorf("message layer.dispute.Voter does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Voter) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "layer.dispute.Voter.vote":
		x.Vote = (VoteEnum)(value.Enum())
	case "layer.dispute.Voter.voter_power":
		x.VoterPower = value.Interface().(string)
	case "layer.dispute.Voter.reporter_power":
		x.ReporterPower = value.Interface().(string)
	case "layer.dispute.Voter.tokenholder_power":
		x.TokenholderPower = value.Interface().(string)
	case "layer.dispute.Voter.reward_claimed":
		x.RewardClaimed = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.dispute.Voter"))
		}
		panic(fmt.Errorf("message layer.dispute.Voter does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Voter) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.dispute.Voter.vote":
		panic(fmt.Errorf("field vote of message layer.dispute.Voter is not mutable"))
	case "layer.dispute.Voter.voter_power":
		panic(fmt.Errorf("field voter_power of message layer.dispute.Voter is not mutable"))
	case "layer.dispute.Voter.reporter_power":
		panic(fmt.Errorf("field reporter_power of message layer.dispute.Voter is not mutable"))
	case "layer.dispute.Voter.tokenholder_power":
		panic(fmt.Errorf("field tokenholder_power of message layer.dispute.Voter is not mutable"))
	case "layer.dispute.Voter.reward_claimed":
		panic(fmt.Errorf("field reward_claimed of message layer.dispute.Voter is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.dispute.Voter"))
		}
		panic(fmt.Errorf("message layer.dispute.Voter does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Voter) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "layer.dispute.Voter.vote":
		return protoreflect.ValueOfEnum(0)
	case "layer.dispute.Voter.voter_power":
		return protoreflect.ValueOfString("")
	case "layer.dispute.Voter.reporter_power":
		return protoreflect.ValueOfString("")
	case "layer.dispute.Voter.tokenholder_power":
		return protoreflect.ValueOfString("")
	case "layer.dispute.Voter.reward_claimed":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: layer.dispute.Voter"))
		}
		panic(fmt.Errorf("message layer.dispute.Voter does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Voter) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in layer.dispute.Voter", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Voter) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Voter) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Voter) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Voter) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Voter)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Vote != 0 {
			n += 1 + runtime.Sov(uint64(x.Vote))
		}
		l = len(x.VoterPower)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ReporterPower)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TokenholderPower)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.RewardClaimed {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Voter)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.RewardClaimed {
			i--
			if x.RewardClaimed {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x28
		}
		if len(x.TokenholderPower) > 0 {
			i -= len(x.TokenholderPower)
			copy(dAtA[i:], x.TokenholderPower)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenholderPower)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ReporterPower) > 0 {
			i -= len(x.ReporterPower)
			copy(dAtA[i:], x.ReporterPower)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ReporterPower)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.VoterPower) > 0 {
			i -= len(x.VoterPower)
			copy(dAtA[i:], x.VoterPower)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VoterPower)))
			i--
			dAtA[i] = 0x12
		}
		if x.Vote != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Vote))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Voter)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Voter: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Voter: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Vote", wireType)
				}
				x.Vote = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Vote |= VoteEnum(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VoterPower", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VoterPower = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReporterPower", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReporterPower = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenholderPower", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenholderPower = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardClaimed", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.RewardClaimed = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: layer/dispute/vote.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VoteResult int32

const (
	VoteResult_NO_TALLY                   VoteResult = 0 // default
	VoteResult_SUPPORT                    VoteResult = 1 // quorum reached
	VoteResult_AGAINST                    VoteResult = 2 // quorum reached
	VoteResult_INVALID                    VoteResult = 3 // quorum reached
	VoteResult_NO_QUORUM_MAJORITY_SUPPORT VoteResult = 4 // quorum not reached
	VoteResult_NO_QUORUM_MAJORITY_AGAINST VoteResult = 5 // quorum not reached
	VoteResult_NO_QUORUM_MAJORITY_INVALID VoteResult = 6 // quorum not reached
)

// Enum value maps for VoteResult.
var (
	VoteResult_name = map[int32]string{
		0: "NO_TALLY",
		1: "SUPPORT",
		2: "AGAINST",
		3: "INVALID",
		4: "NO_QUORUM_MAJORITY_SUPPORT",
		5: "NO_QUORUM_MAJORITY_AGAINST",
		6: "NO_QUORUM_MAJORITY_INVALID",
	}
	VoteResult_value = map[string]int32{
		"NO_TALLY":                   0,
		"SUPPORT":                    1,
		"AGAINST":                    2,
		"INVALID":                    3,
		"NO_QUORUM_MAJORITY_SUPPORT": 4,
		"NO_QUORUM_MAJORITY_AGAINST": 5,
		"NO_QUORUM_MAJORITY_INVALID": 6,
	}
)

func (x VoteResult) Enum() *VoteResult {
	p := new(VoteResult)
	*p = x
	return p
}

func (x VoteResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoteResult) Descriptor() protoreflect.EnumDescriptor {
	return file_layer_dispute_vote_proto_enumTypes[0].Descriptor()
}

func (VoteResult) Type() protoreflect.EnumType {
	return &file_layer_dispute_vote_proto_enumTypes[0]
}

func (x VoteResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoteResult.Descriptor instead.
func (VoteResult) EnumDescriptor() ([]byte, []int) {
	return file_layer_dispute_vote_proto_rawDescGZIP(), []int{0}
}

type VoteEnum int32

const (
	VoteEnum_VOTE_INVALID VoteEnum = 0
	VoteEnum_VOTE_SUPPORT VoteEnum = 1
	VoteEnum_VOTE_AGAINST VoteEnum = 2
)

// Enum value maps for VoteEnum.
var (
	VoteEnum_name = map[int32]string{
		0: "VOTE_INVALID",
		1: "VOTE_SUPPORT",
		2: "VOTE_AGAINST",
	}
	VoteEnum_value = map[string]int32{
		"VOTE_INVALID": 0,
		"VOTE_SUPPORT": 1,
		"VOTE_AGAINST": 2,
	}
)

func (x VoteEnum) Enum() *VoteEnum {
	p := new(VoteEnum)
	*p = x
	return p
}

func (x VoteEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoteEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_layer_dispute_vote_proto_enumTypes[1].Descriptor()
}

func (VoteEnum) Type() protoreflect.EnumType {
	return &file_layer_dispute_vote_proto_enumTypes[1]
}

func (x VoteEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoteEnum.Descriptor instead.
func (VoteEnum) EnumDescriptor() ([]byte, []int) {
	return file_layer_dispute_vote_proto_rawDescGZIP(), []int{1}
}

type Vote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	VoteStart  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=voteStart,proto3" json:"voteStart,omitempty"`
	VoteEnd    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=voteEnd,proto3" json:"voteEnd,omitempty"`
	VoteResult VoteResult             `protobuf:"varint,4,opt,name=voteResult,proto3,enum=layer.dispute.VoteResult" json:"voteResult,omitempty"`
	Executed   bool                   `protobuf:"varint,5,opt,name=executed,proto3" json:"executed,omitempty"`
}

func (x *Vote) Reset() {
	*x = Vote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_dispute_vote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vote) ProtoMessage() {}

// Deprecated: Use Vote.ProtoReflect.Descriptor instead.
func (*Vote) Descriptor() ([]byte, []int) {
	return file_layer_dispute_vote_proto_rawDescGZIP(), []int{0}
}

func (x *Vote) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Vote) GetVoteStart() *timestamppb.Timestamp {
	if x != nil {
		return x.VoteStart
	}
	return nil
}

func (x *Vote) GetVoteEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.VoteEnd
	}
	return nil
}

func (x *Vote) GetVoteResult() VoteResult {
	if x != nil {
		return x.VoteResult
	}
	return VoteResult_NO_TALLY
}

func (x *Vote) GetExecuted() bool {
	if x != nil {
		return x.Executed
	}
	return false
}

type Voter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vote             VoteEnum `protobuf:"varint,1,opt,name=vote,proto3,enum=layer.dispute.VoteEnum" json:"vote,omitempty"`
	VoterPower       string   `protobuf:"bytes,2,opt,name=voter_power,json=voterPower,proto3" json:"voter_power,omitempty"`
	ReporterPower    string   `protobuf:"bytes,3,opt,name=reporter_power,json=reporterPower,proto3" json:"reporter_power,omitempty"`
	TokenholderPower string   `protobuf:"bytes,4,opt,name=tokenholder_power,json=tokenholderPower,proto3" json:"tokenholder_power,omitempty"`
	RewardClaimed    bool     `protobuf:"varint,5,opt,name=reward_claimed,json=rewardClaimed,proto3" json:"reward_claimed,omitempty"`
}

func (x *Voter) Reset() {
	*x = Voter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_dispute_vote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Voter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Voter) ProtoMessage() {}

// Deprecated: Use Voter.ProtoReflect.Descriptor instead.
func (*Voter) Descriptor() ([]byte, []int) {
	return file_layer_dispute_vote_proto_rawDescGZIP(), []int{1}
}

func (x *Voter) GetVote() VoteEnum {
	if x != nil {
		return x.Vote
	}
	return VoteEnum_VOTE_INVALID
}

func (x *Voter) GetVoterPower() string {
	if x != nil {
		return x.VoterPower
	}
	return ""
}

func (x *Voter) GetReporterPower() string {
	if x != nil {
		return x.ReporterPower
	}
	return ""
}

func (x *Voter) GetTokenholderPower() string {
	if x != nil {
		return x.TokenholderPower
	}
	return ""
}

func (x *Voter) GetRewardClaimed() bool {
	if x != nil {
		return x.RewardClaimed
	}
	return false
}

var File_layer_dispute_vote_proto protoreflect.FileDescriptor

var file_layer_dispute_vote_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x2f,
	0x76, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2f, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x2f, 0x74, 0x61, 0x6c, 0x6c, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x01, 0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x42, 0x0a, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08,
	0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x3e, 0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x07, 0x76, 0x6f, 0x74, 0x65,
	0x45, 0x6e, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x22, 0xd7, 0x02, 0x0a, 0x05, 0x56,
	0x6f, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x75,
	0x74, 0x65, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x76, 0x6f, 0x74,
	0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74,
	0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0x52, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12,
	0x52, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f,
	0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61,
	0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x49, 0x6e, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x11, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b,
	0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64,
	0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d,
	0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x10, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x65, 0x64, 0x2a, 0xa1, 0x01, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x54, 0x41, 0x4c, 0x4c, 0x59, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x41, 0x47, 0x41, 0x49, 0x4e, 0x53, 0x54, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x4e, 0x4f, 0x5f, 0x51,
	0x55, 0x4f, 0x52, 0x55, 0x4d, 0x5f, 0x4d, 0x41, 0x4a, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53,
	0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x4e, 0x4f, 0x5f, 0x51,
	0x55, 0x4f, 0x52, 0x55, 0x4d, 0x5f, 0x4d, 0x41, 0x4a, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x41,
	0x47, 0x41, 0x49, 0x4e, 0x53, 0x54, 0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x4e, 0x4f, 0x5f, 0x51,
	0x55, 0x4f, 0x52, 0x55, 0x4d, 0x5f, 0x4d, 0x41, 0x4a, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x06, 0x2a, 0x40, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x53,
	0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x4f, 0x54, 0x45,
	0x5f, 0x41, 0x47, 0x41, 0x49, 0x4e, 0x53, 0x54, 0x10, 0x02, 0x42, 0xa1, 0x01, 0x0a, 0x11, 0x63,
	0x6f, 0x6d, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65,
	0x42, 0x09, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x6c, 0x6f, 0x72,
	0x2d, 0x69, 0x6f, 0x2f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2f, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0xa2, 0x02, 0x03, 0x4c, 0x44,
	0x58, 0xaa, 0x02, 0x0d, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74,
	0x65, 0xca, 0x02, 0x0d, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x5c, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74,
	0x65, 0xe2, 0x02, 0x19, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x5c, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74,
	0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x3a, 0x3a, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_layer_dispute_vote_proto_rawDescOnce sync.Once
	file_layer_dispute_vote_proto_rawDescData = file_layer_dispute_vote_proto_rawDesc
)

func file_layer_dispute_vote_proto_rawDescGZIP() []byte {
	file_layer_dispute_vote_proto_rawDescOnce.Do(func() {
		file_layer_dispute_vote_proto_rawDescData = protoimpl.X.CompressGZIP(file_layer_dispute_vote_proto_rawDescData)
	})
	return file_layer_dispute_vote_proto_rawDescData
}

var file_layer_dispute_vote_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_layer_dispute_vote_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_layer_dispute_vote_proto_goTypes = []interface{}{
	(VoteResult)(0),               // 0: layer.dispute.VoteResult
	(VoteEnum)(0),                 // 1: layer.dispute.VoteEnum
	(*Vote)(nil),                  // 2: layer.dispute.Vote
	(*Voter)(nil),                 // 3: layer.dispute.Voter
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_layer_dispute_vote_proto_depIdxs = []int32{
	4, // 0: layer.dispute.Vote.voteStart:type_name -> google.protobuf.Timestamp
	4, // 1: layer.dispute.Vote.voteEnd:type_name -> google.protobuf.Timestamp
	0, // 2: layer.dispute.Vote.voteResult:type_name -> layer.dispute.VoteResult
	1, // 3: layer.dispute.Voter.vote:type_name -> layer.dispute.VoteEnum
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_layer_dispute_vote_proto_init() }
func file_layer_dispute_vote_proto_init() {
	if File_layer_dispute_vote_proto != nil {
		return
	}
	file_layer_dispute_tally_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_layer_dispute_vote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_dispute_vote_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Voter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_layer_dispute_vote_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_layer_dispute_vote_proto_goTypes,
		DependencyIndexes: file_layer_dispute_vote_proto_depIdxs,
		EnumInfos:         file_layer_dispute_vote_proto_enumTypes,
		MessageInfos:      file_layer_dispute_vote_proto_msgTypes,
	}.Build()
	File_layer_dispute_vote_proto = out.File
	file_layer_dispute_vote_proto_rawDesc = nil
	file_layer_dispute_vote_proto_goTypes = nil
	file_layer_dispute_vote_proto_depIdxs = nil
}
