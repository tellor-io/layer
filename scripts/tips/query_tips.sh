#!/bin/bash

echo "=== Tips Status ==="
echo ""

# Query names, data, and IDs for the feeds we've been tipping
declare -a QUERY_NAMES=(
    "btc/usd"
    "eth/usd" 
    "trb/usd"
    "saga/usd"
    "usdc/usd"
    "usdt/usd"
    "fbtc/usd"
)

# Query IDs for getting aggregate reports
declare -a QUERY_IDS=(
    "a6f013ee236804827b77696d350e9f0ac3e879328f2a3021d473a0b778ad78ac"  # btc/usd
    "83a7f3d48786ac2667503a61e8c415438ed2922eb86a2906e4ee66d9a2ce4992"  # eth/usd
    "5c13cd9c97dbb98f2429c101a2a8150e6c7a0ddaff6124ee176a3a411067ded0"  # trb/usd
    "74c9cfdfd2e4a00a9437bf93bf6051e18e604a976f3fa37faafe0bb5a039431d"  # saga/usd
    "8ee44cd434ed5b0e007eee581fbe0855336f3f84484e8d9989a620a4a49aa0f7"  # usdc/usd
    "68a37787e65e85768d4aa6e385fb15760d46df0f67a18ec032d8fd5848aca264"  # usdt/usd
    "c444759b83c7bb0f6694306e1f719e65679d48ad754a31d3a366856becf1e71e"  # fbtc/usd
)

declare -a QUERY_DATA_VALUES=(
    "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000953706f745072696365000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003627463000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000037573640000000000000000000000000000000000000000000000000000000000"  # btc/usd
    "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000953706f745072696365000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003657468000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000037573640000000000000000000000000000000000000000000000000000000000"  # eth/usd
    "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000953706f745072696365000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003747262000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000037573640000000000000000000000000000000000000000000000000000000000"  # trb/usd
    "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000953706f745072696365000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000004736167610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000037573640000000000000000000000000000000000000000000000000000000000"  # saga/usd
    "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000953706f745072696365000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000004757364630000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000037573640000000000000000000000000000000000000000000000000000000000"  # usdc/usd
    "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000953706f745072696365000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000004757364740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000037573640000000000000000000000000000000000000000000000000000000000"  # usdt/usd
    "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000953706f745072696365000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000004666274630000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000037573640000000000000000000000000000000000000000000000000000000000"  # fbtc/usd
)

# Function to get query data for a given query name
get_query_data() {
    local query_name="$1"
    for j in "${!QUERY_NAMES[@]}"; do
        if [ "${QUERY_NAMES[j]}" = "$query_name" ]; then
            echo "${QUERY_DATA_VALUES[j]}"
            return 0
        fi
    done
    echo ""
    return 1
}

# Print table header
printf "%-10s %-15s %-15s\n" "query_name" "tip_amount" "report_timestamp"
printf "%-10s %-15s %-15s\n" "----------" "----------" "----------------"

# Query each feed
for i in "${!QUERY_NAMES[@]}"; do
    query_name="${QUERY_NAMES[i]}"
    query_id="${QUERY_IDS[i]}"
    
    # Get tip amount
    tip_amount="N/A"
    query_data=$(get_query_data "$query_name")
    if [ -n "$query_data" ]; then
        tip_result=$(./layerd query oracle get-current-tip "$query_data" 2>/dev/null)
        if [ $? -eq 0 ]; then
            tip_amount=$(echo "$tip_result" | grep "tips:" | cut -d'"' -f2 2>/dev/null || echo "N/A")
            if [ "$tip_amount" != "N/A" ]; then
                tip_amount="${tip_amount}loya"
            fi
        fi
    fi
    
    # Get timestamp from aggregate report
    timestamp="N/A"
    aggregate_result=$(./layerd query oracle get-current-aggregate-report "$query_id" 2>/dev/null)
    if [ $? -eq 0 ]; then
        timestamp=$(echo "$aggregate_result" | grep "timestamp:" | awk '{print $2}' | tr -d '"' 2>/dev/null || echo "N/A")
    fi
    
    # Print row
    printf "%-10s %-15s %-15s\n" "$query_name" "$tip_amount" "$timestamp"
done

echo ""
