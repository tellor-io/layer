swagger: '2.0'
info:
  title: HTTP API Console
  name: ''
  description: ''
paths:
  /layer/bridge/get_attestation_data_by_snapshot/{snapshot}:
    get:
      operationId: LayerBridgeGetAttestationDataBySnapshot
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              query_id:
                type: string
              timestamp:
                type: string
              aggregate_value:
                type: string
              aggregate_power:
                type: string
              checkpoint:
                type: string
              attestation_timestamp:
                type: string
              previous_report_timestamp:
                type: string
              next_report_timestamp:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: snapshot
          in: path
          required: true
          type: string
      tags:
        - Query
  /layer/bridge/get_attestations_by_snapshot/{snapshot}:
    get:
      operationId: LayerBridgeGetAttestationsBySnapshot
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              attestations:
                type: array
                items:
                  type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: snapshot
          in: path
          required: true
          type: string
      tags:
        - Query
  /layer/bridge/get_current_validator_set_timestamp:
    get:
      operationId: LayerBridgeGetCurrentValidatorSetTimestamp
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              timestamp:
                type: string
                format: int64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      tags:
        - Query
  /layer/bridge/get_evm_address_by_validator_address/{validator_address}:
    get:
      operationId: LayerBridgeGetEvmAddressByValidatorAddress
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              evm_address:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: validator_address
          in: path
          required: true
          type: string
      tags:
        - Query
  /layer/bridge/get_evm_validators:
    get:
      summary: Queries a list of GetEvmValidators items.
      operationId: LayerBridgeGetEvmValidators
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              bridge_validator_set:
                type: array
                items:
                  type: object
                  properties:
                    ethereumAddress:
                      type: string
                    power:
                      type: string
                      format: uint64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      tags:
        - Query
  /layer/bridge/get_snapshots_by_report/{query_id}/{timestamp}:
    get:
      operationId: LayerBridgeGetSnapshotsByReport
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              snapshots:
                type: array
                items:
                  type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: query_id
          in: path
          required: true
          type: string
        - name: timestamp
          in: path
          required: true
          type: string
      tags:
        - Query
  /layer/bridge/get_validator_checkpoint:
    get:
      operationId: LayerBridgeGetValidatorCheckpoint
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validator_checkpoint:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      tags:
        - Query
  /layer/bridge/get_validator_checkpoint_params/{timestamp}:
    get:
      operationId: LayerBridgeGetValidatorCheckpointParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              checkpoint:
                type: string
              valset_hash:
                type: string
              timestamp:
                type: string
                format: int64
              power_threshold:
                type: string
                format: int64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: timestamp
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  /layer/bridge/get_validator_set_index_by_timestamp/{timestamp}:
    get:
      operationId: LayerBridgeGetValidatorSetIndexByTimestamp
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              index:
                type: string
                format: int64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: timestamp
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  /layer/bridge/get_validator_timestamp_by_index/{index}:
    get:
      operationId: LayerBridgeGetValidatorTimestampByIndex
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              timestamp:
                type: string
                format: int64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: index
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  /layer/bridge/get_valset_by_timestamp/{timestamp}:
    get:
      operationId: LayerBridgeGetValsetByTimestamp
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              bridge_validator_set:
                type: array
                items:
                  type: object
                  properties:
                    ethereumAddress:
                      type: string
                    power:
                      type: string
                      format: uint64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: timestamp
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  /layer/bridge/get_valset_sigs/{timestamp}:
    get:
      operationId: LayerBridgeGetValsetSigs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              signatures:
                type: array
                items:
                  type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: timestamp
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  /layer/bridge/params:
    get:
      summary: Parameters queries the parameters of the module.
      operationId: LayerBridgeParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      tags:
        - Query
  /layer/oracle/get_reportsby_qid/{query_id}:
    get:
      summary: Queries a list of GetReportsbyQid items.
      operationId: LayerOracleGetReportsbyQid
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              microReports:
                type: array
                items:
                  type: object
                  properties:
                    reporter:
                      type: string
                      title: reporter is the address of the reporter
                    power:
                      type: string
                      format: int64
                      title: >-
                        the power of the reporter based on total tokens
                        normalized
                    query_type:
                      type: string
                      title: string identifier of the data spec
                    query_id:
                      type: string
                      format: byte
                      title: hash of the query data
                    aggregate_method:
                      type: string
                      title: >-
                        aggregate method to use for aggregating all the reports
                        for the query id
                    value:
                      type: string
                      title: hex string of the response value
                    timestamp:
                      type: string
                      format: date-time
                      title: timestamp of when the report was created
                    cyclelist:
                      type: boolean
                      title: indicates if the report's query id is in the cyclelist
                    block_number:
                      type: string
                      format: int64
                      title: block number of when the report was created
                  title: MicroReport represents data for a single report
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: query_id
          description: query id of requested data
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /layer/oracle/get_reportsby_reporter/{reporter}:
    get:
      operationId: LayerOracleGetReportsbyReporter
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              microReports:
                type: array
                items:
                  type: object
                  properties:
                    reporter:
                      type: string
                      title: reporter is the address of the reporter
                    power:
                      type: string
                      format: int64
                      title: >-
                        the power of the reporter based on total tokens
                        normalized
                    query_type:
                      type: string
                      title: string identifier of the data spec
                    query_id:
                      type: string
                      format: byte
                      title: hash of the query data
                    aggregate_method:
                      type: string
                      title: >-
                        aggregate method to use for aggregating all the reports
                        for the query id
                    value:
                      type: string
                      title: hex string of the response value
                    timestamp:
                      type: string
                      format: date-time
                      title: timestamp of when the report was created
                    cyclelist:
                      type: boolean
                      title: indicates if the report's query id is in the cyclelist
                    block_number:
                      type: string
                      format: int64
                      title: block number of when the report was created
                  title: MicroReport represents data for a single report
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: reporter
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /layer/oracle/get_reportsby_reporter_qid/{reporter}/{query_id}:
    get:
      operationId: LayerOracleGetReportsbyReporterQid
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              microReports:
                type: array
                items:
                  type: object
                  properties:
                    reporter:
                      type: string
                      title: reporter is the address of the reporter
                    power:
                      type: string
                      format: int64
                      title: >-
                        the power of the reporter based on total tokens
                        normalized
                    query_type:
                      type: string
                      title: string identifier of the data spec
                    query_id:
                      type: string
                      format: byte
                      title: hash of the query data
                    aggregate_method:
                      type: string
                      title: >-
                        aggregate method to use for aggregating all the reports
                        for the query id
                    value:
                      type: string
                      title: hex string of the response value
                    timestamp:
                      type: string
                      format: date-time
                      title: timestamp of when the report was created
                    cyclelist:
                      type: boolean
                      title: indicates if the report's query id is in the cyclelist
                    block_number:
                      type: string
                      format: int64
                      title: block number of when the report was created
                  title: MicroReport represents data for a single report
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: reporter
          in: path
          required: true
          type: string
        - name: query_id
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /layer/oracle/params:
    get:
      summary: Parameters queries the parameters of the module.
      operationId: LayerOracleParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
                properties:
                  minStakeAmount:
                    type: string
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      tags:
        - Query
  /tellor-io/layer/oracle/current_cyclelist_query:
    get:
      summary: Queries a list of CurrentCyclelistQuery items.
      operationId: LayerOracleCurrentCyclelistQuery
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              query_data:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      tags:
        - Query
  /tellor-io/layer/oracle/get_aggregate_before_by_reporter/{query_id}/{timestamp}/{reporter}:
    get:
      operationId: LayerOracleGetAggregateBeforeByReporter
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              aggregate:
                description: aggregate defines the aggregate report.
                type: object
                properties:
                  query_id:
                    type: string
                    format: byte
                    title: query_id is the id of the query
                  aggregate_value:
                    type: string
                    title: aggregate_value is the value of the aggregate
                  aggregate_reporter:
                    type: string
                    title: aggregate_reporter is the address of the reporter
                  reporter_power:
                    type: string
                    format: int64
                    title: reporter_power is the power of the reporter
                  standard_deviation:
                    type: number
                    format: double
                    title: >-
                      standard_deviation is the standard deviation of the
                      reports that were aggregated
                  reporters:
                    type: array
                    items:
                      type: object
                      properties:
                        reporter:
                          type: string
                        power:
                          type: string
                          format: int64
                        block_number:
                          type: string
                          format: int64
                    title: list of reporters that were included in the aggregate
                  flagged:
                    type: boolean
                    title: flagged is true if the aggregate was flagged by a dispute
                  index:
                    type: string
                    format: uint64
                    title: nonce is the nonce of the aggregate
                  aggregate_report_index:
                    type: string
                    format: int64
                    title: >-
                      aggregate_report_index is the index of the aggregate
                      report in the micro reports
                  height:
                    type: string
                    format: int64
                    title: height of the aggregate report
                  micro_height:
                    type: string
                    format: int64
                    title: height of the micro report
                title: aggregate struct to represent meta data of an aggregate report
            description: >-
              QueryGetAggregateBeforeByReporterResponse is the response type for
              the Query/GetAggregateBeforeByReporter RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: query_id
          description: query_id defines the query id hex string.
          in: path
          required: true
          type: string
        - name: timestamp
          description: timestamp defines the timestamp of the aggregate report.
          in: path
          required: true
          type: string
          format: int64
        - name: reporter
          description: reporter defines the reporter address.
          in: path
          required: true
          type: string
      tags:
        - Query
  /tellor-io/layer/oracle/get_current_aggregate_report/{query_id}:
    get:
      operationId: LayerOracleGetCurrentAggregateReport
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              aggregate:
                description: aggregate defines the current aggregate report.
                type: object
                properties:
                  query_id:
                    type: string
                    format: byte
                    title: query_id is the id of the query
                  aggregate_value:
                    type: string
                    title: aggregate_value is the value of the aggregate
                  aggregate_reporter:
                    type: string
                    title: aggregate_reporter is the address of the reporter
                  reporter_power:
                    type: string
                    format: int64
                    title: reporter_power is the power of the reporter
                  standard_deviation:
                    type: number
                    format: double
                    title: >-
                      standard_deviation is the standard deviation of the
                      reports that were aggregated
                  reporters:
                    type: array
                    items:
                      type: object
                      properties:
                        reporter:
                          type: string
                        power:
                          type: string
                          format: int64
                        block_number:
                          type: string
                          format: int64
                    title: list of reporters that were included in the aggregate
                  flagged:
                    type: boolean
                    title: flagged is true if the aggregate was flagged by a dispute
                  index:
                    type: string
                    format: uint64
                    title: nonce is the nonce of the aggregate
                  aggregate_report_index:
                    type: string
                    format: int64
                    title: >-
                      aggregate_report_index is the index of the aggregate
                      report in the micro reports
                  height:
                    type: string
                    format: int64
                    title: height of the aggregate report
                  micro_height:
                    type: string
                    format: int64
                    title: height of the micro report
                title: aggregate struct to represent meta data of an aggregate report
              timestamp:
                type: string
                format: uint64
                description: timestamp defines the timestamp of the aggregate report.
            description: >-
              QueryGetCurrentAggregateReportResponse is the response type for
              the Query/GetCurrentAggregateReport RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: query_id
          description: query_id defines the query id hex string.
          in: path
          required: true
          type: string
      tags:
        - Query
  /tellor-io/layer/oracle/get_current_tip/{query_data}:
    get:
      summary: Queries a list of GetCurrentTip items.
      operationId: LayerOracleGetCurrentTip
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              tips:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: query_data
          in: path
          required: true
          type: string
      tags:
        - Query
  /tellor-io/layer/oracle/get_data_before/{query_id}/{timestamp}:
    get:
      summary: Queries a list of GetAggregatedReport items.
      operationId: LayerOracleGetDataBefore
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              aggregate:
                type: object
                properties:
                  query_id:
                    type: string
                    format: byte
                    title: query_id is the id of the query
                  aggregate_value:
                    type: string
                    title: aggregate_value is the value of the aggregate
                  aggregate_reporter:
                    type: string
                    title: aggregate_reporter is the address of the reporter
                  reporter_power:
                    type: string
                    format: int64
                    title: reporter_power is the power of the reporter
                  standard_deviation:
                    type: number
                    format: double
                    title: >-
                      standard_deviation is the standard deviation of the
                      reports that were aggregated
                  reporters:
                    type: array
                    items:
                      type: object
                      properties:
                        reporter:
                          type: string
                        power:
                          type: string
                          format: int64
                        block_number:
                          type: string
                          format: int64
                    title: list of reporters that were included in the aggregate
                  flagged:
                    type: boolean
                    title: flagged is true if the aggregate was flagged by a dispute
                  index:
                    type: string
                    format: uint64
                    title: nonce is the nonce of the aggregate
                  aggregate_report_index:
                    type: string
                    format: int64
                    title: >-
                      aggregate_report_index is the index of the aggregate
                      report in the micro reports
                  height:
                    type: string
                    format: int64
                    title: height of the aggregate report
                  micro_height:
                    type: string
                    format: int64
                    title: height of the micro report
                title: aggregate struct to represent meta data of an aggregate report
              timestamp:
                type: string
                format: uint64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: query_id
          in: path
          required: true
          type: string
        - name: timestamp
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  /tellor-io/layer/oracle/get_time_based_rewards:
    get:
      summary: Queries a list of GetTimeBasedRewards items.
      operationId: LayerOracleGetTimeBasedRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              reward:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      tags:
        - Query
  /tellor-io/layer/oracle/get_user_tip_total/{tipper}:
    get:
      summary: Queries a list of GetUserTipTotal items.
      operationId: LayerOracleGetUserTipTotal
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              total_tips:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: tipper
          in: path
          required: true
          type: string
      tags:
        - Query
  /tellor-io/layer/oracle/retrieve_data/{query_id}/{timestamp}:
    get:
      operationId: LayerOracleRetrieveData
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              aggregate:
                type: object
                properties:
                  query_id:
                    type: string
                    format: byte
                    title: query_id is the id of the query
                  aggregate_value:
                    type: string
                    title: aggregate_value is the value of the aggregate
                  aggregate_reporter:
                    type: string
                    title: aggregate_reporter is the address of the reporter
                  reporter_power:
                    type: string
                    format: int64
                    title: reporter_power is the power of the reporter
                  standard_deviation:
                    type: number
                    format: double
                    title: >-
                      standard_deviation is the standard deviation of the
                      reports that were aggregated
                  reporters:
                    type: array
                    items:
                      type: object
                      properties:
                        reporter:
                          type: string
                        power:
                          type: string
                          format: int64
                        block_number:
                          type: string
                          format: int64
                    title: list of reporters that were included in the aggregate
                  flagged:
                    type: boolean
                    title: flagged is true if the aggregate was flagged by a dispute
                  index:
                    type: string
                    format: uint64
                    title: nonce is the nonce of the aggregate
                  aggregate_report_index:
                    type: string
                    format: int64
                    title: >-
                      aggregate_report_index is the index of the aggregate
                      report in the micro reports
                  height:
                    type: string
                    format: int64
                    title: height of the aggregate report
                  micro_height:
                    type: string
                    format: int64
                    title: height of the micro report
                title: aggregate struct to represent meta data of an aggregate report
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: query_id
          in: path
          required: true
          type: string
        - name: timestamp
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  /tellor-io/layer/reporter/allowed-amount:
    get:
      summary: AllowedAmount queries the currently allowed amount to stake or unstake.
      operationId: LayerReporterAllowedAmount
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              staking_amount:
                type: string
                description: >-
                  allowed_amount defines the currently allowed amount to stake
                  or unstake.
              unstaking_amount:
                type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      tags:
        - Query
  /tellor-io/layer/reporter/allowed-amount-expiration:
    get:
      operationId: LayerReporterAllowedAmountExpiration
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              expiration:
                type: string
                format: int64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      tags:
        - Query
  /tellor-io/layer/reporter/num-of-selectors-by-reporter/{reporter_address}:
    get:
      summary: NumOfSelectorsByReporter queries the number of selectors by a reporter.
      operationId: LayerReporterNumOfSelectorsByReporter
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              num_of_selectors:
                type: integer
                format: int32
                description: >-
                  num_of_selectors defines the number of selectors by a
                  reporter.
            description: |-
              QueryNumOfSelectorsByReporterResponse is the response type for the
              Query/NumOfSelectorsByReporter RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: reporter_address
          description: reporter_address defines the reporter address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /tellor-io/layer/reporter/params:
    get:
      summary: Parameters queries the parameters of the module.
      operationId: LayerReporterParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
                properties:
                  min_commission_rate:
                    type: string
                    title: >-
                      min_commission_rate, adopted from staking module, is the
                      minimum commission rate a reporter can their delegators
                  min_trb:
                    type: string
                    title: min_trb to be a reporter
                  max_selectors:
                    type: string
                    format: uint64
                    title: max number of selectors for a reporter
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      tags:
        - Query
  /tellor-io/layer/reporter/reporters:
    get:
      summary: Reporters queries all the staked reporters.
      operationId: LayerReporterReporters
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              reporters:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    metadata:
                      type: object
                      properties:
                        min_tokens_required:
                          type: string
                          title: min_tokens_required to select this reporter
                        commission_rate:
                          type: string
                          title: commission for the reporter
                        jailed:
                          type: boolean
                          title: >-
                            jailed is a bool whether the reporter is jailed or
                            not
                        jailed_until:
                          type: string
                          format: date-time
                          title: >-
                            jailed_until is the time the reporter is jailed
                            until
                      title: >-
                        OracleReporter is the struct that holds the data for a
                        reporter
                description: all the reporters.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryReportersResponse is the response type for the
              Query/Reporters RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /tellor-io/layer/reporter/selector-reporter/{selector_address}:
    get:
      summary: SelectorReporter queries the reporter of a selector.
      operationId: LayerReporterSelectorReporter
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              reporter:
                type: string
                description: reporter defines the reporter of a selector.
            description: |-
              QuerySelectorReporterResponse is the response type for the
              Query/SelectorReporter RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: selector_address
          description: selector_address defines the selector address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /tellor-io/layer/reporter/space-available-by-reporter/{reporter_address}:
    get:
      summary: SpaceAvailableByReporter queries the space available in a reporter.
      operationId: LayerReporterSpaceAvailableByReporter
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              space_available:
                type: integer
                format: int32
                description: space_available defines the space available in a reporter.
            description: |-
              QuerySpaceAvailableByReporterResponse is the response type for the
              Query/SpaceAvailableByReporter RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: reporter_address
          description: reporter_address defines the reporter address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
definitions:
  cosmos.auth.v1beta1.MsgUpdateParamsResponse:
    type: object
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.

      Since: cosmos-sdk 0.47
  cosmos.auth.v1beta1.Params:
    type: object
    properties:
      max_memo_characters:
        type: string
        format: uint64
      tx_sig_limit:
        type: string
        format: uint64
      tx_size_cost_per_byte:
        type: string
        format: uint64
      sig_verify_cost_ed25519:
        type: string
        format: uint64
      sig_verify_cost_secp256k1:
        type: string
        format: uint64
    description: Params defines the parameters for the auth module.
  google.protobuf.Any:
    type: object
    properties:
      '@type':
        type: string
        description: >-
          A URL/resource name that uniquely identifies the type of the
          serialized

          protocol buffer message. This string must contain at least

          one "/" character. The last segment of the URL's path must represent

          the fully qualified name of the type (as in

          `path/google.protobuf.Duration`). The name should be in a canonical
          form

          (e.g., leading "." is not accepted).


          In practice, teams usually precompile into the binary all types that
          they

          expect it to use in the context of Any. However, for URLs which use
          the

          scheme `http`, `https`, or no scheme, one can optionally set up a type

          server that maps type URLs to message definitions as follows:


          * If no scheme is provided, `https` is assumed.

          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official

          protobuf release, and it is not used for type URLs beginning with

          type.googleapis.com. As of May 2023, there are no widely used type
          server

          implementations and no plans to implement one.


          Schemes other than `http`, `https` (or the empty scheme) might be

          used with implementation specific semantics.
    additionalProperties: {}
    description: >-
      `Any` contains an arbitrary serialized protocol buffer message along with
      a

      URL that describes the type of the serialized message.


      Protobuf library provides support to pack/unpack Any values in the form

      of utility functions or additional generated methods of the Any type.


      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }
          // or ...
          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
            foo = any.unpack(Foo.getDefaultInstance());
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use

      'type.googleapis.com/full.type.name' as the type URL and the unpack

      methods only use the fully qualified type name after the last '/'

      in the type URL, for example "foo.bar.com/x/y.z" will yield type

      name "y.z".


      JSON

      ====

      The JSON representation of an `Any` value uses the regular

      representation of the deserialized, embedded message, with an

      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON

      representation, that representation will be embedded adding a field

      `value` which holds the custom JSON in addition to the `@type`

      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  google.rpc.Status:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            '@type':
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com. As of May 2023, there are no widely used
                type server

                implementations and no plans to implement one.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
          additionalProperties: {}
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".


            JSON

            ====

            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
  cosmos.authz.v1beta1.Grant:
    type: object
    properties:
      authorization:
        type: object
        properties:
          '@type':
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com. As of May 2023, there are no widely used type
              server

              implementations and no plans to implement one.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
        additionalProperties: {}
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }
              // or ...
              if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                foo = any.unpack(Foo.getDefaultInstance());
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".


          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
      expiration:
        type: string
        format: date-time
        title: >-
          time when the grant will expire and will be pruned. If null, then the
          grant

          doesn't have a time expiration (other conditions  in `authorization`

          may apply to invalidate the grant)
    description: |-
      Grant gives permissions to execute
      the provide method with expiration time.
  cosmos.authz.v1beta1.MsgExecResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: string
          format: byte
    description: MsgExecResponse defines the Msg/MsgExecResponse response type.
  cosmos.authz.v1beta1.MsgGrantResponse:
    type: object
    description: MsgGrantResponse defines the Msg/MsgGrant response type.
  cosmos.authz.v1beta1.MsgRevokeResponse:
    type: object
    description: MsgRevokeResponse defines the Msg/MsgRevokeResponse response type.
  cosmos.bank.v1beta1.Input:
    type: object
    properties:
      address:
        type: string
      coins:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    description: Input models transaction input.
  cosmos.bank.v1beta1.MsgMultiSendResponse:
    type: object
    description: MsgMultiSendResponse defines the Msg/MultiSend response type.
  cosmos.bank.v1beta1.MsgSendResponse:
    type: object
    description: MsgSendResponse defines the Msg/Send response type.
  cosmos.bank.v1beta1.MsgSetSendEnabledResponse:
    type: object
    description: |-
      MsgSetSendEnabledResponse defines the Msg/SetSendEnabled response type.

      Since: cosmos-sdk 0.47
  cosmos.bank.v1beta1.MsgUpdateParamsResponse:
    type: object
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.

      Since: cosmos-sdk 0.47
  cosmos.bank.v1beta1.Output:
    type: object
    properties:
      address:
        type: string
      coins:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    description: Output models transaction outputs.
  cosmos.bank.v1beta1.Params:
    type: object
    properties:
      send_enabled:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            enabled:
              type: boolean
          description: >-
            SendEnabled maps coin denom to a send_enabled status (whether a
            denom is

            sendable).
        description: >-
          Deprecated: Use of SendEnabled in params is deprecated.

          For genesis, use the newly added send_enabled field in the genesis
          object.

          Storage, lookup, and manipulation of this information is now in the
          keeper.


          As of cosmos-sdk 0.47, this only exists for backwards compatibility of
          genesis files.
      default_send_enabled:
        type: boolean
    description: Params defines the parameters for the bank module.
  cosmos.bank.v1beta1.SendEnabled:
    type: object
    properties:
      denom:
        type: string
      enabled:
        type: boolean
    description: |-
      SendEnabled maps coin denom to a send_enabled status (whether a denom is
      sendable).
  cosmos.base.v1beta1.Coin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
  cosmos.consensus.v1.MsgUpdateParamsResponse:
    type: object
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
  tendermint.types.ABCIParams:
    type: object
    properties:
      vote_extensions_enable_height:
        type: string
        format: int64
        description: >-
          vote_extensions_enable_height configures the first height during which

          vote extensions will be enabled. During this specified height, and for
          all

          subsequent heights, precommit messages that do not contain valid
          extension data

          will be considered invalid. Prior to this height, vote extensions will
          not

          be used or accepted by validators on the network.


          Once enabled, vote extensions will be created by the application in
          ExtendVote,

          passed to the application for validation in VerifyVoteExtension and
          given

          to the application to use when proposing a block during
          PrepareProposal.
    description: >-
      ABCIParams configure functionality specific to the Application Blockchain
      Interface.
  tendermint.types.BlockParams:
    type: object
    properties:
      max_bytes:
        type: string
        format: int64
        title: |-
          Max block size, in bytes.
          Note: must be greater than 0
      max_gas:
        type: string
        format: int64
        title: |-
          Max gas per block.
          Note: must be greater or equal to -1
    description: BlockParams contains limits on the block size.
  tendermint.types.EvidenceParams:
    type: object
    properties:
      max_age_num_blocks:
        type: string
        format: int64
        description: >-
          Max age of evidence, in blocks.


          The basic formula for calculating this is: MaxAgeDuration / {average
          block

          time}.
      max_age_duration:
        type: string
        description: >-
          Max age of evidence, in time.


          It should correspond with an app's "unbonding period" or other similar

          mechanism for handling [Nothing-At-Stake

          attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
      max_bytes:
        type: string
        format: int64
        title: >-
          This sets the maximum size of total evidence in bytes that can be
          committed in a single block.

          and should fall comfortably under the max block bytes.

          Default is 1048576 or 1MB
    description: EvidenceParams determine how we handle evidence of malfeasance.
  tendermint.types.ValidatorParams:
    type: object
    properties:
      pub_key_types:
        type: array
        items:
          type: string
    description: |-
      ValidatorParams restrict the public key types validators can use.
      NOTE: uses ABCI pubkey naming, not Amino names.
  cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse:
    type: object
    description: |-
      MsgCommunityPoolSpendResponse defines the response to executing a
      MsgCommunityPoolSpend message.

      Since: cosmos-sdk 0.47
  cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPoolResponse:
    type: object
    description: |-
      MsgDepositValidatorRewardsPoolResponse defines the response to executing a
      MsgDepositValidatorRewardsPool message.

      Since: cosmos-sdk 0.50
  cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse:
    type: object
    description: >-
      MsgFundCommunityPoolResponse defines the Msg/FundCommunityPool response
      type.
  cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse:
    type: object
    description: |-
      MsgSetWithdrawAddressResponse defines the Msg/SetWithdrawAddress response
      type.
  cosmos.distribution.v1beta1.MsgUpdateParamsResponse:
    type: object
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.

      Since: cosmos-sdk 0.47
  cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse:
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: 'Since: cosmos-sdk 0.46'
    description: |-
      MsgWithdrawDelegatorRewardResponse defines the Msg/WithdrawDelegatorReward
      response type.
  cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse:
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: 'Since: cosmos-sdk 0.46'
    description: |-
      MsgWithdrawValidatorCommissionResponse defines the
      Msg/WithdrawValidatorCommission response type.
  cosmos.distribution.v1beta1.Params:
    type: object
    properties:
      community_tax:
        type: string
      base_proposer_reward:
        type: string
        description: >-
          Deprecated: The base_proposer_reward field is deprecated and is no
          longer used

          in the x/distribution module's reward mechanism.
      bonus_proposer_reward:
        type: string
        description: >-
          Deprecated: The bonus_proposer_reward field is deprecated and is no
          longer used

          in the x/distribution module's reward mechanism.
      withdraw_addr_enabled:
        type: boolean
    description: Params defines the set of params for the distribution module.
  cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse:
    type: object
    properties:
      hash:
        type: string
        format: byte
        description: hash defines the hash of the evidence.
    description: MsgSubmitEvidenceResponse defines the Msg/SubmitEvidence response type.
  cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse:
    type: object
    description: >-
      MsgGrantAllowanceResponse defines the Msg/GrantAllowanceResponse response
      type.
  cosmos.feegrant.v1beta1.MsgPruneAllowancesResponse:
    type: object
    description: >-
      MsgPruneAllowancesResponse defines the Msg/PruneAllowancesResponse
      response type.


      Since cosmos-sdk 0.50
  cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse:
    type: object
    description: >-
      MsgRevokeAllowanceResponse defines the Msg/RevokeAllowanceResponse
      response type.
  cosmos.gov.v1.MsgCancelProposalResponse:
    type: object
    properties:
      proposal_id:
        type: string
        format: uint64
        description: proposal_id defines the unique id of the proposal.
      canceled_time:
        type: string
        format: date-time
        description: canceled_time is the time when proposal is canceled.
      canceled_height:
        type: string
        format: uint64
        description: >-
          canceled_height defines the block height at which the proposal is
          canceled.
    description: |-
      MsgCancelProposalResponse defines the response structure for executing a
      MsgCancelProposal message.

      Since: cosmos-sdk 0.50
  cosmos.gov.v1.MsgDepositResponse:
    type: object
    description: MsgDepositResponse defines the Msg/Deposit response type.
  cosmos.gov.v1.MsgExecLegacyContentResponse:
    type: object
    description: >-
      MsgExecLegacyContentResponse defines the Msg/ExecLegacyContent response
      type.
  cosmos.gov.v1.MsgSubmitProposalResponse:
    type: object
    properties:
      proposal_id:
        type: string
        format: uint64
        description: proposal_id defines the unique id of the proposal.
    description: MsgSubmitProposalResponse defines the Msg/SubmitProposal response type.
  cosmos.gov.v1.MsgUpdateParamsResponse:
    type: object
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.

      Since: cosmos-sdk 0.47
  cosmos.gov.v1.MsgVoteResponse:
    type: object
    description: MsgVoteResponse defines the Msg/Vote response type.
  cosmos.gov.v1.MsgVoteWeightedResponse:
    type: object
    description: MsgVoteWeightedResponse defines the Msg/VoteWeighted response type.
  cosmos.gov.v1.Params:
    type: object
    properties:
      min_deposit:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: Minimum deposit for a proposal to enter voting period.
      max_deposit_period:
        type: string
        description: >-
          Maximum period for Atom holders to deposit on a proposal. Initial
          value: 2

          months.
      voting_period:
        type: string
        description: Duration of the voting period.
      quorum:
        type: string
        description: |-
          Minimum percentage of total stake needed to vote for a result to be
           considered valid.
      threshold:
        type: string
        description: >-
          Minimum proportion of Yes votes for proposal to pass. Default value:
          0.5.
      veto_threshold:
        type: string
        description: |-
          Minimum value of Veto votes to Total votes ratio for proposal to be
           vetoed. Default value: 1/3.
      min_initial_deposit_ratio:
        type: string
        description: >-
          The ratio representing the proportion of the deposit value that must
          be paid at proposal submission.
      proposal_cancel_ratio:
        type: string
        description: >-
          The cancel ratio which will not be returned back to the depositors
          when a proposal is cancelled.


          Since: cosmos-sdk 0.50
      proposal_cancel_dest:
        type: string
        description: >-
          The address which will receive (proposal_cancel_ratio * deposit)
          proposal deposits.

          If empty, the (proposal_cancel_ratio * deposit) proposal deposits will
          be burned.


          Since: cosmos-sdk 0.50
      expedited_voting_period:
        type: string
        description: |-
          Duration of the voting period of an expedited proposal.

          Since: cosmos-sdk 0.50
      expedited_threshold:
        type: string
        description: >-
          Minimum proportion of Yes votes for proposal to pass. Default value:
          0.67.


          Since: cosmos-sdk 0.50
      expedited_min_deposit:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: Minimum expedited deposit for a proposal to enter voting period.
      burn_vote_quorum:
        type: boolean
        title: burn deposits if a proposal does not meet quorum
      burn_proposal_deposit_prevote:
        type: boolean
        title: burn deposits if the proposal does not enter voting period
      burn_vote_veto:
        type: boolean
        title: burn deposits if quorum with vote type no_veto is met
      min_deposit_ratio:
        type: string
        description: >-
          The ratio representing the proportion of the deposit value minimum
          that must be met when making a deposit.

          Default value: 0.01. Meaning that for a chain with a min_deposit of
          100stake, a deposit of 1stake would be

          required.


          Since: cosmos-sdk 0.50
    description: |-
      Params defines the parameters for the x/gov module.

      Since: cosmos-sdk 0.47
  cosmos.gov.v1.VoteOption:
    type: string
    enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
    default: VOTE_OPTION_UNSPECIFIED
    description: >-
      VoteOption enumerates the valid vote options for a given governance
      proposal.

       - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
       - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
       - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
       - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
       - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
  cosmos.gov.v1.WeightedVoteOption:
    type: object
    properties:
      option:
        description: >-
          option defines the valid vote options, it must not contain duplicate
          vote options.
        type: string
        enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
        default: VOTE_OPTION_UNSPECIFIED
      weight:
        type: string
        description: weight is the vote weight associated with the vote option.
    description: WeightedVoteOption defines a unit of vote for vote split.
  cosmos.gov.v1beta1.MsgDepositResponse:
    type: object
    description: MsgDepositResponse defines the Msg/Deposit response type.
  cosmos.gov.v1beta1.MsgSubmitProposalResponse:
    type: object
    properties:
      proposal_id:
        type: string
        format: uint64
        description: proposal_id defines the unique id of the proposal.
    description: MsgSubmitProposalResponse defines the Msg/SubmitProposal response type.
  cosmos.gov.v1beta1.MsgVoteResponse:
    type: object
    description: MsgVoteResponse defines the Msg/Vote response type.
  cosmos.gov.v1beta1.MsgVoteWeightedResponse:
    type: object
    description: |-
      MsgVoteWeightedResponse defines the Msg/VoteWeighted response type.

      Since: cosmos-sdk 0.43
  cosmos.gov.v1beta1.VoteOption:
    type: string
    enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
    default: VOTE_OPTION_UNSPECIFIED
    description: >-
      VoteOption enumerates the valid vote options for a given governance
      proposal.

       - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
       - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
       - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
       - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
       - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
  cosmos.gov.v1beta1.WeightedVoteOption:
    type: object
    properties:
      option:
        description: >-
          option defines the valid vote options, it must not contain duplicate
          vote options.
        type: string
        enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
        default: VOTE_OPTION_UNSPECIFIED
      weight:
        type: string
        description: weight is the vote weight associated with the vote option.
    description: |-
      WeightedVoteOption defines a unit of vote for vote split.

      Since: cosmos-sdk 0.43
  cosmos.mint.v1beta1.MsgUpdateParamsResponse:
    type: object
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.

      Since: cosmos-sdk 0.47
  cosmos.mint.v1beta1.Params:
    type: object
    properties:
      mint_denom:
        type: string
        title: type of coin to mint
      inflation_rate_change:
        type: string
        title: maximum annual change in inflation rate
      inflation_max:
        type: string
        title: maximum inflation rate
      inflation_min:
        type: string
        title: minimum inflation rate
      goal_bonded:
        type: string
        title: goal of percent bonded atoms
      blocks_per_year:
        type: string
        format: uint64
        title: expected blocks per year
    description: Params defines the parameters for the x/mint module.
  cosmos.slashing.v1beta1.MsgUnjailResponse:
    type: object
    title: MsgUnjailResponse defines the Msg/Unjail response type
  cosmos.slashing.v1beta1.MsgUpdateParamsResponse:
    type: object
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.

      Since: cosmos-sdk 0.47
  cosmos.slashing.v1beta1.Params:
    type: object
    properties:
      signed_blocks_window:
        type: string
        format: int64
      min_signed_per_window:
        type: string
        format: byte
      downtime_jail_duration:
        type: string
      slash_fraction_double_sign:
        type: string
        format: byte
      slash_fraction_downtime:
        type: string
        format: byte
    description: Params represents the parameters used for by the slashing module.
  cosmos.staking.v1beta1.CommissionRates:
    type: object
    properties:
      rate:
        type: string
        description: rate is the commission rate charged to delegators, as a fraction.
      max_rate:
        type: string
        description: >-
          max_rate defines the maximum commission rate which validator can ever
          charge, as a fraction.
      max_change_rate:
        type: string
        description: >-
          max_change_rate defines the maximum daily increase of the validator
          commission, as a fraction.
    description: >-
      CommissionRates defines the initial commission rates to be used for
      creating

      a validator.
  cosmos.staking.v1beta1.Description:
    type: object
    properties:
      moniker:
        type: string
        description: moniker defines a human-readable name for the validator.
      identity:
        type: string
        description: >-
          identity defines an optional identity signature (ex. UPort or
          Keybase).
      website:
        type: string
        description: website defines an optional website link.
      security_contact:
        type: string
        description: security_contact defines an optional email for security contact.
      details:
        type: string
        description: details define other optional details.
    description: Description defines a validator description.
  cosmos.staking.v1beta1.MsgBeginRedelegateResponse:
    type: object
    properties:
      completion_time:
        type: string
        format: date-time
    description: MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response type.
  cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse:
    type: object
    description: 'Since: cosmos-sdk 0.46'
    title: MsgCancelUnbondingDelegationResponse
  cosmos.staking.v1beta1.MsgCreateValidatorResponse:
    type: object
    description: MsgCreateValidatorResponse defines the Msg/CreateValidator response type.
  cosmos.staking.v1beta1.MsgDelegateResponse:
    type: object
    description: MsgDelegateResponse defines the Msg/Delegate response type.
  cosmos.staking.v1beta1.MsgEditValidatorResponse:
    type: object
    description: MsgEditValidatorResponse defines the Msg/EditValidator response type.
  cosmos.staking.v1beta1.MsgUndelegateResponse:
    type: object
    properties:
      completion_time:
        type: string
        format: date-time
      amount:
        description: 'Since: cosmos-sdk 0.50'
        title: amount returns the amount of undelegated coins
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
    description: MsgUndelegateResponse defines the Msg/Undelegate response type.
  cosmos.staking.v1beta1.MsgUpdateParamsResponse:
    type: object
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.

      Since: cosmos-sdk 0.47
  cosmos.staking.v1beta1.Params:
    type: object
    properties:
      unbonding_time:
        type: string
        description: unbonding_time is the time duration of unbonding.
      max_validators:
        type: integer
        format: int64
        description: max_validators is the maximum number of validators.
      max_entries:
        type: integer
        format: int64
        description: >-
          max_entries is the max entries for either unbonding delegation or
          redelegation (per pair/trio).
      historical_entries:
        type: integer
        format: int64
        description: historical_entries is the number of historical entries to persist.
      bond_denom:
        type: string
        description: bond_denom defines the bondable coin denomination.
      min_commission_rate:
        type: string
        title: >-
          min_commission_rate is the chain-wide minimum commission rate that a
          validator can charge their delegators
    description: Params defines the parameters for the x/staking module.
  ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse:
    type: object
    properties:
      channel_id:
        type: string
      port_id:
        type: string
    title: >-
      MsgRegisterInterchainAccountResponse defines the response for
      Msg/RegisterAccount
  ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse:
    type: object
    properties:
      sequence:
        type: string
        format: uint64
    title: MsgSendTxResponse defines the response for MsgSendTx
  ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse:
    type: object
    title: MsgUpdateParamsResponse defines the response for Msg/UpdateParams
  ibc.applications.interchain_accounts.controller.v1.Params:
    type: object
    properties:
      controller_enabled:
        type: boolean
        description: controller_enabled enables or disables the controller submodule.
    description: |-
      Params defines the set of on-chain interchain accounts parameters.
      The following parameters may be used to disable the controller submodule.
  ibc.applications.interchain_accounts.v1.InterchainAccountPacketData:
    type: object
    properties:
      type:
        type: string
        enum:
          - TYPE_UNSPECIFIED
          - TYPE_EXECUTE_TX
        default: TYPE_UNSPECIFIED
        description: |-
          - TYPE_UNSPECIFIED: Default zero value enumeration
           - TYPE_EXECUTE_TX: Execute a transaction on an interchain accounts host chain
        title: >-
          Type defines a classification of message issued from a controller
          chain to its associated interchain accounts

          host
      data:
        type: string
        format: byte
      memo:
        type: string
    description: >-
      InterchainAccountPacketData is comprised of a raw transaction, type of
      transaction and optional memo field.
  ibc.applications.interchain_accounts.v1.Type:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - TYPE_EXECUTE_TX
    default: TYPE_UNSPECIFIED
    description: |-
      - TYPE_UNSPECIFIED: Default zero value enumeration
       - TYPE_EXECUTE_TX: Execute a transaction on an interchain accounts host chain
    title: >-
      Type defines a classification of message issued from a controller chain to
      its associated interchain accounts

      host
  ibc.applications.interchain_accounts.host.v1.MsgUpdateParamsResponse:
    type: object
    title: MsgUpdateParamsResponse defines the response for Msg/UpdateParams
  ibc.applications.interchain_accounts.host.v1.Params:
    type: object
    properties:
      host_enabled:
        type: boolean
        description: host_enabled enables or disables the host submodule.
      allow_messages:
        type: array
        items:
          type: string
        description: >-
          allow_messages defines a list of sdk message typeURLs allowed to be
          executed on a host chain.
    description: |-
      Params defines the set of on-chain interchain accounts parameters.
      The following parameters may be used to disable the host submodule.
  ibc.applications.transfer.v1.MsgTransferResponse:
    type: object
    properties:
      sequence:
        type: string
        format: uint64
        title: sequence number of the transfer packet sent
    description: MsgTransferResponse defines the Msg/Transfer response type.
  ibc.applications.transfer.v1.MsgUpdateParamsResponse:
    type: object
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
  ibc.applications.transfer.v1.Params:
    type: object
    properties:
      send_enabled:
        type: boolean
        description: >-
          send_enabled enables or disables all cross-chain token transfers from
          this

          chain.
      receive_enabled:
        type: boolean
        description: >-
          receive_enabled enables or disables all cross-chain token transfers to
          this

          chain.
    description: >-
      Params defines the set of IBC transfer parameters.

      NOTE: To prevent a single token from being transferred, set the

      TransfersEnabled parameter to true and then set the bank module's
      SendEnabled

      parameter for the denomination to false.
  ibc.core.client.v1.Height:
    type: object
    properties:
      revision_number:
        type: string
        format: uint64
        title: the revision that the client is currently on
      revision_height:
        type: string
        format: uint64
        title: the height within the given revision
    description: |-
      Normally the RevisionHeight is incremented at each height while keeping
      RevisionNumber the same. However some consensus algorithms may choose to
      reset the height in certain conditions e.g. hard forks, state-machine
      breaking changes In these cases, the RevisionNumber is incremented so that
      height continues to be monitonically increasing even as the RevisionHeight
      gets reset
    title: >-
      Height is a monotonically increasing data type

      that can be compared against another Height for the purposes of updating
      and

      freezing clients
  ibc.core.channel.v1.Channel:
    type: object
    properties:
      state:
        title: current state of the channel end
        type: string
        enum:
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
          - STATE_CLOSED
        default: STATE_UNINITIALIZED_UNSPECIFIED
        description: |-
          State defines if a channel is in one of the following states:
          CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

           - STATE_UNINITIALIZED_UNSPECIFIED: Default State
           - STATE_INIT: A channel has just started the opening handshake.
           - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
           - STATE_OPEN: A channel has completed the handshake. Open channels are
          ready to send and receive packets.
           - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
          packets.
      ordering:
        title: whether the channel is ordered or unordered
        type: string
        enum:
          - ORDER_NONE_UNSPECIFIED
          - ORDER_UNORDERED
          - ORDER_ORDERED
        default: ORDER_NONE_UNSPECIFIED
        description: |-
          - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
           - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
          which they were sent.
           - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
      counterparty:
        title: counterparty channel end
        type: object
        properties:
          port_id:
            type: string
            description: >-
              port on the counterparty chain which owns the other end of the
              channel.
          channel_id:
            type: string
            title: channel end on the counterparty chain
      connection_hops:
        type: array
        items:
          type: string
        title: |-
          list of connection identifiers, in order, along which packets sent on
          this channel will travel
      version:
        type: string
        title: opaque channel version, which is agreed upon during the handshake
    description: |-
      Channel defines pipeline for exactly-once packet delivery between specific
      modules on separate blockchains, which has at least one end capable of
      sending packets and one end capable of receiving packets.
  ibc.core.channel.v1.Counterparty:
    type: object
    properties:
      port_id:
        type: string
        description: >-
          port on the counterparty chain which owns the other end of the
          channel.
      channel_id:
        type: string
        title: channel end on the counterparty chain
    title: Counterparty defines a channel end counterparty
  ibc.core.channel.v1.MsgAcknowledgementResponse:
    type: object
    properties:
      result:
        type: string
        enum:
          - RESPONSE_RESULT_TYPE_UNSPECIFIED
          - RESPONSE_RESULT_TYPE_NOOP
          - RESPONSE_RESULT_TYPE_SUCCESS
        default: RESPONSE_RESULT_TYPE_UNSPECIFIED
        description: |-
          - RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration
           - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
           - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully
        title: >-
          ResponseResultType defines the possible outcomes of the execution of a
          message
    description: MsgAcknowledgementResponse defines the Msg/Acknowledgement response type.
  ibc.core.channel.v1.MsgChannelCloseConfirmResponse:
    type: object
    description: >-
      MsgChannelCloseConfirmResponse defines the Msg/ChannelCloseConfirm
      response

      type.
  ibc.core.channel.v1.MsgChannelCloseInitResponse:
    type: object
    description: >-
      MsgChannelCloseInitResponse defines the Msg/ChannelCloseInit response
      type.
  ibc.core.channel.v1.MsgChannelOpenAckResponse:
    type: object
    description: MsgChannelOpenAckResponse defines the Msg/ChannelOpenAck response type.
  ibc.core.channel.v1.MsgChannelOpenConfirmResponse:
    type: object
    description: |-
      MsgChannelOpenConfirmResponse defines the Msg/ChannelOpenConfirm response
      type.
  ibc.core.channel.v1.MsgChannelOpenInitResponse:
    type: object
    properties:
      channel_id:
        type: string
      version:
        type: string
    description: MsgChannelOpenInitResponse defines the Msg/ChannelOpenInit response type.
  ibc.core.channel.v1.MsgChannelOpenTryResponse:
    type: object
    properties:
      version:
        type: string
      channel_id:
        type: string
    description: MsgChannelOpenTryResponse defines the Msg/ChannelOpenTry response type.
  ibc.core.channel.v1.MsgRecvPacketResponse:
    type: object
    properties:
      result:
        type: string
        enum:
          - RESPONSE_RESULT_TYPE_UNSPECIFIED
          - RESPONSE_RESULT_TYPE_NOOP
          - RESPONSE_RESULT_TYPE_SUCCESS
        default: RESPONSE_RESULT_TYPE_UNSPECIFIED
        description: |-
          - RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration
           - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
           - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully
        title: >-
          ResponseResultType defines the possible outcomes of the execution of a
          message
    description: MsgRecvPacketResponse defines the Msg/RecvPacket response type.
  ibc.core.channel.v1.MsgTimeoutOnCloseResponse:
    type: object
    properties:
      result:
        type: string
        enum:
          - RESPONSE_RESULT_TYPE_UNSPECIFIED
          - RESPONSE_RESULT_TYPE_NOOP
          - RESPONSE_RESULT_TYPE_SUCCESS
        default: RESPONSE_RESULT_TYPE_UNSPECIFIED
        description: |-
          - RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration
           - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
           - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully
        title: >-
          ResponseResultType defines the possible outcomes of the execution of a
          message
    description: MsgTimeoutOnCloseResponse defines the Msg/TimeoutOnClose response type.
  ibc.core.channel.v1.MsgTimeoutResponse:
    type: object
    properties:
      result:
        type: string
        enum:
          - RESPONSE_RESULT_TYPE_UNSPECIFIED
          - RESPONSE_RESULT_TYPE_NOOP
          - RESPONSE_RESULT_TYPE_SUCCESS
        default: RESPONSE_RESULT_TYPE_UNSPECIFIED
        description: |-
          - RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration
           - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
           - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully
        title: >-
          ResponseResultType defines the possible outcomes of the execution of a
          message
    description: MsgTimeoutResponse defines the Msg/Timeout response type.
  ibc.core.channel.v1.Order:
    type: string
    enum:
      - ORDER_NONE_UNSPECIFIED
      - ORDER_UNORDERED
      - ORDER_ORDERED
    default: ORDER_NONE_UNSPECIFIED
    description: |-
      - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
       - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
      which they were sent.
       - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
    title: Order defines if a channel is ORDERED or UNORDERED
  ibc.core.channel.v1.Packet:
    type: object
    properties:
      sequence:
        type: string
        format: uint64
        description: >-
          number corresponds to the order of sends and receives, where a Packet

          with an earlier sequence number must be sent and received before a
          Packet

          with a later sequence number.
      source_port:
        type: string
        description: identifies the port on the sending chain.
      source_channel:
        type: string
        description: identifies the channel end on the sending chain.
      destination_port:
        type: string
        description: identifies the port on the receiving chain.
      destination_channel:
        type: string
        description: identifies the channel end on the receiving chain.
      data:
        type: string
        format: byte
        title: actual opaque bytes transferred directly to the application module
      timeout_height:
        title: block height after which the packet times out
        type: object
        properties:
          revision_number:
            type: string
            format: uint64
            title: the revision that the client is currently on
          revision_height:
            type: string
            format: uint64
            title: the height within the given revision
        description: >-
          Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose
          to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so
          that

          height continues to be monitonically increasing even as the
          RevisionHeight

          gets reset
      timeout_timestamp:
        type: string
        format: uint64
        title: block timestamp (in nanoseconds) after which the packet times out
    title: >-
      Packet defines a type that carries data across different chains through
      IBC
  ibc.core.channel.v1.ResponseResultType:
    type: string
    enum:
      - RESPONSE_RESULT_TYPE_UNSPECIFIED
      - RESPONSE_RESULT_TYPE_NOOP
      - RESPONSE_RESULT_TYPE_SUCCESS
    default: RESPONSE_RESULT_TYPE_UNSPECIFIED
    description: |-
      - RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration
       - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
       - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully
    title: >-
      ResponseResultType defines the possible outcomes of the execution of a
      message
  ibc.core.channel.v1.State:
    type: string
    enum:
      - STATE_UNINITIALIZED_UNSPECIFIED
      - STATE_INIT
      - STATE_TRYOPEN
      - STATE_OPEN
      - STATE_CLOSED
    default: STATE_UNINITIALIZED_UNSPECIFIED
    description: |-
      State defines if a channel is in one of the following states:
      CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

       - STATE_UNINITIALIZED_UNSPECIFIED: Default State
       - STATE_INIT: A channel has just started the opening handshake.
       - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
       - STATE_OPEN: A channel has completed the handshake. Open channels are
      ready to send and receive packets.
       - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
      packets.
  cosmos.upgrade.v1beta1.Plan:
    type: object
    properties:
      name:
        type: string
        description: >-
          Sets the name for the upgrade. This name will be used by the upgraded

          version of the software to apply any special "on-upgrade" commands
          during

          the first BeginBlock method after the upgrade is applied. It is also
          used

          to detect whether a software version can handle a given upgrade. If no

          upgrade handler with this name has been set in the software, it will
          be

          assumed that the software is out-of-date when the upgrade Time or
          Height is

          reached and the software will exit.
      time:
        type: string
        format: date-time
        description: >-
          Deprecated: Time based upgrades have been deprecated. Time based
          upgrade logic

          has been removed from the SDK.

          If this field is not empty, an error will be thrown.
      height:
        type: string
        format: int64
        description: The height at which the upgrade must be performed.
      info:
        type: string
        title: |-
          Any application specific upgrade info to be included on-chain
          such as a git commit that validators could automatically upgrade to
      upgraded_client_state:
        description: >-
          Deprecated: UpgradedClientState field has been deprecated. IBC upgrade
          logic has been

          moved to the IBC module in the sub module 02-client.

          If this field is not empty, an error will be thrown.
        type: object
        properties:
          '@type':
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com. As of May 2023, there are no widely used type
              server

              implementations and no plans to implement one.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
        additionalProperties: {}
    description: >-
      Plan specifies information about a planned upgrade and when it should
      occur.
  ibc.core.client.v1.MsgCreateClientResponse:
    type: object
    description: MsgCreateClientResponse defines the Msg/CreateClient response type.
  ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse:
    type: object
    description: >-
      MsgIBCSoftwareUpgradeResponse defines the Msg/IBCSoftwareUpgrade response
      type.
  ibc.core.client.v1.MsgRecoverClientResponse:
    type: object
    description: MsgRecoverClientResponse defines the Msg/RecoverClient response type.
  ibc.core.client.v1.MsgSubmitMisbehaviourResponse:
    type: object
    description: |-
      MsgSubmitMisbehaviourResponse defines the Msg/SubmitMisbehaviour response
      type.
  ibc.core.client.v1.MsgUpdateClientResponse:
    type: object
    description: MsgUpdateClientResponse defines the Msg/UpdateClient response type.
  ibc.core.client.v1.MsgUpdateParamsResponse:
    type: object
    description: MsgUpdateParamsResponse defines the MsgUpdateParams response type.
  ibc.core.client.v1.MsgUpgradeClientResponse:
    type: object
    description: MsgUpgradeClientResponse defines the Msg/UpgradeClient response type.
  ibc.core.client.v1.Params:
    type: object
    properties:
      allowed_clients:
        type: array
        items:
          type: string
        description: >-
          allowed_clients defines the list of allowed client state types which
          can be created

          and interacted with. If a client type is removed from the allowed
          clients list, usage

          of this client will be disabled until it is added again to the list.
    description: Params defines the set of IBC light client parameters.
  ibc.core.commitment.v1.MerklePrefix:
    type: object
    properties:
      key_prefix:
        type: string
        format: byte
    title: |-
      MerklePrefix is merkle path prefixed to the key.
      The constructed key from the Path and the key will be append(Path.KeyPath,
      append(Path.KeyPrefix, key...))
  ibc.core.connection.v1.Counterparty:
    type: object
    properties:
      client_id:
        type: string
        description: >-
          identifies the client on the counterparty chain associated with a
          given

          connection.
      connection_id:
        type: string
        description: >-
          identifies the connection end on the counterparty chain associated
          with a

          given connection.
      prefix:
        description: commitment merkle prefix of the counterparty chain.
        type: object
        properties:
          key_prefix:
            type: string
            format: byte
        title: >-
          MerklePrefix is merkle path prefixed to the key.

          The constructed key from the Path and the key will be
          append(Path.KeyPath,

          append(Path.KeyPrefix, key...))
    description: >-
      Counterparty defines the counterparty chain associated with a connection
      end.
  ibc.core.connection.v1.MsgConnectionOpenAckResponse:
    type: object
    description: >-
      MsgConnectionOpenAckResponse defines the Msg/ConnectionOpenAck response
      type.
  ibc.core.connection.v1.MsgConnectionOpenConfirmResponse:
    type: object
    description: |-
      MsgConnectionOpenConfirmResponse defines the Msg/ConnectionOpenConfirm
      response type.
  ibc.core.connection.v1.MsgConnectionOpenInitResponse:
    type: object
    description: |-
      MsgConnectionOpenInitResponse defines the Msg/ConnectionOpenInit response
      type.
  ibc.core.connection.v1.MsgConnectionOpenTryResponse:
    type: object
    description: >-
      MsgConnectionOpenTryResponse defines the Msg/ConnectionOpenTry response
      type.
  ibc.core.connection.v1.MsgUpdateParamsResponse:
    type: object
    description: MsgUpdateParamsResponse defines the MsgUpdateParams response type.
  ibc.core.connection.v1.Params:
    type: object
    properties:
      max_expected_time_per_block:
        type: string
        format: uint64
        description: >-
          maximum expected time per block (in nanoseconds), used to enforce
          block delay. This parameter should reflect the

          largest amount of time that the chain might reasonably take to produce
          the next block under normal operating

          conditions. A safe choice is 3-5x the expected time per block.
    description: Params defines the set of Connection parameters.
  ibc.core.connection.v1.Version:
    type: object
    properties:
      identifier:
        type: string
        title: unique version identifier
      features:
        type: array
        items:
          type: string
        title: list of features compatible with the specified identifier
    description: |-
      Version defines the versioning scheme used to negotiate the IBC verison in
      the connection handshake.
  layer.bridge.MsgClaimDepositResponse:
    type: object
  layer.bridge.MsgRequestAttestationsResponse:
    type: object
  layer.bridge.MsgWithdrawTokensResponse:
    type: object
  layer.bridge.Params:
    type: object
    description: Params defines the parameters for the module.
  layer.bridge.QueryBridgeValidator:
    type: object
    properties:
      ethereumAddress:
        type: string
      power:
        type: string
        format: uint64
  layer.bridge.QueryGetAttestationDataBySnapshotResponse:
    type: object
    properties:
      query_id:
        type: string
      timestamp:
        type: string
      aggregate_value:
        type: string
      aggregate_power:
        type: string
      checkpoint:
        type: string
      attestation_timestamp:
        type: string
      previous_report_timestamp:
        type: string
      next_report_timestamp:
        type: string
  layer.bridge.QueryGetAttestationsBySnapshotResponse:
    type: object
    properties:
      attestations:
        type: array
        items:
          type: string
  layer.bridge.QueryGetCurrentValidatorSetTimestampResponse:
    type: object
    properties:
      timestamp:
        type: string
        format: int64
  layer.bridge.QueryGetEvmAddressByValidatorAddressResponse:
    type: object
    properties:
      evm_address:
        type: string
  layer.bridge.QueryGetEvmValidatorsResponse:
    type: object
    properties:
      bridge_validator_set:
        type: array
        items:
          type: object
          properties:
            ethereumAddress:
              type: string
            power:
              type: string
              format: uint64
  layer.bridge.QueryGetSnapshotsByReportResponse:
    type: object
    properties:
      snapshots:
        type: array
        items:
          type: string
  layer.bridge.QueryGetValidatorCheckpointParamsResponse:
    type: object
    properties:
      checkpoint:
        type: string
      valset_hash:
        type: string
      timestamp:
        type: string
        format: int64
      power_threshold:
        type: string
        format: int64
  layer.bridge.QueryGetValidatorCheckpointResponse:
    type: object
    properties:
      validator_checkpoint:
        type: string
  layer.bridge.QueryGetValidatorSetIndexByTimestampResponse:
    type: object
    properties:
      index:
        type: string
        format: int64
  layer.bridge.QueryGetValidatorTimestampByIndexResponse:
    type: object
    properties:
      timestamp:
        type: string
        format: int64
  layer.bridge.QueryGetValsetByTimestampResponse:
    type: object
    properties:
      bridge_validator_set:
        type: array
        items:
          type: object
          properties:
            ethereumAddress:
              type: string
            power:
              type: string
              format: uint64
  layer.bridge.QueryGetValsetSigsResponse:
    type: object
    properties:
      signatures:
        type: array
        items:
          type: string
  layer.bridge.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        type: object
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  layer.mint.MsgMsgInitResponse:
    type: object
  cosmos.base.query.v1beta1.PageRequest:
    type: object
    properties:
      key:
        type: string
        format: byte
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
      offset:
        type: string
        format: uint64
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
      limit:
        type: string
        format: uint64
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
      count_total:
        type: boolean
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when
          key

          is set.
      reverse:
        type: boolean
        description: >-
          reverse is set to true if results are to be returned in the descending
          order.


          Since: cosmos-sdk 0.43
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
  cosmos.base.query.v1beta1.PageResponse:
    type: object
    properties:
      next_key:
        type: string
        format: byte
        description: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently. It will be empty if
          there are no more results.
      total:
        type: string
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
  layer.oracle.Aggregate:
    type: object
    properties:
      query_id:
        type: string
        format: byte
        title: query_id is the id of the query
      aggregate_value:
        type: string
        title: aggregate_value is the value of the aggregate
      aggregate_reporter:
        type: string
        title: aggregate_reporter is the address of the reporter
      reporter_power:
        type: string
        format: int64
        title: reporter_power is the power of the reporter
      standard_deviation:
        type: number
        format: double
        title: >-
          standard_deviation is the standard deviation of the reports that were
          aggregated
      reporters:
        type: array
        items:
          type: object
          properties:
            reporter:
              type: string
            power:
              type: string
              format: int64
            block_number:
              type: string
              format: int64
        title: list of reporters that were included in the aggregate
      flagged:
        type: boolean
        title: flagged is true if the aggregate was flagged by a dispute
      index:
        type: string
        format: uint64
        title: nonce is the nonce of the aggregate
      aggregate_report_index:
        type: string
        format: int64
        title: >-
          aggregate_report_index is the index of the aggregate report in the
          micro reports
      height:
        type: string
        format: int64
        title: height of the aggregate report
      micro_height:
        type: string
        format: int64
        title: height of the micro report
    title: aggregate struct to represent meta data of an aggregate report
  layer.oracle.AggregateReporter:
    type: object
    properties:
      reporter:
        type: string
      power:
        type: string
        format: int64
      block_number:
        type: string
        format: int64
  layer.oracle.MicroReport:
    type: object
    properties:
      reporter:
        type: string
        title: reporter is the address of the reporter
      power:
        type: string
        format: int64
        title: the power of the reporter based on total tokens normalized
      query_type:
        type: string
        title: string identifier of the data spec
      query_id:
        type: string
        format: byte
        title: hash of the query data
      aggregate_method:
        type: string
        title: >-
          aggregate method to use for aggregating all the reports for the query
          id
      value:
        type: string
        title: hex string of the response value
      timestamp:
        type: string
        format: date-time
        title: timestamp of when the report was created
      cyclelist:
        type: boolean
        title: indicates if the report's query id is in the cyclelist
      block_number:
        type: string
        format: int64
        title: block number of when the report was created
    title: MicroReport represents data for a single report
  layer.oracle.Params:
    type: object
    properties:
      minStakeAmount:
        type: string
    description: Params defines the parameters for the module.
  layer.oracle.QueryCurrentCyclelistQueryResponse:
    type: object
    properties:
      query_data:
        type: string
  layer.oracle.QueryGetAggregateBeforeByReporterResponse:
    type: object
    properties:
      aggregate:
        description: aggregate defines the aggregate report.
        type: object
        properties:
          query_id:
            type: string
            format: byte
            title: query_id is the id of the query
          aggregate_value:
            type: string
            title: aggregate_value is the value of the aggregate
          aggregate_reporter:
            type: string
            title: aggregate_reporter is the address of the reporter
          reporter_power:
            type: string
            format: int64
            title: reporter_power is the power of the reporter
          standard_deviation:
            type: number
            format: double
            title: >-
              standard_deviation is the standard deviation of the reports that
              were aggregated
          reporters:
            type: array
            items:
              type: object
              properties:
                reporter:
                  type: string
                power:
                  type: string
                  format: int64
                block_number:
                  type: string
                  format: int64
            title: list of reporters that were included in the aggregate
          flagged:
            type: boolean
            title: flagged is true if the aggregate was flagged by a dispute
          index:
            type: string
            format: uint64
            title: nonce is the nonce of the aggregate
          aggregate_report_index:
            type: string
            format: int64
            title: >-
              aggregate_report_index is the index of the aggregate report in the
              micro reports
          height:
            type: string
            format: int64
            title: height of the aggregate report
          micro_height:
            type: string
            format: int64
            title: height of the micro report
        title: aggregate struct to represent meta data of an aggregate report
    description: >-
      QueryGetAggregateBeforeByReporterResponse is the response type for the
      Query/GetAggregateBeforeByReporter RPC method.
  layer.oracle.QueryGetCurrentAggregateReportResponse:
    type: object
    properties:
      aggregate:
        description: aggregate defines the current aggregate report.
        type: object
        properties:
          query_id:
            type: string
            format: byte
            title: query_id is the id of the query
          aggregate_value:
            type: string
            title: aggregate_value is the value of the aggregate
          aggregate_reporter:
            type: string
            title: aggregate_reporter is the address of the reporter
          reporter_power:
            type: string
            format: int64
            title: reporter_power is the power of the reporter
          standard_deviation:
            type: number
            format: double
            title: >-
              standard_deviation is the standard deviation of the reports that
              were aggregated
          reporters:
            type: array
            items:
              type: object
              properties:
                reporter:
                  type: string
                power:
                  type: string
                  format: int64
                block_number:
                  type: string
                  format: int64
            title: list of reporters that were included in the aggregate
          flagged:
            type: boolean
            title: flagged is true if the aggregate was flagged by a dispute
          index:
            type: string
            format: uint64
            title: nonce is the nonce of the aggregate
          aggregate_report_index:
            type: string
            format: int64
            title: >-
              aggregate_report_index is the index of the aggregate report in the
              micro reports
          height:
            type: string
            format: int64
            title: height of the aggregate report
          micro_height:
            type: string
            format: int64
            title: height of the micro report
        title: aggregate struct to represent meta data of an aggregate report
      timestamp:
        type: string
        format: uint64
        description: timestamp defines the timestamp of the aggregate report.
    description: >-
      QueryGetCurrentAggregateReportResponse is the response type for the
      Query/GetCurrentAggregateReport RPC method.
  layer.oracle.QueryGetCurrentTipResponse:
    type: object
    properties:
      tips:
        type: string
  layer.oracle.QueryGetDataBeforeResponse:
    type: object
    properties:
      aggregate:
        type: object
        properties:
          query_id:
            type: string
            format: byte
            title: query_id is the id of the query
          aggregate_value:
            type: string
            title: aggregate_value is the value of the aggregate
          aggregate_reporter:
            type: string
            title: aggregate_reporter is the address of the reporter
          reporter_power:
            type: string
            format: int64
            title: reporter_power is the power of the reporter
          standard_deviation:
            type: number
            format: double
            title: >-
              standard_deviation is the standard deviation of the reports that
              were aggregated
          reporters:
            type: array
            items:
              type: object
              properties:
                reporter:
                  type: string
                power:
                  type: string
                  format: int64
                block_number:
                  type: string
                  format: int64
            title: list of reporters that were included in the aggregate
          flagged:
            type: boolean
            title: flagged is true if the aggregate was flagged by a dispute
          index:
            type: string
            format: uint64
            title: nonce is the nonce of the aggregate
          aggregate_report_index:
            type: string
            format: int64
            title: >-
              aggregate_report_index is the index of the aggregate report in the
              micro reports
          height:
            type: string
            format: int64
            title: height of the aggregate report
          micro_height:
            type: string
            format: int64
            title: height of the micro report
        title: aggregate struct to represent meta data of an aggregate report
      timestamp:
        type: string
        format: uint64
  layer.oracle.QueryGetTimeBasedRewardsResponse:
    type: object
    properties:
      reward:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  layer.oracle.QueryGetUserTipTotalResponse:
    type: object
    properties:
      total_tips:
        type: string
  layer.oracle.QueryMicroReportsResponse:
    type: object
    properties:
      microReports:
        type: array
        items:
          type: object
          properties:
            reporter:
              type: string
              title: reporter is the address of the reporter
            power:
              type: string
              format: int64
              title: the power of the reporter based on total tokens normalized
            query_type:
              type: string
              title: string identifier of the data spec
            query_id:
              type: string
              format: byte
              title: hash of the query data
            aggregate_method:
              type: string
              title: >-
                aggregate method to use for aggregating all the reports for the
                query id
            value:
              type: string
              title: hex string of the response value
            timestamp:
              type: string
              format: date-time
              title: timestamp of when the report was created
            cyclelist:
              type: boolean
              title: indicates if the report's query id is in the cyclelist
            block_number:
              type: string
              format: int64
              title: block number of when the report was created
          title: MicroReport represents data for a single report
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
  layer.oracle.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        type: object
        properties:
          minStakeAmount:
            type: string
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  layer.oracle.QueryRetrieveDataResponse:
    type: object
    properties:
      aggregate:
        type: object
        properties:
          query_id:
            type: string
            format: byte
            title: query_id is the id of the query
          aggregate_value:
            type: string
            title: aggregate_value is the value of the aggregate
          aggregate_reporter:
            type: string
            title: aggregate_reporter is the address of the reporter
          reporter_power:
            type: string
            format: int64
            title: reporter_power is the power of the reporter
          standard_deviation:
            type: number
            format: double
            title: >-
              standard_deviation is the standard deviation of the reports that
              were aggregated
          reporters:
            type: array
            items:
              type: object
              properties:
                reporter:
                  type: string
                power:
                  type: string
                  format: int64
                block_number:
                  type: string
                  format: int64
            title: list of reporters that were included in the aggregate
          flagged:
            type: boolean
            title: flagged is true if the aggregate was flagged by a dispute
          index:
            type: string
            format: uint64
            title: nonce is the nonce of the aggregate
          aggregate_report_index:
            type: string
            format: int64
            title: >-
              aggregate_report_index is the index of the aggregate report in the
              micro reports
          height:
            type: string
            format: int64
            title: height of the aggregate report
          micro_height:
            type: string
            format: int64
            title: height of the micro report
        title: aggregate struct to represent meta data of an aggregate report
  layer.oracle.MsgCommitReportResponse:
    type: object
  layer.oracle.MsgSubmitValueResponse:
    type: object
  layer.oracle.MsgTipResponse:
    type: object
  layer.oracle.MsgUpdateCyclelistResponse:
    type: object
    description: MsgUpdateCycleResponse defines the Msg/UpdateCycle response type.
  layer.oracle.MsgUpdateParamsResponse:
    type: object
  layer.registry.ABIComponent:
    type: object
    properties:
      name:
        type: string
        title: name
      field_type:
        type: string
        title: type
      nested_component:
        type: array
        items:
          type: object
          $ref: '#/definitions/layer.registry.ABIComponent'
        title: consider taking this recursion out and make it once only
    title: ABIComponent is a specification for how to interpret abi_components
  layer.registry.DataSpec:
    type: object
    properties:
      document_hash:
        type: string
        title: ipfs hash of the data spec
      response_value_type:
        type: string
        title: the value's datatype for decoding the value
      abi_components:
        type: array
        items:
          type: object
          $ref: '#/definitions/layer.registry.ABIComponent'
        title: the abi components for decoding
      aggregation_method:
        type: string
        title: >-
          how to aggregate the data (ie. average, median, mode, etc) for
          aggregating reports and arriving at final value
      registrar:
        type: string
        title: address that originally registered the data spec
      report_buffer_window:
        type: string
        title: >-
          report_buffer_window specifies the duration of the time window
          following an initial report

          during which additional reports can be submitted. This duration acts
          as a buffer, allowing

          a collection of related reports in a defined time frame. The window
          ensures that all

          pertinent reports are aggregated together before arriving at a final
          value. This defaults

          to 0s if not specified.

          extensions: treat as a golang time.duration, don't allow nil values,
          don't omit empty values
    title: DataSpec is a specification for how to interpret and aggregate data
  layer.registry.MsgRegisterSpecResponse:
    type: object
    description: MsgRegisterSpecResponse defines the Msg/RegisterSpec response type.
  layer.registry.MsgUpdateDataSpecResponse:
    type: object
  layer.reporter.MsgCreateReporterResponse:
    type: object
    description: MsgCreateReporterResponse defines the Msg/CreateReporter response type.
  layer.reporter.MsgRemoveSelectorResponse:
    type: object
    description: MsgRemoveSelectorResponse defines the Msg/RemoveSelector response type.
  layer.reporter.MsgSelectReporterResponse:
    type: object
  layer.reporter.MsgSwitchReporterResponse:
    type: object
    description: MsgSwitchReporterResponse defines the Msg/SwitchReporter response type.
  layer.reporter.MsgUnjailReporterResponse:
    type: object
    description: MsgUnjailReporterResponse defines the Msg/UnjailReporter response type.
  layer.reporter.MsgUpdateParamsResponse:
    type: object
    description: |-
      MsgUpdateParamsResponse defines the response structure for executing a
      MsgUpdateParams message.
  layer.reporter.MsgWithdrawTipResponse:
    type: object
    description: MsgWithdrawTipResponse defines the Msg/WithdrawTip response type.
  layer.reporter.Params:
    type: object
    properties:
      min_commission_rate:
        type: string
        title: >-
          min_commission_rate, adopted from staking module, is the minimum
          commission rate a reporter can their delegators
      min_trb:
        type: string
        title: min_trb to be a reporter
      max_selectors:
        type: string
        format: uint64
        title: max number of selectors for a reporter
    description: Params defines the parameters for the module.
  layer.reporter.OracleReporter:
    type: object
    properties:
      min_tokens_required:
        type: string
        title: min_tokens_required to select this reporter
      commission_rate:
        type: string
        title: commission for the reporter
      jailed:
        type: boolean
        title: jailed is a bool whether the reporter is jailed or not
      jailed_until:
        type: string
        format: date-time
        title: jailed_until is the time the reporter is jailed until
    title: OracleReporter is the struct that holds the data for a reporter
  layer.reporter.QueryAllowedAmountExpirationResponse:
    type: object
    properties:
      expiration:
        type: string
        format: int64
  layer.reporter.QueryAllowedAmountResponse:
    type: object
    properties:
      staking_amount:
        type: string
        description: >-
          allowed_amount defines the currently allowed amount to stake or
          unstake.
      unstaking_amount:
        type: string
  layer.reporter.QueryNumOfSelectorsByReporterResponse:
    type: object
    properties:
      num_of_selectors:
        type: integer
        format: int32
        description: num_of_selectors defines the number of selectors by a reporter.
    description: |-
      QueryNumOfSelectorsByReporterResponse is the response type for the
      Query/NumOfSelectorsByReporter RPC method.
  layer.reporter.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        type: object
        properties:
          min_commission_rate:
            type: string
            title: >-
              min_commission_rate, adopted from staking module, is the minimum
              commission rate a reporter can their delegators
          min_trb:
            type: string
            title: min_trb to be a reporter
          max_selectors:
            type: string
            format: uint64
            title: max number of selectors for a reporter
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  layer.reporter.QueryReportersResponse:
    type: object
    properties:
      reporters:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
            metadata:
              type: object
              properties:
                min_tokens_required:
                  type: string
                  title: min_tokens_required to select this reporter
                commission_rate:
                  type: string
                  title: commission for the reporter
                jailed:
                  type: boolean
                  title: jailed is a bool whether the reporter is jailed or not
                jailed_until:
                  type: string
                  format: date-time
                  title: jailed_until is the time the reporter is jailed until
              title: OracleReporter is the struct that holds the data for a reporter
        description: all the reporters.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryReportersResponse is the response type for the Query/Reporters RPC
      method.
  layer.reporter.QuerySelectorReporterResponse:
    type: object
    properties:
      reporter:
        type: string
        description: reporter defines the reporter of a selector.
    description: |-
      QuerySelectorReporterResponse is the response type for the
      Query/SelectorReporter RPC method.
  layer.reporter.QuerySpaceAvailableByReporterResponse:
    type: object
    properties:
      space_available:
        type: integer
        format: int32
        description: space_available defines the space available in a reporter.
    description: |-
      QuerySpaceAvailableByReporterResponse is the response type for the
      Query/SpaceAvailableByReporter RPC method.
  layer.reporter.reporter:
    type: object
    properties:
      address:
        type: string
      metadata:
        type: object
        properties:
          min_tokens_required:
            type: string
            title: min_tokens_required to select this reporter
          commission_rate:
            type: string
            title: commission for the reporter
          jailed:
            type: boolean
            title: jailed is a bool whether the reporter is jailed or not
          jailed_until:
            type: string
            format: date-time
            title: jailed_until is the time the reporter is jailed until
        title: OracleReporter is the struct that holds the data for a reporter
