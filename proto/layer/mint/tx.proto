syntax = "proto3";

package layer.mint;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/tellor-io/layer/x/mint/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc Init(MsgInit) returns (MsgMsgInitResponse);
  rpc UpdateExtraRewardRate(MsgUpdateExtraRewardRate) returns (MsgUpdateExtraRewardRateResponse);
}

message MsgInit {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "layer/x/mint/MsgInit";

  // authority is the address that is allowed calling this msg.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgMsgInitResponse {}

message MsgUpdateExtraRewardRate {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "layer/x/mint/MsgUpdateExtraRewardRate";

  // authority is the address that is allowed calling this msg.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  int64 daily_extra_rewards = 2;
  string bond_denom = 3;
}

message MsgUpdateExtraRewardRateResponse {}