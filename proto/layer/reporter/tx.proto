syntax = "proto3";

package layer.reporter;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos/staking/v1beta1/staking.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "layer/reporter/params.proto";
import "layer/reporter/token_origin.proto";

option go_package = "github.com/tellor-io/layer/x/reporter/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // CreateReporter defines a (reporter) operation for creating a new reporter.
  rpc CreateReporter(MsgCreateReporter) returns (MsgCreateReporterResponse);

  // SelectReporter defines a (selector) operation for choosing a reporter.
  rpc SelectReporter(MsgSelectReporter) returns (MsgSelectReporterResponse);

  // SwitchReporter defines a (selector) operation for switching a reporter.
  rpc SwitchReporter(MsgSwitchReporter) returns (MsgSwitchReporterResponse);

  // RemoveSelector defines an operation for removing a selector that no longer meets
  // the reporter's minimum requirements and the reporter is capped.
  rpc RemoveSelector(MsgRemoveSelector) returns (MsgRemoveSelectorResponse);

  // UnjailReporter defines a method to unjail a jailed reporter.
  rpc UnjailReporter(MsgUnjailReporter) returns (MsgUnjailReporterResponse);

  // WithdrawTip defines a method to withdraw tip from a reporter module.
  rpc WithdrawTip(MsgWithdrawTip) returns (MsgWithdrawTipResponse);

}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "layer/x/reporter/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgCreateReporter defines the Msg/CreateReporter request type.
message MsgCreateReporter {
  option (cosmos.msg.v1.signer) = "reporter_address";
  // reporter_address is the address of the reporter.
  string reporter_address = 1;
  string commission_rate = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  string min_tokens_required = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// MsgCreateReporterResponse defines the Msg/CreateReporter response type.
message MsgCreateReporterResponse {}

// MsgSelectReporter defines the Msg/SelectReporter request type.
message MsgSelectReporter {
  option (cosmos.msg.v1.signer) = "selector_address";
  // selector_address is the address of the selector.
  string selector_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // reporter_address is the address of the reporter to select.
  string reporter_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgSelectReporterResponse {}

// MsgSwitchReporter defines the Msg/SwitchReporter request type.
message MsgSwitchReporter {
  option (cosmos.msg.v1.signer) = "selector_address";
  // selector_address is the address of the selector.
  string selector_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // reporter_address is the address of the reporter to switch.
  string reporter_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgSwitchReporterResponse defines the Msg/SwitchReporter response type.
message MsgSwitchReporterResponse {}

// MsgRemoveSelector defines the Msg/RemoveSelector request type.
message MsgRemoveSelector {
  option (cosmos.msg.v1.signer) = "any_address";
  // any_address is the caller which can be any address.
  string any_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // selector_address is the address of the selector.
  string selector_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgRemoveSelectorResponse defines the Msg/RemoveSelector response type.
message MsgRemoveSelectorResponse {}

// MsgUnjailReporter defines the Msg/UnjailReporter request type.
message MsgUnjailReporter {
  option (cosmos.msg.v1.signer) = "reporter_address";
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  string reporter_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgUnjailReporterResponse defines the Msg/UnjailReporter response type.
message MsgUnjailReporterResponse {}

// MsgWithdrawTip defines the Msg/WithdrawTip request type.
message MsgWithdrawTip {
  option (cosmos.msg.v1.signer) = "selector_address";
  string selector_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string validator_address = 2 [(cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
}

// MsgWithdrawTipResponse defines the Msg/WithdrawTip response type.
message MsgWithdrawTipResponse {}