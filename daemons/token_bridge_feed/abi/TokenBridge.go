// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package tokenbridgeabi

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// OracleAttestationData is an auto generated low-level Go binding around an user-defined struct.
type OracleAttestationData struct {
	QueryId              [32]byte
	Report               ReportData
	AttestationTimestamp *big.Int
}

// ReportData is an auto generated low-level Go binding around an user-defined struct.
type ReportData struct {
	Value             []byte
	Timestamp         *big.Int
	AggregatePower    *big.Int
	PreviousTimestamp *big.Int
	NextTimestamp     *big.Int
}

// Signature is an auto generated low-level Go binding around an user-defined struct.
type Signature struct {
	V uint8
	R [32]byte
	S [32]byte
}

// Validator is an auto generated low-level Go binding around an user-defined struct.
type Validator struct {
	Addr  common.Address
	Power *big.Int
}

// TokenBridgeMetaData contains all meta data concerning the TokenBridge contract.
var TokenBridgeMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_blobstream\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tellorFlex\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_recipient\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_sender\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEPOSIT_LIMIT_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPOSIT_LIMIT_UPDATE_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addStakingRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"contractBlobstreamO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"claimExtraWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositLimitRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositLimitUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tip\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_layerRecipient\",\"type\":\"string\"}],\"name\":\"depositToLayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"recipient\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tip\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getDataBefore\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_ifRetrieve\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_value\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getIndexForDataBefore\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_found\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"}],\"name\":\"getNewValueCountbyQueryId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getReporterByTimestamp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeOfLastNewValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTimestampbyQueryIdandIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"isInDispute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tellorFlex\",\"outputs\":[{\"internalType\":\"contractITellorFlex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contractITellorMaster\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aggregatePower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"previousTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"structReportData\",\"name\":\"report\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"attestationTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"structOracleAttestationData\",\"name\":\"_attestData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"internalType\":\"structValidator[]\",\"name\":\"_valset\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSignature[]\",\"name\":\"_sigs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"}],\"name\":\"withdrawFromLayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdrawalClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60a060405260405180602001604052805f815250604051602001620000259190620001f9565b60405160208183030381529060405260405160200162000046919062000279565b604051602081830303815290604052805190602001205f55600560809081525034801562000072575f80fd5b5060405162003b7a38038062003b7a833981810160405281019062000098919062000315565b80838160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200036e565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156200019e57808201518184015260208101905062000181565b5f8484015250505050565b5f601f19601f8301169050919050565b5f620001c58262000165565b620001d181856200016f565b9350620001e38185602086016200017f565b620001ee81620001a9565b840191505092915050565b5f6020820190508181035f830152620002138184620001b9565b905092915050565b5f82825260208201905092915050565b7f54656c6c6f724f7261636c6541646472657373000000000000000000000000005f82015250565b5f620002616013836200021b565b91506200026e826200022b565b602082019050919050565b5f6040820190508181035f830152620002928162000253565b90508181036020830152620002a88184620001b9565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002df82620002b4565b9050919050565b620002f181620002d3565b8114620002fc575f80fd5b50565b5f815190506200030f81620002e6565b92915050565b5f805f606084860312156200032f576200032e620002b0565b5b5f6200033e86828701620002ff565b93505060206200035186828701620002ff565b92505060406200036486828701620002ff565b9150509250925092565b6080516137e5620003955f395f8181610c3a015281816115a30152611b7401526137e55ff3fe608060405234801561000f575f80fd5b5060043610610156575f3560e01c8063c0f95d52116100c1578063e78cea921161007a578063e78cea9214610419578063ecf7085814610437578063f4913c7e14610455578063fa3c06d214610471578063fc0c546a1461048f578063fc735e99146104ad57610156565b8063c0f95d5214610345578063ce5e11bf14610363578063d9c51cd414610393578063e07c5486146103af578063e513730b146103df578063e5d8b9dc146103fd57610156565b806377b03e0d1161011357806377b03e0d146102555780639410e01f146102855780639852099c146102a3578063a792765f146102c1578063b02c43d0146102f3578063b8eed2631461032757610156565b80631d8218541461015a5780631e8683341461018a578063285bbd48146101ba57806329449085146101d657806344e87f9114610207578063604f918f14610237575b5f80fd5b610174600480360381019061016f9190611bf9565b6104cb565b6040516101819190611c3e565b60405180910390f35b6101a4600480360381019061019f9190611cb1565b6104e8565b6040516101b19190611ceb565b60405180910390f35b6101d460048036038101906101cf9190611cb1565b6104fd565b005b6101f060048036038101906101eb9190611d37565b61087d565b6040516101fe929190611d75565b60405180910390f35b610221600480360381019061021c9190611d37565b610924565b60405161022e9190611c3e565b60405180910390f35b61023f6109c8565b60405161024c9190611ceb565b60405180910390f35b61026f600480360381019061026a9190611d9c565b6109ce565b60405161027c9190611ceb565b60405180910390f35b61028d610a6f565b60405161029a9190611ceb565b60405180910390f35b6102ab610a75565b6040516102b89190611ceb565b60405180910390f35b6102db60048036038101906102d69190611d37565b610a7b565b6040516102ea93929190611e51565b60405180910390f35b61030d60048036038101906103089190611bf9565b610b61565b60405161031e959493929190611eee565b60405180910390f35b61032f610c38565b60405161033c9190611ceb565b60405180910390f35b61034d610c5c565b60405161035a9190611ceb565b60405180910390f35b61037d60048036038101906103789190611d37565b610cf0565b60405161038a9190611ceb565b60405180910390f35b6103ad60048036038101906103a89190611bf9565b610d94565b005b6103c960048036038101906103c49190611d37565b610e36565b6040516103d69190611f46565b60405180910390f35b6103e7610eda565b6040516103f49190611fba565b60405180910390f35b610417600480360381019061041291906120ab565b610eff565b005b610421611564565b60405161042e919061218a565b60405180910390f35b61043f611589565b60405161044c9190611ceb565b60405180910390f35b61046f600480360381019061046a91906122cb565b611675565b005b610479611961565b6040516104869190611ceb565b60405180910390f35b610497611967565b6040516104a49190612357565b60405180910390f35b6104b561198c565b6040516104c29190611ceb565b60405180910390f35b6007602052805f5260405f205f915054906101000a900460ff1681565b6008602052805f5260405f205f915090505481565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610580576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610577906123ba565b60405180910390fd5b5f610589611995565b90505f81116105cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612448565b60405180910390fd5b81811015610742578060085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461061e9190612493565b60085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080915060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016106be9291906124c6565b6020604051808303815f875af11580156106da573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106fe9190612517565b61073d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107349061258c565b60405180910390fd5b610860565b5f60085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016107e09291906124c6565b6020604051808303815f875af11580156107fc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108209190612517565b61085f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108569061258c565b60405180910390fd5b5b8160065f8282546108719190612493565b92505081905550505050565b5f8060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632944908585856040518363ffffffff1660e01b81526004016108db9291906125b9565b6040805180830381865afa1580156108f5573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061091991906125f4565b915091509250929050565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344e87f9184846040518363ffffffff1660e01b81526004016109819291906125b9565b602060405180830381865afa15801561099c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109c09190612517565b905092915050565b61a8c081565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166377b03e0d836040518263ffffffff1660e01b8152600401610a299190612632565b602060405180830381865afa158015610a44573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a68919061264b565b9050919050565b60065481565b60045481565b5f60605f80548503610ab557600130604051602001610a9a9190611f46565b60405160208183030381529060405242925092509250610b5a565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a792765f86866040518363ffffffff1660e01b8152600401610b119291906125b9565b5f60405180830381865afa158015610b2b573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190610b539190612714565b9250925092505b9250925092565b6009602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610ba5906127ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd1906127ad565b8015610c1c5780601f10610bf357610100808354040283529160200191610c1c565b820191905f5260205f20905b815481529060010190602001808311610bff57829003601f168201915b5050505050908060020154908060030154908060040154905085565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c0f95d526040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cc7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ceb919061264b565b905090565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5e11bf84846040518363ffffffff1660e01b8152600401610d4d9291906125b9565b602060405180830381865afa158015610d68573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d8c919061264b565b905092915050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610df2939291906127dd565b6020604051808303815f875af1158015610e0e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e329190612517565b5050565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e07c548684846040518363ffffffff1660e01b8152600401610e939291906125b9565b602060405180830381865afa158015610eae573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ed29190612826565b905092915050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f81604051602001610f12929190611d75565b604051602081830303815290604052604051602001610f31919061289b565b60405160208183030381529060405280519060200120865f013514610f8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8290612918565b60405180910390fd5b60075f8281526020019081526020015f205f9054906101000a900460ff1615610fe9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe0906129a6565b60405180910390fd5b61a8c06103e8878060200190610fff91906129d0565b6020013561100d9190612a24565b426110189190612493565b11611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90612ac4565b60405180910390fd5b61a8c06103e8876040013561106d9190612a24565b426110789190612493565b106110b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110af90612b2c565b60405180910390fd5b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635121b26e87878787876040518663ffffffff1660e01b815260040161111a959493929190612fbe565b5f6040518083038186803b158015611130575f80fd5b505afa158015611142573d5f803e3d5ffd5b5050505060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba95ec276040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111b0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111d4919061264b565b8680602001906111e491906129d0565b604001351015611229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611220906130a2565b60405180910390fd5b600160075f8381526020019081526020015f205f6101000a81548160ff0219169083151502179055505f805f88806020019061126591906129d0565b805f019061127391906130c0565b810190611280919061315d565b509250925092505f64e8d4a510008261129991906131dd565b90505f6112a4611995565b9050818110156114265780826112ba9190612493565b60085f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611302919061321e565b60085f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080915060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86846040518363ffffffff1660e01b81526004016113a29291906124c6565b6020604051808303815f875af11580156113be573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113e29190612517565b611421576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114189061258c565b60405180910390fd5b611502565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86846040518363ffffffff1660e01b81526004016114829291906124c6565b6020604051808303815f875af115801561149e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114c29190612517565b611501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f89061258c565b60405180910390fd5b5b8160065f8282546115139190612493565b925050819055507f1c25a916bf61b55f3abb9060e620d13d6937f8c2ab2b7a16be824ffde44acb2f8685878560405161154f9493929190613251565b60405180910390a15050505050505050505050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f61a8c06005544261159b9190612493565b111561166c577f000000000000000000000000000000000000000000000000000000000000000060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161161c9190611f46565b602060405180830381865afa158015611637573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061165b919061264b565b6116659190612a24565b9050611672565b60065490505b90565b5f83116116b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ae9061330b565b60405180910390fd5b6116bf611995565b831115611701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f890613399565b60405180910390fd5b82821115611744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173b90613427565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016117a2939291906127dd565b6020604051808303815f875af11580156117be573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117e29190612517565b611821576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118189061348f565b60405180910390fd5b60045f815480929190611833906134ad565b91905055508260065f8282546118499190612493565b925050819055506040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020018481526020018381526020014381525060095f60045481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816118f99190613688565b506040820151816002015560608201518160030155608082015181600401559050507fe9a436e6735e7a54b0d2505d14247a614f3af68dad813a7a46834b876b13d7c160045433838686604051611954959493929190613757565b60405180910390a1505050565b60055481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f61270f905090565b5f61a8c0600554426119a79190612493565b1115611bad575f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611a089190611f46565b602060405180830381865afa158015611a23573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a47919061264b565b905068056bc75e2d63100000811015611b725760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b67f8cbd6040518163ffffffff1660e01b81526004015f604051808303815f87803b158015611ac0575f80fd5b505af1158015611ad2573d5f803e3d5ffd5b5050505060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611b309190611f46565b602060405180830381865afa158015611b4b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b6f919061264b565b90505b7f000000000000000000000000000000000000000000000000000000000000000081611b9e9190612a24565b60068190555042600581905550505b600654905090565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b611bd881611bc6565b8114611be2575f80fd5b50565b5f81359050611bf381611bcf565b92915050565b5f60208284031215611c0e57611c0d611bbe565b5b5f611c1b84828501611be5565b91505092915050565b5f8115159050919050565b611c3881611c24565b82525050565b5f602082019050611c515f830184611c2f565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c8082611c57565b9050919050565b611c9081611c76565b8114611c9a575f80fd5b50565b5f81359050611cab81611c87565b92915050565b5f60208284031215611cc657611cc5611bbe565b5b5f611cd384828501611c9d565b91505092915050565b611ce581611bc6565b82525050565b5f602082019050611cfe5f830184611cdc565b92915050565b5f819050919050565b611d1681611d04565b8114611d20575f80fd5b50565b5f81359050611d3181611d0d565b92915050565b5f8060408385031215611d4d57611d4c611bbe565b5b5f611d5a85828601611d23565b9250506020611d6b85828601611be5565b9150509250929050565b5f604082019050611d885f830185611c2f565b611d956020830184611cdc565b9392505050565b5f60208284031215611db157611db0611bbe565b5b5f611dbe84828501611d23565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611dfe578082015181840152602081019050611de3565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611e2382611dc7565b611e2d8185611dd1565b9350611e3d818560208601611de1565b611e4681611e09565b840191505092915050565b5f606082019050611e645f830186611c2f565b8181036020830152611e768185611e19565b9050611e856040830184611cdc565b949350505050565b611e9681611c76565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f611ec082611e9c565b611eca8185611ea6565b9350611eda818560208601611de1565b611ee381611e09565b840191505092915050565b5f60a082019050611f015f830188611e8d565b8181036020830152611f138187611eb6565b9050611f226040830186611cdc565b611f2f6060830185611cdc565b611f3c6080830184611cdc565b9695505050505050565b5f602082019050611f595f830184611e8d565b92915050565b5f819050919050565b5f611f82611f7d611f7884611c57565b611f5f565b611c57565b9050919050565b5f611f9382611f68565b9050919050565b5f611fa482611f89565b9050919050565b611fb481611f9a565b82525050565b5f602082019050611fcd5f830184611fab565b92915050565b5f80fd5b5f60608284031215611fec57611feb611fd3565b5b81905092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261201657612015611ff5565b5b8235905067ffffffffffffffff81111561203357612032611ff9565b5b60208301915083604082028301111561204f5761204e611ffd565b5b9250929050565b5f8083601f84011261206b5761206a611ff5565b5b8235905067ffffffffffffffff81111561208857612087611ff9565b5b6020830191508360608202830111156120a4576120a3611ffd565b5b9250929050565b5f805f805f80608087890312156120c5576120c4611bbe565b5b5f87013567ffffffffffffffff8111156120e2576120e1611bc2565b5b6120ee89828a01611fd7565b965050602087013567ffffffffffffffff81111561210f5761210e611bc2565b5b61211b89828a01612001565b9550955050604087013567ffffffffffffffff81111561213e5761213d611bc2565b5b61214a89828a01612056565b9350935050606061215d89828a01611be5565b9150509295509295509295565b5f61217482611f89565b9050919050565b6121848161216a565b82525050565b5f60208201905061219d5f83018461217b565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6121dd82611e09565b810181811067ffffffffffffffff821117156121fc576121fb6121a7565b5b80604052505050565b5f61220e611bb5565b905061221a82826121d4565b919050565b5f67ffffffffffffffff821115612239576122386121a7565b5b61224282611e09565b9050602081019050919050565b828183375f83830152505050565b5f61226f61226a8461221f565b612205565b90508281526020810184848401111561228b5761228a6121a3565b5b61229684828561224f565b509392505050565b5f82601f8301126122b2576122b1611ff5565b5b81356122c284826020860161225d565b91505092915050565b5f805f606084860312156122e2576122e1611bbe565b5b5f6122ef86828701611be5565b935050602061230086828701611be5565b925050604084013567ffffffffffffffff81111561232157612320611bc2565b5b61232d8682870161229e565b9150509250925092565b5f61234182611f89565b9050919050565b61235181612337565b82525050565b5f60208201905061236a5f830184612348565b92915050565b7f616d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f6123a4601283611ea6565b91506123af82612370565b602082019050919050565b5f6020820190508181035f8301526123d181612398565b9050919050565b7f546f6b656e4272696467653a206465706f7369744c696d6974206d75737420625f8201527f65203e2030000000000000000000000000000000000000000000000000000000602082015250565b5f612432602583611ea6565b915061243d826123d8565b604082019050919050565b5f6020820190508181035f83015261245f81612426565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61249d82611bc6565b91506124a883611bc6565b92508282039050818111156124c0576124bf612466565b5b92915050565b5f6040820190506124d95f830185611e8d565b6124e66020830184611cdc565b9392505050565b6124f681611c24565b8114612500575f80fd5b50565b5f81519050612511816124ed565b92915050565b5f6020828403121561252c5761252b611bbe565b5b5f61253984828501612503565b91505092915050565b7f546f6b656e4272696467653a207472616e73666572206661696c6564000000005f82015250565b5f612576601c83611ea6565b915061258182612542565b602082019050919050565b5f6020820190508181035f8301526125a38161256a565b9050919050565b6125b381611d04565b82525050565b5f6040820190506125cc5f8301856125aa565b6125d96020830184611cdc565b9392505050565b5f815190506125ee81611bcf565b92915050565b5f806040838503121561260a57612609611bbe565b5b5f61261785828601612503565b9250506020612628858286016125e0565b9150509250929050565b5f6020820190506126455f8301846125aa565b92915050565b5f602082840312156126605761265f611bbe565b5b5f61266d848285016125e0565b91505092915050565b5f67ffffffffffffffff8211156126905761268f6121a7565b5b61269982611e09565b9050602081019050919050565b5f6126b86126b384612676565b612205565b9050828152602081018484840111156126d4576126d36121a3565b5b6126df848285611de1565b509392505050565b5f82601f8301126126fb576126fa611ff5565b5b815161270b8482602086016126a6565b91505092915050565b5f805f6060848603121561272b5761272a611bbe565b5b5f61273886828701612503565b935050602084015167ffffffffffffffff81111561275957612758611bc2565b5b612765868287016126e7565b9250506040612776868287016125e0565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806127c457607f821691505b6020821081036127d7576127d6612780565b5b50919050565b5f6060820190506127f05f830186611e8d565b6127fd6020830185611e8d565b61280a6040830184611cdc565b949350505050565b5f8151905061282081611c87565b92915050565b5f6020828403121561283b5761283a611bbe565b5b5f61284884828501612812565b91505092915050565b7f54524242726964676500000000000000000000000000000000000000000000005f82015250565b5f612885600983611ea6565b915061289082612851565b602082019050919050565b5f6040820190508181035f8301526128b281612879565b905081810360208301526128c68184611e19565b905092915050565b7f546f6b656e4272696467653a20696e76616c69642071756572794964000000005f82015250565b5f612902601c83611ea6565b915061290d826128ce565b602082019050919050565b5f6020820190508181035f83015261292f816128f6565b9050919050565b7f546f6b656e4272696467653a207769746864726177616c20616c7265616479205f8201527f636c61696d656400000000000000000000000000000000000000000000000000602082015250565b5f612990602783611ea6565b915061299b82612936565b604082019050919050565b5f6020820190508181035f8301526129bd81612984565b9050919050565b5f80fd5b5f80fd5b5f80fd5b5f8235600160a0038336030381126129eb576129ea6129c4565b5b80830191505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612a2e82611bc6565b9150612a3983611bc6565b925082612a4957612a486129f7565b5b828204905092915050565b7f546f6b656e4272696467653a207072656d6174757265206174746573746174695f8201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b5f612aae602283611ea6565b9150612ab982612a54565b604082019050919050565b5f6020820190508181035f830152612adb81612aa2565b9050919050565b7f546f6b656e4272696467653a206174746573746174696f6e20746f6f206f6c645f82015250565b5f612b16602083611ea6565b9150612b2182612ae2565b602082019050919050565b5f6020820190508181035f830152612b4381612b0a565b9050919050565b5f612b586020840184611d23565b905092915050565b612b6981611d04565b82525050565b5f80fd5b5f8235600160a003833603038112612b8e57612b8d612b6f565b5b82810191505092915050565b5f80fd5b5f80fd5b5f8083356001602003843603038112612bbe57612bbd612b6f565b5b83810192508235915060208301925067ffffffffffffffff821115612be657612be5612b9a565b5b600182023603831315612bfc57612bfb612b9e565b5b509250929050565b5f82825260208201905092915050565b5f612c1f8385612c04565b9350612c2c83858461224f565b612c3583611e09565b840190509392505050565b5f612c4e6020840184611be5565b905092915050565b612c5f81611bc6565b82525050565b5f60a08301612c765f840184612ba2565b8583035f870152612c88838284612c14565b92505050612c996020840184612c40565b612ca66020860182612c56565b50612cb46040840184612c40565b612cc16040860182612c56565b50612ccf6060840184612c40565b612cdc6060860182612c56565b50612cea6080840184612c40565b612cf76080860182612c56565b508091505092915050565b5f60608301612d135f840184612b4a565b612d1f5f860182612b60565b50612d2d6020840184612b73565b8482036020860152612d3f8282612c65565b915050612d4f6040840184612c40565b612d5c6040860182612c56565b508091505092915050565b5f82825260208201905092915050565b5f819050919050565b5f612d8e6020840184611c9d565b905092915050565b612d9f81611c76565b82525050565b60408201612db55f830183612d80565b612dc15f850182612d96565b50612dcf6020830183612c40565b612ddc6020850182612c56565b50505050565b5f612ded8383612da5565b60408301905092915050565b5f82905092915050565b5f604082019050919050565b5f612e1a8385612d67565b9350612e2582612d77565b805f5b85811015612e5d57612e3a8284612df9565b612e448882612de2565b9750612e4f83612e03565b925050600181019050612e28565b5085925050509392505050565b5f82825260208201905092915050565b5f819050919050565b5f60ff82169050919050565b612e9881612e83565b8114612ea2575f80fd5b50565b5f81359050612eb381612e8f565b92915050565b5f612ec76020840184612ea5565b905092915050565b612ed881612e83565b82525050565b60608201612eee5f830183612eb9565b612efa5f850182612ecf565b50612f086020830183612b4a565b612f156020850182612b60565b50612f236040830183612b4a565b612f306040850182612b60565b50505050565b5f612f418383612ede565b60608301905092915050565b5f82905092915050565b5f606082019050919050565b5f612f6e8385612e6a565b9350612f7982612e7a565b805f5b85811015612fb157612f8e8284612f4d565b612f988882612f36565b9750612fa383612f57565b925050600181019050612f7c565b5085925050509392505050565b5f6060820190508181035f830152612fd68188612d02565b90508181036020830152612feb818688612e0f565b90508181036040830152613000818486612f63565b90509695505050505050565b7f5265706f72742061676772656761746520706f776572206d75737420626520675f8201527f726561746572207468616e206f7220657175616c20746f205f6d696e696d756d60208201527f506f776572000000000000000000000000000000000000000000000000000000604082015250565b5f61308c604583611ea6565b91506130978261300c565b606082019050919050565b5f6020820190508181035f8301526130b981613080565b9050919050565b5f80833560016020038436030381126130dc576130db6129c4565b5b80840192508235915067ffffffffffffffff8211156130fe576130fd6129c8565b5b60208301925060018202360383131561311a576131196129cc565b5b509250929050565b5f61312c82611c57565b9050919050565b61313c81613122565b8114613146575f80fd5b50565b5f8135905061315781613133565b92915050565b5f805f806080858703121561317557613174611bbe565b5b5f61318287828801613149565b945050602085013567ffffffffffffffff8111156131a3576131a2611bc2565b5b6131af8782880161229e565b93505060406131c087828801611be5565b92505060606131d187828801611be5565b91505092959194509250565b5f6131e782611bc6565b91506131f283611bc6565b925082820261320081611bc6565b9150828204841483151761321757613216612466565b5b5092915050565b5f61322882611bc6565b915061323383611bc6565b925082820190508082111561324b5761324a612466565b5b92915050565b5f6080820190506132645f830187611cdc565b81810360208301526132768186611eb6565b90506132856040830185611e8d565b6132926060830184611cdc565b95945050505050565b7f546f6b656e4272696467653a20616d6f756e74206d75737420626520677265615f8201527f746572207468616e203000000000000000000000000000000000000000000000602082015250565b5f6132f5602a83611ea6565b91506133008261329b565b604082019050919050565b5f6020820190508181035f830152613322816132e9565b9050919050565b7f546f6b656e4272696467653a20616d6f756e742065786365656473206465706f5f8201527f736974206c696d697420666f722074696d6520706572696f6400000000000000602082015250565b5f613383603983611ea6565b915061338e82613329565b604082019050919050565b5f6020820190508181035f8301526133b081613377565b9050919050565b7f546f6b656e4272696467653a20746970206d757374206265206c6573732074685f8201527f616e206f7220657175616c20746f20616d6f756e740000000000000000000000602082015250565b5f613411603583611ea6565b915061341c826133b7565b604082019050919050565b5f6020820190508181035f83015261343e81613405565b9050919050565b7f546f6b656e4272696467653a207472616e7366657246726f6d206661696c65645f82015250565b5f613479602083611ea6565b915061348482613445565b602082019050919050565b5f6020820190508181035f8301526134a68161346d565b9050919050565b5f6134b782611bc6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036134e9576134e8612466565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026135507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613515565b61355a8683613515565b95508019841693508086168417925050509392505050565b5f61358c61358761358284611bc6565b611f5f565b611bc6565b9050919050565b5f819050919050565b6135a583613572565b6135b96135b182613593565b848454613521565b825550505050565b5f90565b6135cd6135c1565b6135d881848461359c565b505050565b5b818110156135fb576135f05f826135c5565b6001810190506135de565b5050565b601f82111561364057613611816134f4565b61361a84613506565b81016020851015613629578190505b61363d61363585613506565b8301826135dd565b50505b505050565b5f82821c905092915050565b5f6136605f1984600802613645565b1980831691505092915050565b5f6136788383613651565b9150826002028217905092915050565b61369182611e9c565b67ffffffffffffffff8111156136aa576136a96121a7565b5b6136b482546127ad565b6136bf8282856135ff565b5f60209050601f8311600181146136f0575f84156136de578287015190505b6136e8858261366d565b86555061374f565b601f1984166136fe866134f4565b5f5b8281101561372557848901518255600182019150602085019450602081019050613700565b86831015613742578489015161373e601f891682613651565b8355505b6001600288020188555050505b505050505050565b5f60a08201905061376a5f830188611cdc565b6137776020830187611e8d565b81810360408301526137898186611eb6565b90506137986060830185611cdc565b6137a56080830184611cdc565b969550505050505056fea2646970667358221220ac3dd7dffa2da8b3fd2c77ccf98545f69c265e46a14d92e5fea4dbeab9804d1764736f6c63430008160033",
}

// TokenBridgeABI is the input ABI used to generate the binding from.
// Deprecated: Use TokenBridgeMetaData.ABI instead.
var TokenBridgeABI = TokenBridgeMetaData.ABI

// TokenBridgeBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use TokenBridgeMetaData.Bin instead.
var TokenBridgeBin = TokenBridgeMetaData.Bin

// DeployTokenBridge deploys a new Ethereum contract, binding an instance of TokenBridge to it.
func DeployTokenBridge(auth *bind.TransactOpts, backend bind.ContractBackend, _token common.Address, _blobstream common.Address, _tellorFlex common.Address) (common.Address, *types.Transaction, *TokenBridge, error) {
	parsed, err := TokenBridgeMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(TokenBridgeBin), backend, _token, _blobstream, _tellorFlex)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &TokenBridge{TokenBridgeCaller: TokenBridgeCaller{contract: contract}, TokenBridgeTransactor: TokenBridgeTransactor{contract: contract}, TokenBridgeFilterer: TokenBridgeFilterer{contract: contract}}, nil
}

// TokenBridge is an auto generated Go binding around an Ethereum contract.
type TokenBridge struct {
	TokenBridgeCaller     // Read-only binding to the contract
	TokenBridgeTransactor // Write-only binding to the contract
	TokenBridgeFilterer   // Log filterer for contract events
}

// TokenBridgeCaller is an auto generated read-only Go binding around an Ethereum contract.
type TokenBridgeCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenBridgeTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TokenBridgeTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenBridgeFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TokenBridgeFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenBridgeSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TokenBridgeSession struct {
	Contract     *TokenBridge      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TokenBridgeCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TokenBridgeCallerSession struct {
	Contract *TokenBridgeCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// TokenBridgeTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TokenBridgeTransactorSession struct {
	Contract     *TokenBridgeTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// TokenBridgeRaw is an auto generated low-level Go binding around an Ethereum contract.
type TokenBridgeRaw struct {
	Contract *TokenBridge // Generic contract binding to access the raw methods on
}

// TokenBridgeCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TokenBridgeCallerRaw struct {
	Contract *TokenBridgeCaller // Generic read-only contract binding to access the raw methods on
}

// TokenBridgeTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TokenBridgeTransactorRaw struct {
	Contract *TokenBridgeTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTokenBridge creates a new instance of TokenBridge, bound to a specific deployed contract.
func NewTokenBridge(address common.Address, backend bind.ContractBackend) (*TokenBridge, error) {
	contract, err := bindTokenBridge(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &TokenBridge{TokenBridgeCaller: TokenBridgeCaller{contract: contract}, TokenBridgeTransactor: TokenBridgeTransactor{contract: contract}, TokenBridgeFilterer: TokenBridgeFilterer{contract: contract}}, nil
}

// NewTokenBridgeCaller creates a new read-only instance of TokenBridge, bound to a specific deployed contract.
func NewTokenBridgeCaller(address common.Address, caller bind.ContractCaller) (*TokenBridgeCaller, error) {
	contract, err := bindTokenBridge(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TokenBridgeCaller{contract: contract}, nil
}

// NewTokenBridgeTransactor creates a new write-only instance of TokenBridge, bound to a specific deployed contract.
func NewTokenBridgeTransactor(address common.Address, transactor bind.ContractTransactor) (*TokenBridgeTransactor, error) {
	contract, err := bindTokenBridge(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TokenBridgeTransactor{contract: contract}, nil
}

// NewTokenBridgeFilterer creates a new log filterer instance of TokenBridge, bound to a specific deployed contract.
func NewTokenBridgeFilterer(address common.Address, filterer bind.ContractFilterer) (*TokenBridgeFilterer, error) {
	contract, err := bindTokenBridge(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TokenBridgeFilterer{contract: contract}, nil
}

// bindTokenBridge binds a generic wrapper to an already deployed contract.
func bindTokenBridge(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := TokenBridgeMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TokenBridge *TokenBridgeRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TokenBridge.Contract.TokenBridgeCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TokenBridge *TokenBridgeRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TokenBridge.Contract.TokenBridgeTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TokenBridge *TokenBridgeRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TokenBridge.Contract.TokenBridgeTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TokenBridge *TokenBridgeCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TokenBridge.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TokenBridge *TokenBridgeTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TokenBridge.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TokenBridge *TokenBridgeTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TokenBridge.Contract.contract.Transact(opts, method, params...)
}

// DEPOSITLIMITDENOMINATOR is a free data retrieval call binding the contract method 0xb8eed263.
//
// Solidity: function DEPOSIT_LIMIT_DENOMINATOR() view returns(uint256)
func (_TokenBridge *TokenBridgeCaller) DEPOSITLIMITDENOMINATOR(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "DEPOSIT_LIMIT_DENOMINATOR")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// DEPOSITLIMITDENOMINATOR is a free data retrieval call binding the contract method 0xb8eed263.
//
// Solidity: function DEPOSIT_LIMIT_DENOMINATOR() view returns(uint256)
func (_TokenBridge *TokenBridgeSession) DEPOSITLIMITDENOMINATOR() (*big.Int, error) {
	return _TokenBridge.Contract.DEPOSITLIMITDENOMINATOR(&_TokenBridge.CallOpts)
}

// DEPOSITLIMITDENOMINATOR is a free data retrieval call binding the contract method 0xb8eed263.
//
// Solidity: function DEPOSIT_LIMIT_DENOMINATOR() view returns(uint256)
func (_TokenBridge *TokenBridgeCallerSession) DEPOSITLIMITDENOMINATOR() (*big.Int, error) {
	return _TokenBridge.Contract.DEPOSITLIMITDENOMINATOR(&_TokenBridge.CallOpts)
}

// DEPOSITLIMITUPDATEINTERVAL is a free data retrieval call binding the contract method 0x604f918f.
//
// Solidity: function DEPOSIT_LIMIT_UPDATE_INTERVAL() view returns(uint256)
func (_TokenBridge *TokenBridgeCaller) DEPOSITLIMITUPDATEINTERVAL(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "DEPOSIT_LIMIT_UPDATE_INTERVAL")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// DEPOSITLIMITUPDATEINTERVAL is a free data retrieval call binding the contract method 0x604f918f.
//
// Solidity: function DEPOSIT_LIMIT_UPDATE_INTERVAL() view returns(uint256)
func (_TokenBridge *TokenBridgeSession) DEPOSITLIMITUPDATEINTERVAL() (*big.Int, error) {
	return _TokenBridge.Contract.DEPOSITLIMITUPDATEINTERVAL(&_TokenBridge.CallOpts)
}

// DEPOSITLIMITUPDATEINTERVAL is a free data retrieval call binding the contract method 0x604f918f.
//
// Solidity: function DEPOSIT_LIMIT_UPDATE_INTERVAL() view returns(uint256)
func (_TokenBridge *TokenBridgeCallerSession) DEPOSITLIMITUPDATEINTERVAL() (*big.Int, error) {
	return _TokenBridge.Contract.DEPOSITLIMITUPDATEINTERVAL(&_TokenBridge.CallOpts)
}

// Bridge is a free data retrieval call binding the contract method 0xe78cea92.
//
// Solidity: function bridge() view returns(address)
func (_TokenBridge *TokenBridgeCaller) Bridge(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "bridge")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Bridge is a free data retrieval call binding the contract method 0xe78cea92.
//
// Solidity: function bridge() view returns(address)
func (_TokenBridge *TokenBridgeSession) Bridge() (common.Address, error) {
	return _TokenBridge.Contract.Bridge(&_TokenBridge.CallOpts)
}

// Bridge is a free data retrieval call binding the contract method 0xe78cea92.
//
// Solidity: function bridge() view returns(address)
func (_TokenBridge *TokenBridgeCallerSession) Bridge() (common.Address, error) {
	return _TokenBridge.Contract.Bridge(&_TokenBridge.CallOpts)
}

// DepositId is a free data retrieval call binding the contract method 0x9852099c.
//
// Solidity: function depositId() view returns(uint256)
func (_TokenBridge *TokenBridgeCaller) DepositId(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "depositId")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// DepositId is a free data retrieval call binding the contract method 0x9852099c.
//
// Solidity: function depositId() view returns(uint256)
func (_TokenBridge *TokenBridgeSession) DepositId() (*big.Int, error) {
	return _TokenBridge.Contract.DepositId(&_TokenBridge.CallOpts)
}

// DepositId is a free data retrieval call binding the contract method 0x9852099c.
//
// Solidity: function depositId() view returns(uint256)
func (_TokenBridge *TokenBridgeCallerSession) DepositId() (*big.Int, error) {
	return _TokenBridge.Contract.DepositId(&_TokenBridge.CallOpts)
}

// DepositLimit is a free data retrieval call binding the contract method 0xecf70858.
//
// Solidity: function depositLimit() view returns(uint256)
func (_TokenBridge *TokenBridgeCaller) DepositLimit(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "depositLimit")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// DepositLimit is a free data retrieval call binding the contract method 0xecf70858.
//
// Solidity: function depositLimit() view returns(uint256)
func (_TokenBridge *TokenBridgeSession) DepositLimit() (*big.Int, error) {
	return _TokenBridge.Contract.DepositLimit(&_TokenBridge.CallOpts)
}

// DepositLimit is a free data retrieval call binding the contract method 0xecf70858.
//
// Solidity: function depositLimit() view returns(uint256)
func (_TokenBridge *TokenBridgeCallerSession) DepositLimit() (*big.Int, error) {
	return _TokenBridge.Contract.DepositLimit(&_TokenBridge.CallOpts)
}

// DepositLimitRecord is a free data retrieval call binding the contract method 0x9410e01f.
//
// Solidity: function depositLimitRecord() view returns(uint256)
func (_TokenBridge *TokenBridgeCaller) DepositLimitRecord(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "depositLimitRecord")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// DepositLimitRecord is a free data retrieval call binding the contract method 0x9410e01f.
//
// Solidity: function depositLimitRecord() view returns(uint256)
func (_TokenBridge *TokenBridgeSession) DepositLimitRecord() (*big.Int, error) {
	return _TokenBridge.Contract.DepositLimitRecord(&_TokenBridge.CallOpts)
}

// DepositLimitRecord is a free data retrieval call binding the contract method 0x9410e01f.
//
// Solidity: function depositLimitRecord() view returns(uint256)
func (_TokenBridge *TokenBridgeCallerSession) DepositLimitRecord() (*big.Int, error) {
	return _TokenBridge.Contract.DepositLimitRecord(&_TokenBridge.CallOpts)
}

// DepositLimitUpdateTime is a free data retrieval call binding the contract method 0xfa3c06d2.
//
// Solidity: function depositLimitUpdateTime() view returns(uint256)
func (_TokenBridge *TokenBridgeCaller) DepositLimitUpdateTime(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "depositLimitUpdateTime")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// DepositLimitUpdateTime is a free data retrieval call binding the contract method 0xfa3c06d2.
//
// Solidity: function depositLimitUpdateTime() view returns(uint256)
func (_TokenBridge *TokenBridgeSession) DepositLimitUpdateTime() (*big.Int, error) {
	return _TokenBridge.Contract.DepositLimitUpdateTime(&_TokenBridge.CallOpts)
}

// DepositLimitUpdateTime is a free data retrieval call binding the contract method 0xfa3c06d2.
//
// Solidity: function depositLimitUpdateTime() view returns(uint256)
func (_TokenBridge *TokenBridgeCallerSession) DepositLimitUpdateTime() (*big.Int, error) {
	return _TokenBridge.Contract.DepositLimitUpdateTime(&_TokenBridge.CallOpts)
}

// Deposits is a free data retrieval call binding the contract method 0xb02c43d0.
//
// Solidity: function deposits(uint256 ) view returns(address sender, string recipient, uint256 amount, uint256 tip, uint256 blockHeight)
func (_TokenBridge *TokenBridgeCaller) Deposits(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Sender      common.Address
	Recipient   string
	Amount      *big.Int
	Tip         *big.Int
	BlockHeight *big.Int
}, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "deposits", arg0)

	outstruct := new(struct {
		Sender      common.Address
		Recipient   string
		Amount      *big.Int
		Tip         *big.Int
		BlockHeight *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Sender = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.Recipient = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.Amount = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.Tip = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.BlockHeight = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// Deposits is a free data retrieval call binding the contract method 0xb02c43d0.
//
// Solidity: function deposits(uint256 ) view returns(address sender, string recipient, uint256 amount, uint256 tip, uint256 blockHeight)
func (_TokenBridge *TokenBridgeSession) Deposits(arg0 *big.Int) (struct {
	Sender      common.Address
	Recipient   string
	Amount      *big.Int
	Tip         *big.Int
	BlockHeight *big.Int
}, error) {
	return _TokenBridge.Contract.Deposits(&_TokenBridge.CallOpts, arg0)
}

// Deposits is a free data retrieval call binding the contract method 0xb02c43d0.
//
// Solidity: function deposits(uint256 ) view returns(address sender, string recipient, uint256 amount, uint256 tip, uint256 blockHeight)
func (_TokenBridge *TokenBridgeCallerSession) Deposits(arg0 *big.Int) (struct {
	Sender      common.Address
	Recipient   string
	Amount      *big.Int
	Tip         *big.Int
	BlockHeight *big.Int
}, error) {
	return _TokenBridge.Contract.Deposits(&_TokenBridge.CallOpts, arg0)
}

// GetDataBefore is a free data retrieval call binding the contract method 0xa792765f.
//
// Solidity: function getDataBefore(bytes32 _queryId, uint256 _timestamp) view returns(bool _ifRetrieve, bytes _value, uint256 _timestampRetrieved)
func (_TokenBridge *TokenBridgeCaller) GetDataBefore(opts *bind.CallOpts, _queryId [32]byte, _timestamp *big.Int) (struct {
	IfRetrieve         bool
	Value              []byte
	TimestampRetrieved *big.Int
}, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "getDataBefore", _queryId, _timestamp)

	outstruct := new(struct {
		IfRetrieve         bool
		Value              []byte
		TimestampRetrieved *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.IfRetrieve = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.Value = *abi.ConvertType(out[1], new([]byte)).(*[]byte)
	outstruct.TimestampRetrieved = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// GetDataBefore is a free data retrieval call binding the contract method 0xa792765f.
//
// Solidity: function getDataBefore(bytes32 _queryId, uint256 _timestamp) view returns(bool _ifRetrieve, bytes _value, uint256 _timestampRetrieved)
func (_TokenBridge *TokenBridgeSession) GetDataBefore(_queryId [32]byte, _timestamp *big.Int) (struct {
	IfRetrieve         bool
	Value              []byte
	TimestampRetrieved *big.Int
}, error) {
	return _TokenBridge.Contract.GetDataBefore(&_TokenBridge.CallOpts, _queryId, _timestamp)
}

// GetDataBefore is a free data retrieval call binding the contract method 0xa792765f.
//
// Solidity: function getDataBefore(bytes32 _queryId, uint256 _timestamp) view returns(bool _ifRetrieve, bytes _value, uint256 _timestampRetrieved)
func (_TokenBridge *TokenBridgeCallerSession) GetDataBefore(_queryId [32]byte, _timestamp *big.Int) (struct {
	IfRetrieve         bool
	Value              []byte
	TimestampRetrieved *big.Int
}, error) {
	return _TokenBridge.Contract.GetDataBefore(&_TokenBridge.CallOpts, _queryId, _timestamp)
}

// GetIndexForDataBefore is a free data retrieval call binding the contract method 0x29449085.
//
// Solidity: function getIndexForDataBefore(bytes32 _queryId, uint256 _timestamp) view returns(bool _found, uint256 _index)
func (_TokenBridge *TokenBridgeCaller) GetIndexForDataBefore(opts *bind.CallOpts, _queryId [32]byte, _timestamp *big.Int) (struct {
	Found bool
	Index *big.Int
}, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "getIndexForDataBefore", _queryId, _timestamp)

	outstruct := new(struct {
		Found bool
		Index *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Found = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.Index = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// GetIndexForDataBefore is a free data retrieval call binding the contract method 0x29449085.
//
// Solidity: function getIndexForDataBefore(bytes32 _queryId, uint256 _timestamp) view returns(bool _found, uint256 _index)
func (_TokenBridge *TokenBridgeSession) GetIndexForDataBefore(_queryId [32]byte, _timestamp *big.Int) (struct {
	Found bool
	Index *big.Int
}, error) {
	return _TokenBridge.Contract.GetIndexForDataBefore(&_TokenBridge.CallOpts, _queryId, _timestamp)
}

// GetIndexForDataBefore is a free data retrieval call binding the contract method 0x29449085.
//
// Solidity: function getIndexForDataBefore(bytes32 _queryId, uint256 _timestamp) view returns(bool _found, uint256 _index)
func (_TokenBridge *TokenBridgeCallerSession) GetIndexForDataBefore(_queryId [32]byte, _timestamp *big.Int) (struct {
	Found bool
	Index *big.Int
}, error) {
	return _TokenBridge.Contract.GetIndexForDataBefore(&_TokenBridge.CallOpts, _queryId, _timestamp)
}

// GetNewValueCountbyQueryId is a free data retrieval call binding the contract method 0x77b03e0d.
//
// Solidity: function getNewValueCountbyQueryId(bytes32 _queryId) view returns(uint256)
func (_TokenBridge *TokenBridgeCaller) GetNewValueCountbyQueryId(opts *bind.CallOpts, _queryId [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "getNewValueCountbyQueryId", _queryId)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetNewValueCountbyQueryId is a free data retrieval call binding the contract method 0x77b03e0d.
//
// Solidity: function getNewValueCountbyQueryId(bytes32 _queryId) view returns(uint256)
func (_TokenBridge *TokenBridgeSession) GetNewValueCountbyQueryId(_queryId [32]byte) (*big.Int, error) {
	return _TokenBridge.Contract.GetNewValueCountbyQueryId(&_TokenBridge.CallOpts, _queryId)
}

// GetNewValueCountbyQueryId is a free data retrieval call binding the contract method 0x77b03e0d.
//
// Solidity: function getNewValueCountbyQueryId(bytes32 _queryId) view returns(uint256)
func (_TokenBridge *TokenBridgeCallerSession) GetNewValueCountbyQueryId(_queryId [32]byte) (*big.Int, error) {
	return _TokenBridge.Contract.GetNewValueCountbyQueryId(&_TokenBridge.CallOpts, _queryId)
}

// GetReporterByTimestamp is a free data retrieval call binding the contract method 0xe07c5486.
//
// Solidity: function getReporterByTimestamp(bytes32 _queryId, uint256 _timestamp) view returns(address)
func (_TokenBridge *TokenBridgeCaller) GetReporterByTimestamp(opts *bind.CallOpts, _queryId [32]byte, _timestamp *big.Int) (common.Address, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "getReporterByTimestamp", _queryId, _timestamp)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetReporterByTimestamp is a free data retrieval call binding the contract method 0xe07c5486.
//
// Solidity: function getReporterByTimestamp(bytes32 _queryId, uint256 _timestamp) view returns(address)
func (_TokenBridge *TokenBridgeSession) GetReporterByTimestamp(_queryId [32]byte, _timestamp *big.Int) (common.Address, error) {
	return _TokenBridge.Contract.GetReporterByTimestamp(&_TokenBridge.CallOpts, _queryId, _timestamp)
}

// GetReporterByTimestamp is a free data retrieval call binding the contract method 0xe07c5486.
//
// Solidity: function getReporterByTimestamp(bytes32 _queryId, uint256 _timestamp) view returns(address)
func (_TokenBridge *TokenBridgeCallerSession) GetReporterByTimestamp(_queryId [32]byte, _timestamp *big.Int) (common.Address, error) {
	return _TokenBridge.Contract.GetReporterByTimestamp(&_TokenBridge.CallOpts, _queryId, _timestamp)
}

// GetTimeOfLastNewValue is a free data retrieval call binding the contract method 0xc0f95d52.
//
// Solidity: function getTimeOfLastNewValue() view returns(uint256)
func (_TokenBridge *TokenBridgeCaller) GetTimeOfLastNewValue(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "getTimeOfLastNewValue")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTimeOfLastNewValue is a free data retrieval call binding the contract method 0xc0f95d52.
//
// Solidity: function getTimeOfLastNewValue() view returns(uint256)
func (_TokenBridge *TokenBridgeSession) GetTimeOfLastNewValue() (*big.Int, error) {
	return _TokenBridge.Contract.GetTimeOfLastNewValue(&_TokenBridge.CallOpts)
}

// GetTimeOfLastNewValue is a free data retrieval call binding the contract method 0xc0f95d52.
//
// Solidity: function getTimeOfLastNewValue() view returns(uint256)
func (_TokenBridge *TokenBridgeCallerSession) GetTimeOfLastNewValue() (*big.Int, error) {
	return _TokenBridge.Contract.GetTimeOfLastNewValue(&_TokenBridge.CallOpts)
}

// GetTimestampbyQueryIdandIndex is a free data retrieval call binding the contract method 0xce5e11bf.
//
// Solidity: function getTimestampbyQueryIdandIndex(bytes32 _queryId, uint256 _index) view returns(uint256)
func (_TokenBridge *TokenBridgeCaller) GetTimestampbyQueryIdandIndex(opts *bind.CallOpts, _queryId [32]byte, _index *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "getTimestampbyQueryIdandIndex", _queryId, _index)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTimestampbyQueryIdandIndex is a free data retrieval call binding the contract method 0xce5e11bf.
//
// Solidity: function getTimestampbyQueryIdandIndex(bytes32 _queryId, uint256 _index) view returns(uint256)
func (_TokenBridge *TokenBridgeSession) GetTimestampbyQueryIdandIndex(_queryId [32]byte, _index *big.Int) (*big.Int, error) {
	return _TokenBridge.Contract.GetTimestampbyQueryIdandIndex(&_TokenBridge.CallOpts, _queryId, _index)
}

// GetTimestampbyQueryIdandIndex is a free data retrieval call binding the contract method 0xce5e11bf.
//
// Solidity: function getTimestampbyQueryIdandIndex(bytes32 _queryId, uint256 _index) view returns(uint256)
func (_TokenBridge *TokenBridgeCallerSession) GetTimestampbyQueryIdandIndex(_queryId [32]byte, _index *big.Int) (*big.Int, error) {
	return _TokenBridge.Contract.GetTimestampbyQueryIdandIndex(&_TokenBridge.CallOpts, _queryId, _index)
}

// IsInDispute is a free data retrieval call binding the contract method 0x44e87f91.
//
// Solidity: function isInDispute(bytes32 _queryId, uint256 _timestamp) view returns(bool)
func (_TokenBridge *TokenBridgeCaller) IsInDispute(opts *bind.CallOpts, _queryId [32]byte, _timestamp *big.Int) (bool, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "isInDispute", _queryId, _timestamp)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsInDispute is a free data retrieval call binding the contract method 0x44e87f91.
//
// Solidity: function isInDispute(bytes32 _queryId, uint256 _timestamp) view returns(bool)
func (_TokenBridge *TokenBridgeSession) IsInDispute(_queryId [32]byte, _timestamp *big.Int) (bool, error) {
	return _TokenBridge.Contract.IsInDispute(&_TokenBridge.CallOpts, _queryId, _timestamp)
}

// IsInDispute is a free data retrieval call binding the contract method 0x44e87f91.
//
// Solidity: function isInDispute(bytes32 _queryId, uint256 _timestamp) view returns(bool)
func (_TokenBridge *TokenBridgeCallerSession) IsInDispute(_queryId [32]byte, _timestamp *big.Int) (bool, error) {
	return _TokenBridge.Contract.IsInDispute(&_TokenBridge.CallOpts, _queryId, _timestamp)
}

// TellorFlex is a free data retrieval call binding the contract method 0xe513730b.
//
// Solidity: function tellorFlex() view returns(address)
func (_TokenBridge *TokenBridgeCaller) TellorFlex(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "tellorFlex")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TellorFlex is a free data retrieval call binding the contract method 0xe513730b.
//
// Solidity: function tellorFlex() view returns(address)
func (_TokenBridge *TokenBridgeSession) TellorFlex() (common.Address, error) {
	return _TokenBridge.Contract.TellorFlex(&_TokenBridge.CallOpts)
}

// TellorFlex is a free data retrieval call binding the contract method 0xe513730b.
//
// Solidity: function tellorFlex() view returns(address)
func (_TokenBridge *TokenBridgeCallerSession) TellorFlex() (common.Address, error) {
	return _TokenBridge.Contract.TellorFlex(&_TokenBridge.CallOpts)
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_TokenBridge *TokenBridgeCaller) Token(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "token")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_TokenBridge *TokenBridgeSession) Token() (common.Address, error) {
	return _TokenBridge.Contract.Token(&_TokenBridge.CallOpts)
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_TokenBridge *TokenBridgeCallerSession) Token() (common.Address, error) {
	return _TokenBridge.Contract.Token(&_TokenBridge.CallOpts)
}

// TokensToClaim is a free data retrieval call binding the contract method 0x1e868334.
//
// Solidity: function tokensToClaim(address ) view returns(uint256)
func (_TokenBridge *TokenBridgeCaller) TokensToClaim(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "tokensToClaim", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TokensToClaim is a free data retrieval call binding the contract method 0x1e868334.
//
// Solidity: function tokensToClaim(address ) view returns(uint256)
func (_TokenBridge *TokenBridgeSession) TokensToClaim(arg0 common.Address) (*big.Int, error) {
	return _TokenBridge.Contract.TokensToClaim(&_TokenBridge.CallOpts, arg0)
}

// TokensToClaim is a free data retrieval call binding the contract method 0x1e868334.
//
// Solidity: function tokensToClaim(address ) view returns(uint256)
func (_TokenBridge *TokenBridgeCallerSession) TokensToClaim(arg0 common.Address) (*big.Int, error) {
	return _TokenBridge.Contract.TokensToClaim(&_TokenBridge.CallOpts, arg0)
}

// Verify is a free data retrieval call binding the contract method 0xfc735e99.
//
// Solidity: function verify() pure returns(uint256)
func (_TokenBridge *TokenBridgeCaller) Verify(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "verify")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Verify is a free data retrieval call binding the contract method 0xfc735e99.
//
// Solidity: function verify() pure returns(uint256)
func (_TokenBridge *TokenBridgeSession) Verify() (*big.Int, error) {
	return _TokenBridge.Contract.Verify(&_TokenBridge.CallOpts)
}

// Verify is a free data retrieval call binding the contract method 0xfc735e99.
//
// Solidity: function verify() pure returns(uint256)
func (_TokenBridge *TokenBridgeCallerSession) Verify() (*big.Int, error) {
	return _TokenBridge.Contract.Verify(&_TokenBridge.CallOpts)
}

// WithdrawalClaimed is a free data retrieval call binding the contract method 0x1d821854.
//
// Solidity: function withdrawalClaimed(uint256 ) view returns(bool)
func (_TokenBridge *TokenBridgeCaller) WithdrawalClaimed(opts *bind.CallOpts, arg0 *big.Int) (bool, error) {
	var out []interface{}
	err := _TokenBridge.contract.Call(opts, &out, "withdrawalClaimed", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// WithdrawalClaimed is a free data retrieval call binding the contract method 0x1d821854.
//
// Solidity: function withdrawalClaimed(uint256 ) view returns(bool)
func (_TokenBridge *TokenBridgeSession) WithdrawalClaimed(arg0 *big.Int) (bool, error) {
	return _TokenBridge.Contract.WithdrawalClaimed(&_TokenBridge.CallOpts, arg0)
}

// WithdrawalClaimed is a free data retrieval call binding the contract method 0x1d821854.
//
// Solidity: function withdrawalClaimed(uint256 ) view returns(bool)
func (_TokenBridge *TokenBridgeCallerSession) WithdrawalClaimed(arg0 *big.Int) (bool, error) {
	return _TokenBridge.Contract.WithdrawalClaimed(&_TokenBridge.CallOpts, arg0)
}

// AddStakingRewards is a paid mutator transaction binding the contract method 0xd9c51cd4.
//
// Solidity: function addStakingRewards(uint256 _amount) returns()
func (_TokenBridge *TokenBridgeTransactor) AddStakingRewards(opts *bind.TransactOpts, _amount *big.Int) (*types.Transaction, error) {
	return _TokenBridge.contract.Transact(opts, "addStakingRewards", _amount)
}

// AddStakingRewards is a paid mutator transaction binding the contract method 0xd9c51cd4.
//
// Solidity: function addStakingRewards(uint256 _amount) returns()
func (_TokenBridge *TokenBridgeSession) AddStakingRewards(_amount *big.Int) (*types.Transaction, error) {
	return _TokenBridge.Contract.AddStakingRewards(&_TokenBridge.TransactOpts, _amount)
}

// AddStakingRewards is a paid mutator transaction binding the contract method 0xd9c51cd4.
//
// Solidity: function addStakingRewards(uint256 _amount) returns()
func (_TokenBridge *TokenBridgeTransactorSession) AddStakingRewards(_amount *big.Int) (*types.Transaction, error) {
	return _TokenBridge.Contract.AddStakingRewards(&_TokenBridge.TransactOpts, _amount)
}

// ClaimExtraWithdraw is a paid mutator transaction binding the contract method 0x285bbd48.
//
// Solidity: function claimExtraWithdraw(address _recipient) returns()
func (_TokenBridge *TokenBridgeTransactor) ClaimExtraWithdraw(opts *bind.TransactOpts, _recipient common.Address) (*types.Transaction, error) {
	return _TokenBridge.contract.Transact(opts, "claimExtraWithdraw", _recipient)
}

// ClaimExtraWithdraw is a paid mutator transaction binding the contract method 0x285bbd48.
//
// Solidity: function claimExtraWithdraw(address _recipient) returns()
func (_TokenBridge *TokenBridgeSession) ClaimExtraWithdraw(_recipient common.Address) (*types.Transaction, error) {
	return _TokenBridge.Contract.ClaimExtraWithdraw(&_TokenBridge.TransactOpts, _recipient)
}

// ClaimExtraWithdraw is a paid mutator transaction binding the contract method 0x285bbd48.
//
// Solidity: function claimExtraWithdraw(address _recipient) returns()
func (_TokenBridge *TokenBridgeTransactorSession) ClaimExtraWithdraw(_recipient common.Address) (*types.Transaction, error) {
	return _TokenBridge.Contract.ClaimExtraWithdraw(&_TokenBridge.TransactOpts, _recipient)
}

// DepositToLayer is a paid mutator transaction binding the contract method 0xf4913c7e.
//
// Solidity: function depositToLayer(uint256 _amount, uint256 _tip, string _layerRecipient) returns()
func (_TokenBridge *TokenBridgeTransactor) DepositToLayer(opts *bind.TransactOpts, _amount *big.Int, _tip *big.Int, _layerRecipient string) (*types.Transaction, error) {
	return _TokenBridge.contract.Transact(opts, "depositToLayer", _amount, _tip, _layerRecipient)
}

// DepositToLayer is a paid mutator transaction binding the contract method 0xf4913c7e.
//
// Solidity: function depositToLayer(uint256 _amount, uint256 _tip, string _layerRecipient) returns()
func (_TokenBridge *TokenBridgeSession) DepositToLayer(_amount *big.Int, _tip *big.Int, _layerRecipient string) (*types.Transaction, error) {
	return _TokenBridge.Contract.DepositToLayer(&_TokenBridge.TransactOpts, _amount, _tip, _layerRecipient)
}

// DepositToLayer is a paid mutator transaction binding the contract method 0xf4913c7e.
//
// Solidity: function depositToLayer(uint256 _amount, uint256 _tip, string _layerRecipient) returns()
func (_TokenBridge *TokenBridgeTransactorSession) DepositToLayer(_amount *big.Int, _tip *big.Int, _layerRecipient string) (*types.Transaction, error) {
	return _TokenBridge.Contract.DepositToLayer(&_TokenBridge.TransactOpts, _amount, _tip, _layerRecipient)
}

// WithdrawFromLayer is a paid mutator transaction binding the contract method 0xe5d8b9dc.
//
// Solidity: function withdrawFromLayer((bytes32,(bytes,uint256,uint256,uint256,uint256),uint256) _attestData, (address,uint256)[] _valset, (uint8,bytes32,bytes32)[] _sigs, uint256 _depositId) returns()
func (_TokenBridge *TokenBridgeTransactor) WithdrawFromLayer(opts *bind.TransactOpts, _attestData OracleAttestationData, _valset []Validator, _sigs []Signature, _depositId *big.Int) (*types.Transaction, error) {
	return _TokenBridge.contract.Transact(opts, "withdrawFromLayer", _attestData, _valset, _sigs, _depositId)
}

// WithdrawFromLayer is a paid mutator transaction binding the contract method 0xe5d8b9dc.
//
// Solidity: function withdrawFromLayer((bytes32,(bytes,uint256,uint256,uint256,uint256),uint256) _attestData, (address,uint256)[] _valset, (uint8,bytes32,bytes32)[] _sigs, uint256 _depositId) returns()
func (_TokenBridge *TokenBridgeSession) WithdrawFromLayer(_attestData OracleAttestationData, _valset []Validator, _sigs []Signature, _depositId *big.Int) (*types.Transaction, error) {
	return _TokenBridge.Contract.WithdrawFromLayer(&_TokenBridge.TransactOpts, _attestData, _valset, _sigs, _depositId)
}

// WithdrawFromLayer is a paid mutator transaction binding the contract method 0xe5d8b9dc.
//
// Solidity: function withdrawFromLayer((bytes32,(bytes,uint256,uint256,uint256,uint256),uint256) _attestData, (address,uint256)[] _valset, (uint8,bytes32,bytes32)[] _sigs, uint256 _depositId) returns()
func (_TokenBridge *TokenBridgeTransactorSession) WithdrawFromLayer(_attestData OracleAttestationData, _valset []Validator, _sigs []Signature, _depositId *big.Int) (*types.Transaction, error) {
	return _TokenBridge.Contract.WithdrawFromLayer(&_TokenBridge.TransactOpts, _attestData, _valset, _sigs, _depositId)
}

// TokenBridgeDepositIterator is returned from FilterDeposit and is used to iterate over the raw logs and unpacked data for Deposit events raised by the TokenBridge contract.
type TokenBridgeDepositIterator struct {
	Event *TokenBridgeDeposit // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenBridgeDepositIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenBridgeDeposit)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenBridgeDeposit)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenBridgeDepositIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenBridgeDepositIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenBridgeDeposit represents a Deposit event raised by the TokenBridge contract.
type TokenBridgeDeposit struct {
	DepositId *big.Int
	Sender    common.Address
	Recipient string
	Amount    *big.Int
	Tip       *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterDeposit is a free log retrieval operation binding the contract event 0xe9a436e6735e7a54b0d2505d14247a614f3af68dad813a7a46834b876b13d7c1.
//
// Solidity: event Deposit(uint256 _depositId, address _sender, string _recipient, uint256 _amount, uint256 _tip)
func (_TokenBridge *TokenBridgeFilterer) FilterDeposit(opts *bind.FilterOpts) (*TokenBridgeDepositIterator, error) {

	logs, sub, err := _TokenBridge.contract.FilterLogs(opts, "Deposit")
	if err != nil {
		return nil, err
	}
	return &TokenBridgeDepositIterator{contract: _TokenBridge.contract, event: "Deposit", logs: logs, sub: sub}, nil
}

// WatchDeposit is a free log subscription operation binding the contract event 0xe9a436e6735e7a54b0d2505d14247a614f3af68dad813a7a46834b876b13d7c1.
//
// Solidity: event Deposit(uint256 _depositId, address _sender, string _recipient, uint256 _amount, uint256 _tip)
func (_TokenBridge *TokenBridgeFilterer) WatchDeposit(opts *bind.WatchOpts, sink chan<- *TokenBridgeDeposit) (event.Subscription, error) {

	logs, sub, err := _TokenBridge.contract.WatchLogs(opts, "Deposit")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenBridgeDeposit)
				if err := _TokenBridge.contract.UnpackLog(event, "Deposit", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDeposit is a log parse operation binding the contract event 0xe9a436e6735e7a54b0d2505d14247a614f3af68dad813a7a46834b876b13d7c1.
//
// Solidity: event Deposit(uint256 _depositId, address _sender, string _recipient, uint256 _amount, uint256 _tip)
func (_TokenBridge *TokenBridgeFilterer) ParseDeposit(log types.Log) (*TokenBridgeDeposit, error) {
	event := new(TokenBridgeDeposit)
	if err := _TokenBridge.contract.UnpackLog(event, "Deposit", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TokenBridgeWithdrawalIterator is returned from FilterWithdrawal and is used to iterate over the raw logs and unpacked data for Withdrawal events raised by the TokenBridge contract.
type TokenBridgeWithdrawalIterator struct {
	Event *TokenBridgeWithdrawal // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenBridgeWithdrawalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenBridgeWithdrawal)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenBridgeWithdrawal)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenBridgeWithdrawalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenBridgeWithdrawalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenBridgeWithdrawal represents a Withdrawal event raised by the TokenBridge contract.
type TokenBridgeWithdrawal struct {
	DepositId *big.Int
	Sender    string
	Recipient common.Address
	Amount    *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterWithdrawal is a free log retrieval operation binding the contract event 0x1c25a916bf61b55f3abb9060e620d13d6937f8c2ab2b7a16be824ffde44acb2f.
//
// Solidity: event Withdrawal(uint256 _depositId, string _sender, address _recipient, uint256 _amount)
func (_TokenBridge *TokenBridgeFilterer) FilterWithdrawal(opts *bind.FilterOpts) (*TokenBridgeWithdrawalIterator, error) {

	logs, sub, err := _TokenBridge.contract.FilterLogs(opts, "Withdrawal")
	if err != nil {
		return nil, err
	}
	return &TokenBridgeWithdrawalIterator{contract: _TokenBridge.contract, event: "Withdrawal", logs: logs, sub: sub}, nil
}

// WatchWithdrawal is a free log subscription operation binding the contract event 0x1c25a916bf61b55f3abb9060e620d13d6937f8c2ab2b7a16be824ffde44acb2f.
//
// Solidity: event Withdrawal(uint256 _depositId, string _sender, address _recipient, uint256 _amount)
func (_TokenBridge *TokenBridgeFilterer) WatchWithdrawal(opts *bind.WatchOpts, sink chan<- *TokenBridgeWithdrawal) (event.Subscription, error) {

	logs, sub, err := _TokenBridge.contract.WatchLogs(opts, "Withdrawal")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenBridgeWithdrawal)
				if err := _TokenBridge.contract.UnpackLog(event, "Withdrawal", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWithdrawal is a log parse operation binding the contract event 0x1c25a916bf61b55f3abb9060e620d13d6937f8c2ab2b7a16be824ffde44acb2f.
//
// Solidity: event Withdrawal(uint256 _depositId, string _sender, address _recipient, uint256 _amount)
func (_TokenBridge *TokenBridgeFilterer) ParseWithdrawal(log types.Log) (*TokenBridgeWithdrawal, error) {
	event := new(TokenBridgeWithdrawal)
	if err := _TokenBridge.contract.UnpackLog(event, "Withdrawal", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
